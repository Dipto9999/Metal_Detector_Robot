0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Tue Apr 02 12:46:24 2024
0000              5   ;--------------------------------------------------------
                  5   $name Robot_Base
                  6   $optc51 --model-small
0000              8            R_DSEG    segment data
0000              9            R_CSEG    segment code
0000             10            R_BSEG    segment bit
0000             11            R_XSEG    segment xdata
0000             12            R_PSEG    segment xdata
0000             13            R_ISEG    segment idata
0000             14            R_OSEG    segment data overlay
0000             15            BIT_BANK  segment data overlay
0000             16            R_HOME    segment code
0000             17            R_GSINIT  segment code
0000             18            R_IXSEG   segment xdata
0000             19            R_CONST   segment code
0000             20            R_XINIT   segment code
0000             21            R_DINIT   segment code
0000             22   
0000             23   ;--------------------------------------------------------
0000             24   ; Public variables in this module
0000             25   ;--------------------------------------------------------
0000             26            public _InitPinADC_PARM_2
0000             27            public _PrintNumber_HexDigit_1_81
0000             28            public _main
0000             29            public _PrintNumber
0000             30            public _eputs
0000             31            public _GetPeriod
0000             32            public _waitms
0000             33            public _Timer3us
0000             34            public _Timer5_ISR
0000             35            public _ADC_at_Pin
0000             36            public _InitPinADC
0000             37            public _InitADC
0000             38            public __c51_external_startup
0000             39            public _PrintNumber_PARM_3
0000             40            public _PrintNumber_PARM_2
0000             41            public _servo2
0000             42            public _servo1
0000             43            public _servo_counter
0000             44   ;--------------------------------------------------------
0000             45   ; Special Function Registers
0000             46   ;--------------------------------------------------------
0000             47   _ACC            DATA 0xe0
0000             48   _ADC0ASAH       DATA 0xb6
0000             49   _ADC0ASAL       DATA 0xb5
0000             50   _ADC0ASCF       DATA 0xa1
0000             51   _ADC0ASCT       DATA 0xc7
0000             52   _ADC0CF0        DATA 0xbc
0000             53   _ADC0CF1        DATA 0xb9
0000             54   _ADC0CF2        DATA 0xdf
0000             55   _ADC0CN0        DATA 0xe8
0000             56   _ADC0CN1        DATA 0xb2
0000             57   _ADC0CN2        DATA 0xb3
0000             58   _ADC0GTH        DATA 0xc4
0000             59   _ADC0GTL        DATA 0xc3
0000             60   _ADC0H          DATA 0xbe
0000             61   _ADC0L          DATA 0xbd
0000             62   _ADC0LTH        DATA 0xc6
0000             63   _ADC0LTL        DATA 0xc5
0000             64   _ADC0MX         DATA 0xbb
0000             65   _B              DATA 0xf0
0000             66   _CKCON0         DATA 0x8e
0000             67   _CKCON1         DATA 0xa6
0000             68   _CLEN0          DATA 0xc6
0000             69   _CLIE0          DATA 0xc7
0000             70   _CLIF0          DATA 0xe8
0000             71   _CLKSEL         DATA 0xa9
0000             72   _CLOUT0         DATA 0xd1
0000             73   _CLU0CF         DATA 0xb1
0000             74   _CLU0FN         DATA 0xaf
0000             75   _CLU0MX         DATA 0x84
0000             76   _CLU1CF         DATA 0xb3
0000             77   _CLU1FN         DATA 0xb2
0000             78   _CLU1MX         DATA 0x85
0000             79   _CLU2CF         DATA 0xb6
0000             80   _CLU2FN         DATA 0xb5
0000             81   _CLU2MX         DATA 0x91
0000             82   _CLU3CF         DATA 0xbf
0000             83   _CLU3FN         DATA 0xbe
0000             84   _CLU3MX         DATA 0xae
0000             85   _CMP0CN0        DATA 0x9b
0000             86   _CMP0CN1        DATA 0x99
0000             87   _CMP0MD         DATA 0x9d
0000             88   _CMP0MX         DATA 0x9f
0000             89   _CMP1CN0        DATA 0xbf
0000             90   _CMP1CN1        DATA 0xac
0000             91   _CMP1MD         DATA 0xab
0000             92   _CMP1MX         DATA 0xaa
0000             93   _CRC0CN0        DATA 0xce
0000             94   _CRC0CN1        DATA 0x86
0000             95   _CRC0CNT        DATA 0xd3
0000             96   _CRC0DAT        DATA 0xcb
0000             97   _CRC0FLIP       DATA 0xcf
0000             98   _CRC0IN         DATA 0xca
0000             99   _CRC0ST         DATA 0xd2
0000            100   _DAC0CF0        DATA 0x91
0000            101   _DAC0CF1        DATA 0x92
0000            102   _DAC0H          DATA 0x85
0000            103   _DAC0L          DATA 0x84
0000            104   _DAC1CF0        DATA 0x93
0000            105   _DAC1CF1        DATA 0x94
0000            106   _DAC1H          DATA 0x8a
0000            107   _DAC1L          DATA 0x89
0000            108   _DAC2CF0        DATA 0x95
0000            109   _DAC2CF1        DATA 0x96
0000            110   _DAC2H          DATA 0x8c
0000            111   _DAC2L          DATA 0x8b
0000            112   _DAC3CF0        DATA 0x9a
0000            113   _DAC3CF1        DATA 0x9c
0000            114   _DAC3H          DATA 0x8e
0000            115   _DAC3L          DATA 0x8d
0000            116   _DACGCF0        DATA 0x88
0000            117   _DACGCF1        DATA 0x98
0000            118   _DACGCF2        DATA 0xa2
0000            119   _DERIVID        DATA 0xad
0000            120   _DEVICEID       DATA 0xb5
0000            121   _DPH            DATA 0x83
0000            122   _DPL            DATA 0x82
0000            123   _EIE1           DATA 0xe6
0000            124   _EIE2           DATA 0xf3
0000            125   _EIP1           DATA 0xbb
0000            126   _EIP1H          DATA 0xee
0000            127   _EIP2           DATA 0xed
0000            128   _EIP2H          DATA 0xf6
0000            129   _EMI0CN         DATA 0xe7
0000            130   _FLKEY          DATA 0xb7
0000            131   _HFO0CAL        DATA 0xc7
0000            132   _HFO1CAL        DATA 0xd6
0000            133   _HFOCN          DATA 0xef
0000            134   _I2C0ADM        DATA 0xff
0000            135   _I2C0CN0        DATA 0xba
0000            136   _I2C0DIN        DATA 0xbc
0000            137   _I2C0DOUT       DATA 0xbb
0000            138   _I2C0FCN0       DATA 0xad
0000            139   _I2C0FCN1       DATA 0xab
0000            140   _I2C0FCT        DATA 0xf5
0000            141   _I2C0SLAD       DATA 0xbd
0000            142   _I2C0STAT       DATA 0xb9
0000            143   _IE             DATA 0xa8
0000            144   _IP             DATA 0xb8
0000            145   _IPH            DATA 0xf2
0000            146   _IT01CF         DATA 0xe4
0000            147   _LFO0CN         DATA 0xb1
0000            148   _P0             DATA 0x80
0000            149   _P0MASK         DATA 0xfe
0000            150   _P0MAT          DATA 0xfd
0000            151   _P0MDIN         DATA 0xf1
0000            152   _P0MDOUT        DATA 0xa4
0000            153   _P0SKIP         DATA 0xd4
0000            154   _P1             DATA 0x90
0000            155   _P1MASK         DATA 0xee
0000            156   _P1MAT          DATA 0xed
0000            157   _P1MDIN         DATA 0xf2
0000            158   _P1MDOUT        DATA 0xa5
0000            159   _P1SKIP         DATA 0xd5
0000            160   _P2             DATA 0xa0
0000            161   _P2MASK         DATA 0xfc
0000            162   _P2MAT          DATA 0xfb
0000            163   _P2MDIN         DATA 0xf3
0000            164   _P2MDOUT        DATA 0xa6
0000            165   _P2SKIP         DATA 0xcc
0000            166   _P3             DATA 0xb0
0000            167   _P3MDIN         DATA 0xf4
0000            168   _P3MDOUT        DATA 0x9c
0000            169   _PCA0CENT       DATA 0x9e
0000            170   _PCA0CLR        DATA 0x9c
0000            171   _PCA0CN0        DATA 0xd8
0000            172   _PCA0CPH0       DATA 0xfc
0000            173   _PCA0CPH1       DATA 0xea
0000            174   _PCA0CPH2       DATA 0xec
0000            175   _PCA0CPH3       DATA 0xf5
0000            176   _PCA0CPH4       DATA 0x85
0000            177   _PCA0CPH5       DATA 0xde
0000            178   _PCA0CPL0       DATA 0xfb
0000            179   _PCA0CPL1       DATA 0xe9
0000            180   _PCA0CPL2       DATA 0xeb
0000            181   _PCA0CPL3       DATA 0xf4
0000            182   _PCA0CPL4       DATA 0x84
0000            183   _PCA0CPL5       DATA 0xdd
0000            184   _PCA0CPM0       DATA 0xda
0000            185   _PCA0CPM1       DATA 0xdb
0000            186   _PCA0CPM2       DATA 0xdc
0000            187   _PCA0CPM3       DATA 0xae
0000            188   _PCA0CPM4       DATA 0xaf
0000            189   _PCA0CPM5       DATA 0xcc
0000            190   _PCA0H          DATA 0xfa
0000            191   _PCA0L          DATA 0xf9
0000            192   _PCA0MD         DATA 0xd9
0000            193   _PCA0POL        DATA 0x96
0000            194   _PCA0PWM        DATA 0xf7
0000            195   _PCON0          DATA 0x87
0000            196   _PCON1          DATA 0xcd
0000            197   _PFE0CN         DATA 0xc1
0000            198   _PRTDRV         DATA 0xf6
0000            199   _PSCTL          DATA 0x8f
0000            200   _PSTAT0         DATA 0xaa
0000            201   _PSW            DATA 0xd0
0000            202   _REF0CN         DATA 0xd1
0000            203   _REG0CN         DATA 0xc9
0000            204   _REVID          DATA 0xb6
0000            205   _RSTSRC         DATA 0xef
0000            206   _SBCON1         DATA 0x94
0000            207   _SBRLH1         DATA 0x96
0000            208   _SBRLL1         DATA 0x95
0000            209   _SBUF           DATA 0x99
0000            210   _SBUF0          DATA 0x99
0000            211   _SBUF1          DATA 0x92
0000            212   _SCON           DATA 0x98
0000            213   _SCON0          DATA 0x98
0000            214   _SCON1          DATA 0xc8
0000            215   _SFRPAGE        DATA 0xa7
0000            216   _SFRPGCN        DATA 0xbc
0000            217   _SFRSTACK       DATA 0xd7
0000            218   _SMB0ADM        DATA 0xd6
0000            219   _SMB0ADR        DATA 0xd7
0000            220   _SMB0CF         DATA 0xc1
0000            221   _SMB0CN0        DATA 0xc0
0000            222   _SMB0DAT        DATA 0xc2
0000            223   _SMB0FCN0       DATA 0xc3
0000            224   _SMB0FCN1       DATA 0xc4
0000            225   _SMB0FCT        DATA 0xef
0000            226   _SMB0RXLN       DATA 0xc5
0000            227   _SMB0TC         DATA 0xac
0000            228   _SMOD1          DATA 0x93
0000            229   _SP             DATA 0x81
0000            230   _SPI0CFG        DATA 0xa1
0000            231   _SPI0CKR        DATA 0xa2
0000            232   _SPI0CN0        DATA 0xf8
0000            233   _SPI0DAT        DATA 0xa3
0000            234   _SPI0FCN0       DATA 0x9a
0000            235   _SPI0FCN1       DATA 0x9b
0000            236   _SPI0FCT        DATA 0xf7
0000            237   _SPI0PCF        DATA 0xdf
0000            238   _TCON           DATA 0x88
0000            239   _TH0            DATA 0x8c
0000            240   _TH1            DATA 0x8d
0000            241   _TL0            DATA 0x8a
0000            242   _TL1            DATA 0x8b
0000            243   _TMOD           DATA 0x89
0000            244   _TMR2CN0        DATA 0xc8
0000            245   _TMR2CN1        DATA 0xfd
0000            246   _TMR2H          DATA 0xcf
0000            247   _TMR2L          DATA 0xce
0000            248   _TMR2RLH        DATA 0xcb
0000            249   _TMR2RLL        DATA 0xca
0000            250   _TMR3CN0        DATA 0x91
0000            251   _TMR3CN1        DATA 0xfe
0000            252   _TMR3H          DATA 0x95
0000            253   _TMR3L          DATA 0x94
0000            254   _TMR3RLH        DATA 0x93
0000            255   _TMR3RLL        DATA 0x92
0000            256   _TMR4CN0        DATA 0x98
0000            257   _TMR4CN1        DATA 0xff
0000            258   _TMR4H          DATA 0xa5
0000            259   _TMR4L          DATA 0xa4
0000            260   _TMR4RLH        DATA 0xa3
0000            261   _TMR4RLL        DATA 0xa2
0000            262   _TMR5CN0        DATA 0xc0
0000            263   _TMR5CN1        DATA 0xf1
0000            264   _TMR5H          DATA 0xd5
0000            265   _TMR5L          DATA 0xd4
0000            266   _TMR5RLH        DATA 0xd3
0000            267   _TMR5RLL        DATA 0xd2
0000            268   _UART0PCF       DATA 0xd9
0000            269   _UART1FCN0      DATA 0x9d
0000            270   _UART1FCN1      DATA 0xd8
0000            271   _UART1FCT       DATA 0xfa
0000            272   _UART1LIN       DATA 0x9e
0000            273   _UART1PCF       DATA 0xda
0000            274   _VDM0CN         DATA 0xff
0000            275   _WDTCN          DATA 0x97
0000            276   _XBR0           DATA 0xe1
0000            277   _XBR1           DATA 0xe2
0000            278   _XBR2           DATA 0xe3
0000            279   _XOSC0CN        DATA 0x86
0000            280   _DPTR           DATA 0x8382
0000            281   _TMR2RL         DATA 0xcbca
0000            282   _TMR3RL         DATA 0x9392
0000            283   _TMR4RL         DATA 0xa3a2
0000            284   _TMR5RL         DATA 0xd3d2
0000            285   _TMR0           DATA 0x8c8a
0000            286   _TMR1           DATA 0x8d8b
0000            287   _TMR2           DATA 0xcfce
0000            288   _TMR3           DATA 0x9594
0000            289   _TMR4           DATA 0xa5a4
0000            290   _TMR5           DATA 0xd5d4
0000            291   _SBRL1          DATA 0x9695
0000            292   _PCA0           DATA 0xfaf9
0000            293   _PCA0CP0        DATA 0xfcfb
0000            294   _PCA0CP1        DATA 0xeae9
0000            295   _PCA0CP2        DATA 0xeceb
0000            296   _PCA0CP3        DATA 0xf5f4
0000            297   _PCA0CP4        DATA 0x8584
0000            298   _PCA0CP5        DATA 0xdedd
0000            299   _ADC0ASA        DATA 0xb6b5
0000            300   _ADC0GT         DATA 0xc4c3
0000            301   _ADC0           DATA 0xbebd
0000            302   _ADC0LT         DATA 0xc6c5
0000            303   _DAC0           DATA 0x8584
0000            304   _DAC1           DATA 0x8a89
0000            305   _DAC2           DATA 0x8c8b
0000            306   _DAC3           DATA 0x8e8d
0000            307   ;--------------------------------------------------------
0000            308   ; special function bits
0000            309   ;--------------------------------------------------------
0000            310   _ACC_0          BIT 0xe0
0000            311   _ACC_1          BIT 0xe1
0000            312   _ACC_2          BIT 0xe2
0000            313   _ACC_3          BIT 0xe3
0000            314   _ACC_4          BIT 0xe4
0000            315   _ACC_5          BIT 0xe5
0000            316   _ACC_6          BIT 0xe6
0000            317   _ACC_7          BIT 0xe7
0000            318   _TEMPE          BIT 0xe8
0000            319   _ADGN0          BIT 0xe9
0000            320   _ADGN1          BIT 0xea
0000            321   _ADWINT         BIT 0xeb
0000            322   _ADBUSY         BIT 0xec
0000            323   _ADINT          BIT 0xed
0000            324   _IPOEN          BIT 0xee
0000            325   _ADEN           BIT 0xef
0000            326   _B_0            BIT 0xf0
0000            327   _B_1            BIT 0xf1
0000            328   _B_2            BIT 0xf2
0000            329   _B_3            BIT 0xf3
0000            330   _B_4            BIT 0xf4
0000            331   _B_5            BIT 0xf5
0000            332   _B_6            BIT 0xf6
0000            333   _B_7            BIT 0xf7
0000            334   _C0FIF          BIT 0xe8
0000            335   _C0RIF          BIT 0xe9
0000            336   _C1FIF          BIT 0xea
0000            337   _C1RIF          BIT 0xeb
0000            338   _C2FIF          BIT 0xec
0000            339   _C2RIF          BIT 0xed
0000            340   _C3FIF          BIT 0xee
0000            341   _C3RIF          BIT 0xef
0000            342   _D1SRC0         BIT 0x88
0000            343   _D1SRC1         BIT 0x89
0000            344   _D1AMEN         BIT 0x8a
0000            345   _D01REFSL       BIT 0x8b
0000            346   _D3SRC0         BIT 0x8c
0000            347   _D3SRC1         BIT 0x8d
0000            348   _D3AMEN         BIT 0x8e
0000            349   _D23REFSL       BIT 0x8f
0000            350   _D0UDIS         BIT 0x98
0000            351   _D1UDIS         BIT 0x99
0000            352   _D2UDIS         BIT 0x9a
0000            353   _D3UDIS         BIT 0x9b
0000            354   _EX0            BIT 0xa8
0000            355   _ET0            BIT 0xa9
0000            356   _EX1            BIT 0xaa
0000            357   _ET1            BIT 0xab
0000            358   _ES0            BIT 0xac
0000            359   _ET2            BIT 0xad
0000            360   _ESPI0          BIT 0xae
0000            361   _EA             BIT 0xaf
0000            362   _PX0            BIT 0xb8
0000            363   _PT0            BIT 0xb9
0000            364   _PX1            BIT 0xba
0000            365   _PT1            BIT 0xbb
0000            366   _PS0            BIT 0xbc
0000            367   _PT2            BIT 0xbd
0000            368   _PSPI0          BIT 0xbe
0000            369   _P0_0           BIT 0x80
0000            370   _P0_1           BIT 0x81
0000            371   _P0_2           BIT 0x82
0000            372   _P0_3           BIT 0x83
0000            373   _P0_4           BIT 0x84
0000            374   _P0_5           BIT 0x85
0000            375   _P0_6           BIT 0x86
0000            376   _P0_7           BIT 0x87
0000            377   _P1_0           BIT 0x90
0000            378   _P1_1           BIT 0x91
0000            379   _P1_2           BIT 0x92
0000            380   _P1_3           BIT 0x93
0000            381   _P1_4           BIT 0x94
0000            382   _P1_5           BIT 0x95
0000            383   _P1_6           BIT 0x96
0000            384   _P1_7           BIT 0x97
0000            385   _P2_0           BIT 0xa0
0000            386   _P2_1           BIT 0xa1
0000            387   _P2_2           BIT 0xa2
0000            388   _P2_3           BIT 0xa3
0000            389   _P2_4           BIT 0xa4
0000            390   _P2_5           BIT 0xa5
0000            391   _P2_6           BIT 0xa6
0000            392   _P3_0           BIT 0xb0
0000            393   _P3_1           BIT 0xb1
0000            394   _P3_2           BIT 0xb2
0000            395   _P3_3           BIT 0xb3
0000            396   _P3_4           BIT 0xb4
0000            397   _P3_7           BIT 0xb7
0000            398   _CCF0           BIT 0xd8
0000            399   _CCF1           BIT 0xd9
0000            400   _CCF2           BIT 0xda
0000            401   _CCF3           BIT 0xdb
0000            402   _CCF4           BIT 0xdc
0000            403   _CCF5           BIT 0xdd
0000            404   _CR             BIT 0xde
0000            405   _CF             BIT 0xdf
0000            406   _PARITY         BIT 0xd0
0000            407   _F1             BIT 0xd1
0000            408   _OV             BIT 0xd2
0000            409   _RS0            BIT 0xd3
0000            410   _RS1            BIT 0xd4
0000            411   _F0             BIT 0xd5
0000            412   _AC             BIT 0xd6
0000            413   _CY             BIT 0xd7
0000            414   _RI             BIT 0x98
0000            415   _TI             BIT 0x99
0000            416   _RB8            BIT 0x9a
0000            417   _TB8            BIT 0x9b
0000            418   _REN            BIT 0x9c
0000            419   _CE             BIT 0x9d
0000            420   _SMODE          BIT 0x9e
0000            421   _RI1            BIT 0xc8
0000            422   _TI1            BIT 0xc9
0000            423   _RBX1           BIT 0xca
0000            424   _TBX1           BIT 0xcb
0000            425   _REN1           BIT 0xcc
0000            426   _PERR1          BIT 0xcd
0000            427   _OVR1           BIT 0xce
0000            428   _SI             BIT 0xc0
0000            429   _ACK            BIT 0xc1
0000            430   _ARBLOST        BIT 0xc2
0000            431   _ACKRQ          BIT 0xc3
0000            432   _STO            BIT 0xc4
0000            433   _STA            BIT 0xc5
0000            434   _TXMODE         BIT 0xc6
0000            435   _MASTER         BIT 0xc7
0000            436   _SPIEN          BIT 0xf8
0000            437   _TXNF           BIT 0xf9
0000            438   _NSSMD0         BIT 0xfa
0000            439   _NSSMD1         BIT 0xfb
0000            440   _RXOVRN         BIT 0xfc
0000            441   _MODF           BIT 0xfd
0000            442   _WCOL           BIT 0xfe
0000            443   _SPIF           BIT 0xff
0000            444   _IT0            BIT 0x88
0000            445   _IE0            BIT 0x89
0000            446   _IT1            BIT 0x8a
0000            447   _IE1            BIT 0x8b
0000            448   _TR0            BIT 0x8c
0000            449   _TF0            BIT 0x8d
0000            450   _TR1            BIT 0x8e
0000            451   _TF1            BIT 0x8f
0000            452   _T2XCLK0        BIT 0xc8
0000            453   _T2XCLK1        BIT 0xc9
0000            454   _TR2            BIT 0xca
0000            455   _T2SPLIT        BIT 0xcb
0000            456   _TF2CEN         BIT 0xcc
0000            457   _TF2LEN         BIT 0xcd
0000            458   _TF2L           BIT 0xce
0000            459   _TF2H           BIT 0xcf
0000            460   _T4XCLK0        BIT 0x98
0000            461   _T4XCLK1        BIT 0x99
0000            462   _TR4            BIT 0x9a
0000            463   _T4SPLIT        BIT 0x9b
0000            464   _TF4CEN         BIT 0x9c
0000            465   _TF4LEN         BIT 0x9d
0000            466   _TF4L           BIT 0x9e
0000            467   _TF4H           BIT 0x9f
0000            468   _T5XCLK0        BIT 0xc0
0000            469   _T5XCLK1        BIT 0xc1
0000            470   _TR5            BIT 0xc2
0000            471   _T5SPLIT        BIT 0xc3
0000            472   _TF5CEN         BIT 0xc4
0000            473   _TF5LEN         BIT 0xc5
0000            474   _TF5L           BIT 0xc6
0000            475   _TF5H           BIT 0xc7
0000            476   _RIE            BIT 0xd8
0000            477   _RXTO0          BIT 0xd9
0000            478   _RXTO1          BIT 0xda
0000            479   _RFRQ           BIT 0xdb
0000            480   _TIE            BIT 0xdc
0000            481   _TXHOLD         BIT 0xdd
0000            482   _TXNF1          BIT 0xde
0000            483   _TFRQ           BIT 0xdf
0000            484   ;--------------------------------------------------------
0000            485   ; overlayable register banks
0000            486   ;--------------------------------------------------------
0000            487            rbank0 segment data overlay
0000            488   ;--------------------------------------------------------
0000            489   ; internal ram data
0000            490   ;--------------------------------------------------------
0000            491            rseg R_DSEG
0000            492   _servo_counter:
0000            493            ds 2
0002            494   _servo1:
0002            495            ds 1
0003            496   _servo2:
0003            497            ds 1
0004            498   _PrintNumber_PARM_2:
0004            499            ds 2
0006            500   _PrintNumber_PARM_3:
0006            501            ds 2
0008            502   _PrintNumber_val_1_80:
0008            503            ds 4
000C            504   _PrintNumber_j_1_81:
000C            505            ds 2
000E            506   _PrintNumber_sloc0_1_0:
000E            507            ds 2
0010            508   _PrintNumber_sloc1_1_0:
0010            509            ds 4
0014            510   ;--------------------------------------------------------
0014            511   ; overlayable items in internal ram 
0014            512   ;--------------------------------------------------------
0000            513            rseg    R_OSEG
0000            514   _InitPinADC_PARM_2:
0000            515            ds 1
0001            516            rseg    R_OSEG
0001            517            rseg    R_OSEG
0001            518            rseg    R_OSEG
0001            519   ;--------------------------------------------------------
0001            520   ; indirectly addressable internal ram data
0001            521   ;--------------------------------------------------------
0000            522            rseg R_ISEG
0000            523   ;--------------------------------------------------------
0000            524   ; absolute internal ram data
0000            525   ;--------------------------------------------------------
0000            526            DSEG
0000            527   ;--------------------------------------------------------
0000            528   ; bit data
0000            529   ;--------------------------------------------------------
0000            530            rseg R_BSEG
0000            531   ;--------------------------------------------------------
0000            532   ; paged external ram data
0000            533   ;--------------------------------------------------------
0000            534            rseg R_PSEG
0000            535   ;--------------------------------------------------------
0000            536   ; external ram data
0000            537   ;--------------------------------------------------------
0000            538            rseg R_XSEG
0000            539   _PrintNumber_buff_1_81:
0000            540            ds 33
0021            541   ;--------------------------------------------------------
0021            542   ; absolute external ram data
0021            543   ;--------------------------------------------------------
0000            544            XSEG
0000            545   ;--------------------------------------------------------
0000            546   ; external initialized ram data
0000            547   ;--------------------------------------------------------
0000            548            rseg R_IXSEG
0000            549            rseg R_HOME
0000            550            rseg R_GSINIT
0000            551            rseg R_CSEG
0000            552   ;--------------------------------------------------------
0000            553   ; Reset entry point and interrupt vectors
0000            554   ;--------------------------------------------------------
0000            555            CSEG at 0x0000
0000 020000     556            ljmp    _crt0
0093            557            CSEG at 0x0093
0093 020000     558            ljmp    _Timer5_ISR
0096            559   ;--------------------------------------------------------
0096            560   ; global & static initialisations
0096            561   ;--------------------------------------------------------
0000            562            rseg R_HOME
0000            563            rseg R_GSINIT
0000            564            rseg R_GSINIT
0000            565   ;--------------------------------------------------------
0000            566   ; data variables initialization
0000            567   ;--------------------------------------------------------
0000            568            rseg R_DINIT
0000            569   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:5: volatile unsigned int servo_counter=0;
0000 E4         570            clr     a
0001 F5E0       571            mov     _servo_counter,a
0003 F5E1       572            mov     (_servo_counter + 1),a
0005            573   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:6: volatile unsigned char servo1=150, servo2=150;
0005 75A096     574            mov     _servo1,#0x96
0008            575   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:6: 
0008 756096     576            mov     _servo2,#0x96
000B            577            ; The linker places a 'ret' at the end of segment R_DINIT.
000B            578   ;--------------------------------------------------------
000B            579   ; code
000B            580   ;--------------------------------------------------------
0000            581            rseg R_CSEG
0000            582   ;------------------------------------------------------------
0000            583   ;Allocation info for local variables in function '_c51_external_startup'
0000            584   ;------------------------------------------------------------
0000            585   ;------------------------------------------------------------
0000            586   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:30: char _c51_external_startup (void)
0000            587   ;        -----------------------------------------
0000            588   ;         function _c51_external_startup
0000            589   ;        -----------------------------------------
0000            590   __c51_external_startup:
0000            591            using   0
0000            592   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:33: SFRPAGE = 0x00;
0000 75A700     593            mov     _SFRPAGE,#0x00
0003            594   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:34: WDTCN = 0xDE; //First key
0003 7597DE     595            mov     _WDTCN,#0xDE
0006            596   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:35: WDTCN = 0xAD; //Second key
0006 7597AD     597            mov     _WDTCN,#0xAD
0009            598   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:37: VDM0CN |= 0x80;
0009 43FF80     599            orl     _VDM0CN,#0x80
000C            600   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:38: RSTSRC = 0x02;
000C 75EF02     601            mov     _RSTSRC,#0x02
000F            602   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:45: SFRPAGE = 0x10;
000F 75A710     603            mov     _SFRPAGE,#0x10
0012            604   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:46: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     605            mov     _PFE0CN,#0x20
0015            606   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:47: SFRPAGE = 0x00;
0015 75A700     607            mov     _SFRPAGE,#0x00
0018            608   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:68: CLKSEL = 0x00;
0018 75A900     609            mov     _CLKSEL,#0x00
001B            610   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:69: CLKSEL = 0x00;
001B 75A900     611            mov     _CLKSEL,#0x00
001E            612   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:70: while ((CLKSEL & 0x80) == 0);
001E            613   L002001?:
001E E5A9       614            mov     a,_CLKSEL
0020 30E760     615            jnb     acc.7,L002001?
0023            616   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:71: CLKSEL = 0x03;
0023 75A903     617            mov     _CLKSEL,#0x03
0026            618   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:72: CLKSEL = 0x03;
0026 75A903     619            mov     _CLKSEL,#0x03
0029            620   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:73: while ((CLKSEL & 0x80) == 0);
0029            621   L002004?:
0029 E5A9       622            mov     a,_CLKSEL
002B 30E7E0     623            jnb     acc.7,L002004?
002E            624   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:80: P0MDOUT |= 0b_0001_0000; // Configure UART0 TX (P0.4) as push-pull output
002E 43A410     625            orl     _P0MDOUT,#0x10
0031            626   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:81: XBR0     = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)
0031 75E101     627            mov     _XBR0,#0x01
0034            628   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:82: XBR1     = 0X00; //
0034 75E200     629            mov     _XBR1,#0x00
0037            630   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:83: XBR2     = 0x40; // Enable crossbar and weak pull-ups
0037 75E340     631            mov     _XBR2,#0x40
003A            632   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:89: SCON0 = 0x10;
003A 759810     633            mov     _SCON0,#0x10
003D            634   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:90: CKCON0 |= 0b_0000_0000 ; // Timer 1 uses the system clock divided by 12.
003D 858E8E     635            mov     _CKCON0,_CKCON0
0040            636   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:91: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
0040 758DE6     637            mov     _TH1,#0xE6
0043            638   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:92: TL1 = TH1;      // Init Timer1
0043 858D8B     639            mov     _TL1,_TH1
0046            640   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:93: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0046 53890F     641            anl     _TMOD,#0x0F
0049            642   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:94: TMOD |=  0x20;
0049 438920     643            orl     _TMOD,#0x20
004C            644   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:95: TR1 = 1; // START Timer1
004C D28E       645            setb    _TR1
004E            646   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:96: TI = 1;  // Indicate TX0 ready
004E D299       647            setb    _TI
0050            648   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:99: SFRPAGE=0x10;
0050 75A710     649            mov     _SFRPAGE,#0x10
0053            650   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:100: TMR5CN0=0x00;
0053 75C000     651            mov     _TMR5CN0,#0x00
0056            652   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:101: TMR5=0xffff;   // Set to reload immediately
0056 75D4FF     653            mov     _TMR5,#0xFF
0059 75D5FF     654            mov     (_TMR5 >> 8),#0xFF
005C            655   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:102: EIE2|=0b_0000_1000; // Enable Timer5 interrupts
005C 43F308     656            orl     _EIE2,#0x08
005F            657   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:103: TR5=1;         // Start Timer5 (TMR5CN0 is bit addressable)
005F D2C2       658            setb    _TR5
0061            659   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:105: EA=1;
0061 D2AF       660            setb    _EA
0063            661   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:107: SFRPAGE=0x00;
0063 75A700     662            mov     _SFRPAGE,#0x00
0066            663   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:109: return 0;
0066 758200     664            mov     dpl,#0x00
0069 22         665            ret
006A            666   ;------------------------------------------------------------
006A            667   ;Allocation info for local variables in function 'InitADC'
006A            668   ;------------------------------------------------------------
006A            669   ;------------------------------------------------------------
006A            670   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:112: void InitADC (void)
006A            671   ;        -----------------------------------------
006A            672   ;         function InitADC
006A            673   ;        -----------------------------------------
006A            674   _InitADC:
006A            675   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:114: SFRPAGE = 0x00;
006A 75A700     676            mov     _SFRPAGE,#0x00
006D            677   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:115: ADEN=0; // Disable ADC
006D C2EF       678            clr     _ADEN
006F            679   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:120: (0x0 << 0) ; // Accumulate n conversions: 0x0: 1, 0x1:4, 0x2:8, 0x3:16, 0x4:32
006F 75B280     680            mov     _ADC0CN1,#0x80
0072            681   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:124: (0x0 << 2); // 0:SYSCLK ADCCLK = SYSCLK. 1:HFOSC0 ADCCLK = HFOSC0.
0072 75BC20     682            mov     _ADC0CF0,#0x20
0075            683   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:128: (0x1E << 0); // Conversion Tracking Time. Tadtk = ADTK / (Fsarclk)
0075 75B91E     684            mov     _ADC0CF1,#0x1E
0078            685   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:137: (0x0 << 0) ; // TEMPE. 0: Disable the Temperature Sensor. 1: Enable the Temperature Sensor.
0078 75E800     686            mov     _ADC0CN0,#0x00
007B            687   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:142: (0x1F << 0); // ADPWR. Power Up Delay Time. Tpwrtime = ((4 * (ADPWR + 1)) + 2) / (Fadcclk)
007B 75DF3F     688            mov     _ADC0CF2,#0x3F
007E            689   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:146: (0x0 << 0) ; // ADCM. 0x0: ADBUSY, 0x1: TIMER0, 0x2: TIMER2, 0x3: TIMER3, 0x4: CNVSTR, 0x5: CEX5, 0x6: TIMER4, 0x7: TIMER5, 0x8: CLU0, 0x9: CLU1, 0xA: CLU2, 0xB: CLU3
007E 75B300     690            mov     _ADC0CN2,#0x00
0081            691   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:148: ADEN=1; // Enable ADC
0081 D2EF       692            setb    _ADEN
0083 22         693            ret
0084            694   ;------------------------------------------------------------
0084            695   ;Allocation info for local variables in function 'InitPinADC'
0084            696   ;------------------------------------------------------------
0084            697   ;pin_num                   Allocated with name '_InitPinADC_PARM_2'
0084            698   ;portno                    Allocated to registers r2 
0084            699   ;mask                      Allocated to registers r3 
0084            700   ;------------------------------------------------------------
0084            701   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:151: void InitPinADC (unsigned char portno, unsigned char pin_num)
0084            702   ;        -----------------------------------------
0084            703   ;         function InitPinADC
0084            704   ;        -----------------------------------------
0084            705   _InitPinADC:
0084 AA82       706            mov     r2,dpl
0086            707   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:155: mask=1<<pin_num;
0086 8560F0     708            mov     b,_InitPinADC_PARM_2
0089 05F0       709            inc     b
008B 7401       710            mov     a,#0x01
008D 8000       711            sjmp    L004013?
008F            712   L004011?:
008F 25E0       713            add     a,acc
0091            714   L004013?:
0091 D5F0E0     715            djnz    b,L004011?
0094 FB         716            mov     r3,a
0095            717   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:157: SFRPAGE = 0x20;
0095 75A720     718            mov     _SFRPAGE,#0x20
0098            719   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:158: switch (portno)
0098 BA0020     720            cjne    r2,#0x00,L004014?
009B 8000       721            sjmp    L004001?
009D            722   L004014?:
009D BA01A0     723            cjne    r2,#0x01,L004015?
00A0 8000       724            sjmp    L004002?
00A2            725   L004015?:
00A2            726   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:160: case 0:
00A2 BA0220     727            cjne    r2,#0x02,L004005?
00A5 8000       728            sjmp    L004003?
00A7            729   L004001?:
00A7            730   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:161: P0MDIN &= (~mask); // Set pin as analog input
00A7 EB         731            mov     a,r3
00A8 F4         732            cpl     a
00A9 FA         733            mov     r2,a
00AA 52F1       734            anl     _P0MDIN,a
00AC            735   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:162: P0SKIP |= mask; // Skip Crossbar decoding for this pin
00AC EB         736            mov     a,r3
00AD 42D4       737            orl     _P0SKIP,a
00AF            738   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:163: break;
00AF            739   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:164: case 1:
00AF 8000       740            sjmp    L004005?
00B1            741   L004002?:
00B1            742   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:165: P1MDIN &= (~mask); // Set pin as analog input
00B1 EB         743            mov     a,r3
00B2 F4         744            cpl     a
00B3 FA         745            mov     r2,a
00B4 52F2       746            anl     _P1MDIN,a
00B6            747   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:166: P1SKIP |= mask; // Skip Crossbar decoding for this pin
00B6 EB         748            mov     a,r3
00B7 42D5       749            orl     _P1SKIP,a
00B9            750   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:167: break;
00B9            751   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:168: case 2:
00B9 8000       752            sjmp    L004005?
00BB            753   L004003?:
00BB            754   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:169: P2MDIN &= (~mask); // Set pin as analog input
00BB EB         755            mov     a,r3
00BC F4         756            cpl     a
00BD FA         757            mov     r2,a
00BE 52F3       758            anl     _P2MDIN,a
00C0            759   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:170: P2SKIP |= mask; // Skip Crossbar decoding for this pin
00C0 EB         760            mov     a,r3
00C1 42CC       761            orl     _P2SKIP,a
00C3            762   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:174: }
00C3            763   L004005?:
00C3            764   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:175: SFRPAGE = 0x00;
00C3 75A700     765            mov     _SFRPAGE,#0x00
00C6 22         766            ret
00C7            767   ;------------------------------------------------------------
00C7            768   ;Allocation info for local variables in function 'ADC_at_Pin'
00C7            769   ;------------------------------------------------------------
00C7            770   ;pin                       Allocated to registers 
00C7            771   ;------------------------------------------------------------
00C7            772   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:178: unsigned int ADC_at_Pin(unsigned char pin)
00C7            773   ;        -----------------------------------------
00C7            774   ;         function ADC_at_Pin
00C7            775   ;        -----------------------------------------
00C7            776   _ADC_at_Pin:
00C7 8582BB     777            mov     _ADC0MX,dpl
00CA            778   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:181: ADINT = 0;
00CA C2ED       779            clr     _ADINT
00CC            780   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:182: ADBUSY = 1;     // Convert voltage at the pin
00CC D2EC       781            setb    _ADBUSY
00CE            782   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:183: while (!ADINT); // Wait for conversion to complete
00CE            783   L005001?:
00CE 30EDA0     784            jnb     _ADINT,L005001?
00D1            785   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:184: return (ADC0);
00D1 85BD82     786            mov     dpl,_ADC0
00D4 85BE83     787            mov     dph,(_ADC0 >> 8)
00D7 22         788            ret
00D8            789   ;------------------------------------------------------------
00D8            790   ;Allocation info for local variables in function 'Timer5_ISR'
00D8            791   ;------------------------------------------------------------
00D8            792   ;------------------------------------------------------------
00D8            793   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:187: void Timer5_ISR (void) interrupt INTERRUPT_TIMER5
00D8            794   ;        -----------------------------------------
00D8            795   ;         function Timer5_ISR
00D8            796   ;        -----------------------------------------
00D8            797   _Timer5_ISR:
00D8 C0E0       798            push    acc
00DA C002       799            push    ar2
00DC C003       800            push    ar3
00DE C0D0       801            push    psw
00E0 75D000     802            mov     psw,#0x00
00E3            803   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:189: SFRPAGE=0x10;
00E3 75A710     804            mov     _SFRPAGE,#0x10
00E6            805   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:190: TF5H = 0; // Clear Timer5 interrupt flag
00E6 C2C7       806            clr     _TF5H
00E8            807   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:191: TMR5RL=RELOAD_10us;
00E8 75D2C4     808            mov     _TMR5RL,#0xC4
00EB 75D3FF     809            mov     (_TMR5RL >> 8),#0xFF
00EE            810   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:192: servo_counter++;
00EE 7401       811            mov     a,#0x01
00F0 25E0       812            add     a,_servo_counter
00F2 F5E0       813            mov     _servo_counter,a
00F4 E4         814            clr     a
00F5 35E1       815            addc    a,(_servo_counter + 1)
00F7 F5E1       816            mov     (_servo_counter + 1),a
00F9            817   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:193: if(servo_counter==2000)
00F9 74D0       818            mov     a,#0xD0
00FB B5E060     819            cjne    a,_servo_counter,L006002?
00FE 7407       820            mov     a,#0x07
0100 B5E160     821            cjne    a,(_servo_counter + 1),L006002?
0103            822   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:195: servo_counter=0;
0103 E4         823            clr     a
0104 F5E0       824            mov     _servo_counter,a
0106 F5E1       825            mov     (_servo_counter + 1),a
0108            826   L006002?:
0108            827   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:197: if(servo1>=servo_counter)
0108 AAA0       828            mov     r2,_servo1
010A 7B00       829            mov     r3,#0x00
010C C3         830            clr     c
010D EA         831            mov     a,r2
010E 95E0       832            subb    a,_servo_counter
0110 EB         833            mov     a,r3
0111 95E1       834            subb    a,(_servo_counter + 1)
0113 4000       835            jc      L006004?
0115            836   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:199: SERVO1=1;
0115 D294       837            setb    _P1_4
0117 8000       838            sjmp    L006005?
0119            839   L006004?:
0119            840   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:203: SERVO1=0;
0119 C294       841            clr     _P1_4
011B            842   L006005?:
011B            843   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:205: if(servo2>=servo_counter)
011B AA60       844            mov     r2,_servo2
011D 7B00       845            mov     r3,#0x00
011F C3         846            clr     c
0120 EA         847            mov     a,r2
0121 95E0       848            subb    a,_servo_counter
0123 EB         849            mov     a,r3
0124 95E1       850            subb    a,(_servo_counter + 1)
0126 4000       851            jc      L006007?
0128            852   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:207: SERVO2=1;
0128 D294       853            setb    _P1_4
012A 8000       854            sjmp    L006009?
012C            855   L006007?:
012C            856   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:211: SERVO2=0;
012C C294       857            clr     _P1_4
012E            858   L006009?:
012E D0D0       859            pop     psw
0130 D003       860            pop     ar3
0132 D002       861            pop     ar2
0134 D0E0       862            pop     acc
0136 32         863            reti
0137            864   ;        eliminated unneeded push/pop dpl
0137            865   ;        eliminated unneeded push/pop dph
0137            866   ;        eliminated unneeded push/pop b
0137            867   ;------------------------------------------------------------
0137            868   ;Allocation info for local variables in function 'Timer3us'
0137            869   ;------------------------------------------------------------
0137            870   ;us                        Allocated to registers r2 
0137            871   ;i                         Allocated to registers r3 
0137            872   ;------------------------------------------------------------
0137            873   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:216: void Timer3us(unsigned char us)
0137            874   ;        -----------------------------------------
0137            875   ;         function Timer3us
0137            876   ;        -----------------------------------------
0137            877   _Timer3us:
0137 AA82       878            mov     r2,dpl
0139            879   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:221: CKCON0|=0b_0100_0000;
0139 438E40     880            orl     _CKCON0,#0x40
013C            881   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:223: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
013C 7592B8     882            mov     _TMR3RL,#0xB8
013F 7593FF     883            mov     (_TMR3RL >> 8),#0xFF
0142            884   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:224: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
0142 859294     885            mov     _TMR3,_TMR3RL
0145 859395     886            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
0148            887   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:226: TMR3CN0 = 0x04;                 // Sart Timer3 and clear overflow flag
0148 759104     888            mov     _TMR3CN0,#0x04
014B            889   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:227: for (i = 0; i < us; i++)       // Count <us> overflows
014B 7B00       890            mov     r3,#0x00
014D            891   L007004?:
014D C3         892            clr     c
014E EB         893            mov     a,r3
014F 9A         894            subb    a,r2
0150 5000       895            jnc     L007007?
0152            896   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:229: while (!(TMR3CN0 & 0x80));  // Wait for overflow
0152            897   L007001?:
0152 E591       898            mov     a,_TMR3CN0
0154 30E720     899            jnb     acc.7,L007001?
0157            900   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:230: TMR3CN0 &= ~(0x80);         // Clear overflow indicator
0157 53917F     901            anl     _TMR3CN0,#0x7F
015A            902   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:227: for (i = 0; i < us; i++)       // Count <us> overflows
015A 0B         903            inc     r3
015B 8000       904            sjmp    L007004?
015D            905   L007007?:
015D            906   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:232: TMR3CN0 = 0 ;                   // Stop Timer3 and clear overflow flag
015D 759100     907            mov     _TMR3CN0,#0x00
0160 22         908            ret
0161            909   ;------------------------------------------------------------
0161            910   ;Allocation info for local variables in function 'waitms'
0161            911   ;------------------------------------------------------------
0161            912   ;ms                        Allocated to registers r2 r3 
0161            913   ;j                         Allocated to registers r2 r3 
0161            914   ;------------------------------------------------------------
0161            915   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:235: void waitms (unsigned int ms)
0161            916   ;        -----------------------------------------
0161            917   ;         function waitms
0161            918   ;        -----------------------------------------
0161            919   _waitms:
0161 AA82       920            mov     r2,dpl
0163 AB83       921            mov     r3,dph
0165            922   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:238: for(j=ms; j!=0; j--)
0165            923   L008001?:
0165 BA00A0     924            cjne    r2,#0x00,L008010?
0168 BB00A0     925            cjne    r3,#0x00,L008010?
016B 22         926            ret
016C            927   L008010?:
016C            928   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:240: Timer3us(249);
016C 7582F9     929            mov     dpl,#0xF9
016F C002       930            push    ar2
0171 C003       931            push    ar3
0173 120000     932            lcall   _Timer3us
0176            933   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:241: Timer3us(249);
0176 7582F9     934            mov     dpl,#0xF9
0179 120000     935            lcall   _Timer3us
017C            936   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:242: Timer3us(249);
017C 7582F9     937            mov     dpl,#0xF9
017F 120000     938            lcall   _Timer3us
0182            939   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:243: Timer3us(250);
0182 7582FA     940            mov     dpl,#0xFA
0185 120000     941            lcall   _Timer3us
0188 D003       942            pop     ar3
018A D002       943            pop     ar2
018C            944   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:238: for(j=ms; j!=0; j--)
018C 1A         945            dec     r2
018D BAFFE0     946            cjne    r2,#0xff,L008011?
0190 1B         947            dec     r3
0191            948   L008011?:
0191 8000       949            sjmp    L008001?
0193            950   ;------------------------------------------------------------
0193            951   ;Allocation info for local variables in function 'GetPeriod'
0193            952   ;------------------------------------------------------------
0193            953   ;n                         Allocated to registers r2 r3 
0193            954   ;overflow_count            Allocated to registers r4 r5 
0193            955   ;i                         Allocated to registers r6 
0193            956   ;------------------------------------------------------------
0193            957   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:248: unsigned long GetPeriod (int n)
0193            958   ;        -----------------------------------------
0193            959   ;         function GetPeriod
0193            960   ;        -----------------------------------------
0193            961   _GetPeriod:
0193 AA82       962            mov     r2,dpl
0195 AB83       963            mov     r3,dph
0197            964   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:253: EA = 0; // Disable interrupts
0197 C2AF       965            clr     _EA
0199            966   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:254: TR0=0; // Stop Timer/Counter 0
0199 C28C       967            clr     _TR0
019B            968   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:255: TMOD&=0b_1111_0000; // Set the bits of Timer/Counter 0 to zero
019B 5389F0     969            anl     _TMOD,#0xF0
019E            970   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:256: TMOD|=0b_0000_0001; // Timer/Counter 0 used as a 16-bit timer
019E 438901     971            orl     _TMOD,#0x01
01A1            972   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:259: TR0=0;
01A1 C28C       973            clr     _TR0
01A3            974   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:260: TL0=0; TH0=0; TF0=0; overflow_count=0;
01A3 758A00     975            mov     _TL0,#0x00
01A6 758C00     976            mov     _TH0,#0x00
01A9 C28D       977            clr     _TF0
01AB            978   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:261: TR0=1;
01AB D28C       979            setb    _TR0
01AD            980   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:262: while(PERIOD_PIN!=0) // Wait for the signal to be zero
01AD 7C00       981            mov     r4,#0x00
01AF 7D00       982            mov     r5,#0x00
01B1            983   L009005?:
01B1 309060     984            jnb     _P1_0,L009007?
01B4            985   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:264: if(TF0==1) // Did the 16-bit timer overflow?
01B4            986   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:266: TF0=0;
01B4 108DA0     987            jbc     _TF0,L009050?
01B7 8000       988            sjmp    L009005?
01B9            989   L009050?:
01B9            990   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:267: overflow_count++;
01B9 0C         991            inc     r4
01BA BC00E0     992            cjne    r4,#0x00,L009051?
01BD 0D         993            inc     r5
01BE            994   L009051?:
01BE            995   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:268: if(overflow_count==10) // If it overflows too many times assume no signal is present
01BE BC0A20     996            cjne    r4,#0x0A,L009005?
01C1 BD0020     997            cjne    r5,#0x00,L009005?
01C4            998   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:270: TR0=0;
01C4 C28C       999            clr     _TR0
01C6           1000   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:271: return 0; // No signal
01C6 900000    1001            mov     dptr,#(0x00&0x00ff)
01C9 E4        1002            clr     a
01CA F5F0      1003            mov     b,a
01CC 22        1004            ret
01CD           1005   L009007?:
01CD           1006   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:277: TR0=0;
01CD C28C      1007            clr     _TR0
01CF           1008   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:278: TL0=0; TH0=0; TF0=0; overflow_count=0;
01CF 758A00    1009            mov     _TL0,#0x00
01D2 758C00    1010            mov     _TH0,#0x00
01D5 C28D      1011            clr     _TF0
01D7           1012   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:279: TR0=1;
01D7 D28C      1013            setb    _TR0
01D9           1014   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:280: while(PERIOD_PIN!=1) // Wait for the signal to be one
01D9 7C00      1015            mov     r4,#0x00
01DB 7D00      1016            mov     r5,#0x00
01DD           1017   L009012?:
01DD 209060    1018            jb      _P1_0,L009014?
01E0           1019   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:282: if(TF0==1) // Did the 16-bit timer overflow?
01E0           1020   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:284: TF0=0;
01E0 108DA0    1021            jbc     _TF0,L009055?
01E3 8000      1022            sjmp    L009012?
01E5           1023   L009055?:
01E5           1024   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:285: overflow_count++;
01E5 0C        1025            inc     r4
01E6 BC00E0    1026            cjne    r4,#0x00,L009056?
01E9 0D        1027            inc     r5
01EA           1028   L009056?:
01EA           1029   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:286: if(overflow_count==10) // If it overflows too many times assume no signal is present
01EA BC0A20    1030            cjne    r4,#0x0A,L009012?
01ED BD0020    1031            cjne    r5,#0x00,L009012?
01F0           1032   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:288: TR0=0;
01F0 C28C      1033            clr     _TR0
01F2           1034   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:289: return 0; // No signal
01F2 900000    1035            mov     dptr,#(0x00&0x00ff)
01F5 E4        1036            clr     a
01F6 F5F0      1037            mov     b,a
01F8 22        1038            ret
01F9           1039   L009014?:
01F9           1040   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:295: TR0=0;
01F9 C28C      1041            clr     _TR0
01FB           1042   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:296: TL0=0; TH0=0; TF0=0; overflow_count=0;
01FB 758A00    1043            mov     _TL0,#0x00
01FE 758C00    1044            mov     _TH0,#0x00
0201 C28D      1045            clr     _TF0
0203 7C00      1046            mov     r4,#0x00
0205 7D00      1047            mov     r5,#0x00
0207           1048   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:297: TR0=1; // Start the timer
0207 D28C      1049            setb    _TR0
0209           1050   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:298: for(i=0; i<n; i++) // Measure the time of 'n' periods
0209 7E00      1051            mov     r6,#0x00
020B           1052   L009025?:
020B 8E07      1053            mov     ar7,r6
020D 7800      1054            mov     r0,#0x00
020F C3        1055            clr     c
0210 EF        1056            mov     a,r7
0211 9A        1057            subb    a,r2
0212 E8        1058            mov     a,r0
0213 6480      1059            xrl     a,#0x80
0215 8BF0      1060            mov     b,r3
0217 63F080    1061            xrl     b,#0x80
021A 95F0      1062            subb    a,b
021C 5000      1063            jnc     L009028?
021E           1064   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:300: while(PERIOD_PIN!=0) // Wait for the signal to be zero
021E 8C07      1065            mov     ar7,r4
0220 8D00      1066            mov     ar0,r5
0222           1067   L009017?:
0222 3090E8    1068            jnb     _P1_0,L009043?
0225           1069   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:302: if(TF0==1) // Did the 16-bit timer overflow?
0225           1070   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:304: TF0=0;
0225 108D28    1071            jbc     _TF0,L009061?
0228 8000      1072            sjmp    L009017?
022A           1073   L009061?:
022A           1074   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:305: overflow_count++;
022A 0F        1075            inc     r7
022B BF00A0    1076            cjne    r7,#0x00,L009017?
022E 08        1077            inc     r0
022F           1078   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:308: while(PERIOD_PIN!=1) // Wait for the signal to be one
022F 8000      1079            sjmp    L009017?
0231           1080   L009043?:
0231           1081   L009022?:
0231 2090A8    1082            jb      _P1_0,L009047?
0234           1083   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:310: if(TF0==1) // Did the 16-bit timer overflow?
0234           1084   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:312: TF0=0;
0234 108DE8    1085            jbc     _TF0,L009063?
0237 8000      1086            sjmp    L009022?
0239           1087   L009063?:
0239           1088   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:313: overflow_count++;
0239 0F        1089            inc     r7
023A BF0068    1090            cjne    r7,#0x00,L009022?
023D 08        1091            inc     r0
023E 8000      1092            sjmp    L009022?
0240           1093   L009047?:
0240 8F04      1094            mov     ar4,r7
0242 8805      1095            mov     ar5,r0
0244           1096   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:298: for(i=0; i<n; i++) // Measure the time of 'n' periods
0244 0E        1097            inc     r6
0245 8000      1098            sjmp    L009025?
0247           1099   L009028?:
0247           1100   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:317: TR0=0; // Stop timer 0, the 24-bit number [overflow_count-TH0-TL0] has the period in clock cycles!
0247 C28C      1101            clr     _TR0
0249           1102   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:318: EA = 1; // Enable interrupts
0249 D2AF      1103            setb    _EA
024B           1104   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:320: return (overflow_count*65536+TH0*256+TL0);
024B 8D03      1105            mov     ar3,r5
024D 8C02      1106            mov     ar2,r4
024F 7D00      1107            mov     r5,#0x00
0251 7C00      1108            mov     r4,#0x00
0253 AF8C      1109            mov     r7,_TH0
0255 7E00      1110            mov     r6,#0x00
0257 EF        1111            mov     a,r7
0258 33        1112            rlc     a
0259 95E0      1113            subb    a,acc
025B F8        1114            mov     r0,a
025C F9        1115            mov     r1,a
025D EE        1116            mov     a,r6
025E 2C        1117            add     a,r4
025F FC        1118            mov     r4,a
0260 EF        1119            mov     a,r7
0261 3D        1120            addc    a,r5
0262 FD        1121            mov     r5,a
0263 E8        1122            mov     a,r0
0264 3A        1123            addc    a,r2
0265 FA        1124            mov     r2,a
0266 E9        1125            mov     a,r1
0267 3B        1126            addc    a,r3
0268 FB        1127            mov     r3,a
0269 AE8A      1128            mov     r6,_TL0
026B E4        1129            clr     a
026C FF        1130            mov     r7,a
026D 33        1131            rlc     a
026E 95E0      1132            subb    a,acc
0270 F8        1133            mov     r0,a
0271 F9        1134            mov     r1,a
0272 EE        1135            mov     a,r6
0273 2C        1136            add     a,r4
0274 FC        1137            mov     r4,a
0275 EF        1138            mov     a,r7
0276 3D        1139            addc    a,r5
0277 FD        1140            mov     r5,a
0278 E8        1141            mov     a,r0
0279 3A        1142            addc    a,r2
027A FA        1143            mov     r2,a
027B E9        1144            mov     a,r1
027C 3B        1145            addc    a,r3
027D 8C82      1146            mov     dpl,r4
027F 8D83      1147            mov     dph,r5
0281 8AF0      1148            mov     b,r2
0283 22        1149            ret
0284           1150   ;------------------------------------------------------------
0284           1151   ;Allocation info for local variables in function 'eputs'
0284           1152   ;------------------------------------------------------------
0284           1153   ;String                    Allocated to registers r2 r3 r4 
0284           1154   ;------------------------------------------------------------
0284           1155   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:323: void eputs(char *String)
0284           1156   ;        -----------------------------------------
0284           1157   ;         function eputs
0284           1158   ;        -----------------------------------------
0284           1159   _eputs:
0284 AA82      1160            mov     r2,dpl
0286 AB83      1161            mov     r3,dph
0288 ACF0      1162            mov     r4,b
028A           1163   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:325: while(*String)
028A           1164   L010001?:
028A 8A82      1165            mov     dpl,r2
028C 8B83      1166            mov     dph,r3
028E 8CF0      1167            mov     b,r4
0290 120000    1168            lcall   __gptrget
0293 FD        1169            mov     r5,a
0294 6000      1170            jz      L010004?
0296           1171   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:327: putchar(*String);
0296 8D82      1172            mov     dpl,r5
0298 C002      1173            push    ar2
029A C003      1174            push    ar3
029C C004      1175            push    ar4
029E 120000    1176            lcall   _putchar
02A1 D004      1177            pop     ar4
02A3 D003      1178            pop     ar3
02A5 D002      1179            pop     ar2
02A7           1180   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:328: String++;
02A7 0A        1181            inc     r2
02A8 BA0028    1182            cjne    r2,#0x00,L010001?
02AB 0B        1183            inc     r3
02AC 8000      1184            sjmp    L010001?
02AE           1185   L010004?:
02AE 22        1186            ret
02AF           1187   ;------------------------------------------------------------
02AF           1188   ;Allocation info for local variables in function 'PrintNumber'
02AF           1189   ;------------------------------------------------------------
02AF           1190   ;Base                      Allocated with name '_PrintNumber_PARM_2'
02AF           1191   ;digits                    Allocated with name '_PrintNumber_PARM_3'
02AF           1192   ;val                       Allocated with name '_PrintNumber_val_1_80'
02AF           1193   ;j                         Allocated with name '_PrintNumber_j_1_81'
02AF           1194   ;sloc0                     Allocated with name '_PrintNumber_sloc0_1_0'
02AF           1195   ;sloc1                     Allocated with name '_PrintNumber_sloc1_1_0'
02AF           1196   ;buff                      Allocated with name '_PrintNumber_buff_1_81'
02AF           1197   ;------------------------------------------------------------
02AF           1198   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:332: void PrintNumber(long int val, int Base, int digits)
02AF           1199   ;        -----------------------------------------
02AF           1200   ;         function PrintNumber
02AF           1201   ;        -----------------------------------------
02AF           1202   _PrintNumber:
02AF 8582A0    1203            mov     _PrintNumber_val_1_80,dpl
02B2 8583A1    1204            mov     (_PrintNumber_val_1_80 + 1),dph
02B5 85F0A2    1205            mov     (_PrintNumber_val_1_80 + 2),b
02B8 F5A3      1206            mov     (_PrintNumber_val_1_80 + 3),a
02BA           1207   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:338: buff[NBITS]=0;
02BA 90B600    1208            mov     dptr,#(_PrintNumber_buff_1_81 + 0x0020)
02BD E4        1209            clr     a
02BE F0        1210            movx    @dptr,a
02BF           1211   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:340: if(val<0)
02BF E5A3      1212            mov     a,(_PrintNumber_val_1_80 + 3)
02C1 30E728    1213            jnb     acc.7,L011012?
02C4           1214   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:342: putchar('-');
02C4 75822D    1215            mov     dpl,#0x2D
02C7 120000    1216            lcall   _putchar
02CA           1217   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:343: val*=-1;
02CA C3        1218            clr     c
02CB E4        1219            clr     a
02CC 95A0      1220            subb    a,_PrintNumber_val_1_80
02CE F5A0      1221            mov     _PrintNumber_val_1_80,a
02D0 E4        1222            clr     a
02D1 95A1      1223            subb    a,(_PrintNumber_val_1_80 + 1)
02D3 F5A1      1224            mov     (_PrintNumber_val_1_80 + 1),a
02D5 E4        1225            clr     a
02D6 95A2      1226            subb    a,(_PrintNumber_val_1_80 + 2)
02D8 F5A2      1227            mov     (_PrintNumber_val_1_80 + 2),a
02DA E4        1228            clr     a
02DB 95A3      1229            subb    a,(_PrintNumber_val_1_80 + 3)
02DD F5A3      1230            mov     (_PrintNumber_val_1_80 + 3),a
02DF           1231   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:347: while ( (val>0) | (digits>0) )
02DF           1232   L011012?:
02DF 75F01F    1233            mov     _PrintNumber_j_1_81,#0x1F
02E2 E4        1234            clr     a
02E3 F5F1      1235            mov     (_PrintNumber_j_1_81 + 1),a
02E5 A8D0      1236            mov     r0,_PrintNumber_PARM_3
02E7 A9D1      1237            mov     r1,(_PrintNumber_PARM_3 + 1)
02E9           1238   L011005?:
02E9 C3        1239            clr     c
02EA E4        1240            clr     a
02EB 95A0      1241            subb    a,_PrintNumber_val_1_80
02ED E4        1242            clr     a
02EE 95A1      1243            subb    a,(_PrintNumber_val_1_80 + 1)
02F0 E4        1244            clr     a
02F1 95A2      1245            subb    a,(_PrintNumber_val_1_80 + 2)
02F3 E4        1246            clr     a
02F4 6480      1247            xrl     a,#0x80
02F6 85A3F0    1248            mov     b,(_PrintNumber_val_1_80 + 3)
02F9 63F080    1249            xrl     b,#0x80
02FC 95F0      1250            subb    a,b
02FE E4        1251            clr     a
02FF 33        1252            rlc     a
0300 FE        1253            mov     r6,a
0301 C3        1254            clr     c
0302 E4        1255            clr     a
0303 98        1256            subb    a,r0
0304 E4        1257            clr     a
0305 6480      1258            xrl     a,#0x80
0307 89F0      1259            mov     b,r1
0309 63F080    1260            xrl     b,#0x80
030C 95F0      1261            subb    a,b
030E E4        1262            clr     a
030F 33        1263            rlc     a
0310 FF        1264            mov     r7,a
0311 4E        1265            orl     a,r6
0312 7000      1266            jnz     L011016?
0314 020000    1267            ljmp    L011007?
0317           1268   L011016?:
0317           1269   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:349: buff[j--]=HexDigit[val%Base];
0317 AEF0      1270            mov     r6,_PrintNumber_j_1_81
0319 AFF1      1271            mov     r7,(_PrintNumber_j_1_81 + 1)
031B 15F0      1272            dec     _PrintNumber_j_1_81
031D 74FF      1273            mov     a,#0xff
031F B5F028    1274            cjne    a,_PrintNumber_j_1_81,L011017?
0322 15F1      1275            dec     (_PrintNumber_j_1_81 + 1)
0324           1276   L011017?:
0324 EE        1277            mov     a,r6
0325 24E0      1278            add     a,#_PrintNumber_buff_1_81
0327 F540      1279            mov     _PrintNumber_sloc0_1_0,a
0329 EF        1280            mov     a,r7
032A 34B5      1281            addc    a,#(_PrintNumber_buff_1_81 >> 8)
032C F541      1282            mov     (_PrintNumber_sloc0_1_0 + 1),a
032E 852090    1283            mov     _PrintNumber_sloc1_1_0,_PrintNumber_PARM_2
0331 E521      1284            mov     a,(_PrintNumber_PARM_2 + 1)
0333 F591      1285            mov     (_PrintNumber_sloc1_1_0 + 1),a
0335 33        1286            rlc     a
0336 95E0      1287            subb    a,acc
0338 F592      1288            mov     (_PrintNumber_sloc1_1_0 + 2),a
033A F593      1289            mov     (_PrintNumber_sloc1_1_0 + 3),a
033C 859000    1290            mov     __modslong_PARM_2,_PrintNumber_sloc1_1_0
033F 859101    1291            mov     (__modslong_PARM_2 + 1),(_PrintNumber_sloc1_1_0 + 1)
0342 859202    1292            mov     (__modslong_PARM_2 + 2),(_PrintNumber_sloc1_1_0 + 2)
0345 859303    1293            mov     (__modslong_PARM_2 + 3),(_PrintNumber_sloc1_1_0 + 3)
0348 85A082    1294            mov     dpl,_PrintNumber_val_1_80
034B 85A183    1295            mov     dph,(_PrintNumber_val_1_80 + 1)
034E 85A2F0    1296            mov     b,(_PrintNumber_val_1_80 + 2)
0351 E5A3      1297            mov     a,(_PrintNumber_val_1_80 + 3)
0353 C000      1298            push    ar0
0355 C001      1299            push    ar1
0357 120000    1300            lcall   __modslong
035A AE82      1301            mov     r6,dpl
035C AF83      1302            mov     r7,dph
035E EE        1303            mov     a,r6
035F 24B0      1304            add     a,#_PrintNumber_HexDigit_1_81
0361 F582      1305            mov     dpl,a
0363 EF        1306            mov     a,r7
0364 3411      1307            addc    a,#(_PrintNumber_HexDigit_1_81 >> 8)
0366 F583      1308            mov     dph,a
0368 E4        1309            clr     a
0369 93        1310            movc    a,@a+dptr
036A 854082    1311            mov     dpl,_PrintNumber_sloc0_1_0
036D 854183    1312            mov     dph,(_PrintNumber_sloc0_1_0 + 1)
0370 F0        1313            movx    @dptr,a
0371           1314   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:350: val/=Base;
0371 859000    1315            mov     __divslong_PARM_2,_PrintNumber_sloc1_1_0
0374 859101    1316            mov     (__divslong_PARM_2 + 1),(_PrintNumber_sloc1_1_0 + 1)
0377 859202    1317            mov     (__divslong_PARM_2 + 2),(_PrintNumber_sloc1_1_0 + 2)
037A 859303    1318            mov     (__divslong_PARM_2 + 3),(_PrintNumber_sloc1_1_0 + 3)
037D 85A082    1319            mov     dpl,_PrintNumber_val_1_80
0380 85A183    1320            mov     dph,(_PrintNumber_val_1_80 + 1)
0383 85A2F0    1321            mov     b,(_PrintNumber_val_1_80 + 2)
0386 E5A3      1322            mov     a,(_PrintNumber_val_1_80 + 3)
0388 120000    1323            lcall   __divslong
038B 8582A0    1324            mov     _PrintNumber_val_1_80,dpl
038E 8583A1    1325            mov     (_PrintNumber_val_1_80 + 1),dph
0391 85F0A2    1326            mov     (_PrintNumber_val_1_80 + 2),b
0394 F5A3      1327            mov     (_PrintNumber_val_1_80 + 3),a
0396 D001      1328            pop     ar1
0398 D000      1329            pop     ar0
039A           1330   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:351: if(digits!=0) digits--;
039A E8        1331            mov     a,r0
039B 49        1332            orl     a,r1
039C 7000      1333            jnz     L011018?
039E 020000    1334            ljmp    L011005?
03A1           1335   L011018?:
03A1 18        1336            dec     r0
03A2 B8FFC8    1337            cjne    r0,#0xff,L011019?
03A5 19        1338            dec     r1
03A6           1339   L011019?:
03A6 020000    1340            ljmp    L011005?
03A9           1341   L011007?:
03A9           1342   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:353: eputs(&buff[j+1]);
03A9 E5F0      1343            mov     a,_PrintNumber_j_1_81
03AB 04        1344            inc     a
03AC 24E0      1345            add     a,#_PrintNumber_buff_1_81
03AE FA        1346            mov     r2,a
03AF E4        1347            clr     a
03B0 34B5      1348            addc    a,#(_PrintNumber_buff_1_81 >> 8)
03B2 FB        1349            mov     r3,a
03B3 7C00      1350            mov     r4,#0x00
03B5 8A82      1351            mov     dpl,r2
03B7 8B83      1352            mov     dph,r3
03B9 8CF0      1353            mov     b,r4
03BB 020000    1354            ljmp    _eputs
03BE           1355   ;------------------------------------------------------------
03BE           1356   ;Allocation info for local variables in function 'main'
03BE           1357   ;------------------------------------------------------------
03BE           1358   ;count                     Allocated to registers r2 r3 r4 r5 
03BE           1359   ;f                         Allocated to registers r6 r7 r0 r1 
03BE           1360   ;------------------------------------------------------------
03BE           1361   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:358: void main (void)
03BE           1362   ;        -----------------------------------------
03BE           1363   ;         function main
03BE           1364   ;        -----------------------------------------
03BE           1365   _main:
03BE           1366   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:385: while (1)
03BE           1367   L012005?:
03BE           1368   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:419: count=GetPeriod(30);
03BE 90001E    1369            mov     dptr,#0x001E
03C1 120000    1370            lcall   _GetPeriod
03C4 AA82      1371            mov     r2,dpl
03C6 AB83      1372            mov     r3,dph
03C8 ACF0      1373            mov     r4,b
03CA FD        1374            mov     r5,a
03CB           1375   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:422: if(count>0)
03CB C3        1376            clr     c
03CC E4        1377            clr     a
03CD 9A        1378            subb    a,r2
03CE E4        1379            clr     a
03CF 9B        1380            subb    a,r3
03D0 E4        1381            clr     a
03D1 9C        1382            subb    a,r4
03D2 E4        1383            clr     a
03D3 6480      1384            xrl     a,#0x80
03D5 8DF0      1385            mov     b,r5
03D7 63F080    1386            xrl     b,#0x80
03DA 95F0      1387            subb    a,b
03DC 4000      1388            jc      L012011?
03DE 020000    1389            ljmp    L012002?
03E1           1390   L012011?:
03E1           1391   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:424: f=(SYSCLK*30.0)/(count*12);
03E1 8A00      1392            mov     __mullong_PARM_2,r2
03E3 8B01      1393            mov     (__mullong_PARM_2 + 1),r3
03E5 8C02      1394            mov     (__mullong_PARM_2 + 2),r4
03E7 8D03      1395            mov     (__mullong_PARM_2 + 3),r5
03E9 90000C    1396            mov     dptr,#(0x0C&0x00ff)
03EC E4        1397            clr     a
03ED F5F0      1398            mov     b,a
03EF C002      1399            push    ar2
03F1 C003      1400            push    ar3
03F3 C004      1401            push    ar4
03F5 C005      1402            push    ar5
03F7 120000    1403            lcall   __mullong
03FA 120000    1404            lcall   ___slong2fs
03FD AE82      1405            mov     r6,dpl
03FF AF83      1406            mov     r7,dph
0401 A8F0      1407            mov     r0,b
0403 F9        1408            mov     r1,a
0404 C006      1409            push    ar6
0406 C007      1410            push    ar7
0408 C000      1411            push    ar0
040A C001      1412            push    ar1
040C 90BEFC    1413            mov     dptr,#0xBEFC
040F 75F000    1414            mov     b,#0x00
0412 744F      1415            mov     a,#0x4F
0414 120000    1416            lcall   ___fsdiv
0417 AE82      1417            mov     r6,dpl
0419 AF83      1418            mov     r7,dph
041B A8F0      1419            mov     r0,b
041D F9        1420            mov     r1,a
041E E581      1421            mov     a,sp
0420 24FC      1422            add     a,#0xfc
0422 F581      1423            mov     sp,a
0424 8E82      1424            mov     dpl,r6
0426 8F83      1425            mov     dph,r7
0428 88F0      1426            mov     b,r0
042A E9        1427            mov     a,r1
042B 120000    1428            lcall   ___fs2slong
042E AE82      1429            mov     r6,dpl
0430 AF83      1430            mov     r7,dph
0432 A8F0      1431            mov     r0,b
0434 F9        1432            mov     r1,a
0435           1433   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:425: printf("f=%ld Hz, count=%ld\r\n", f, count);
0435 C006      1434            push    ar6
0437 C007      1435            push    ar7
0439 C000      1436            push    ar0
043B C001      1437            push    ar1
043D 7458      1438            mov     a,#__str_1
043F C0E0      1439            push    acc
0441 74C7      1440            mov     a,#(__str_1 >> 8)
0443 C0E0      1441            push    acc
0445 7480      1442            mov     a,#0x80
0447 C0E0      1443            push    acc
0449 120000    1444            lcall   _printf
044C E581      1445            mov     a,sp
044E 24F5      1446            add     a,#0xf5
0450 F581      1447            mov     sp,a
0452 8000      1448            sjmp    L012003?
0454           1449   L012002?:
0454           1450   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:430: printf("NO SIGNAL                     \r");
0454 7418      1451            mov     a,#__str_2
0456 C0E0      1452            push    acc
0458 74C8      1453            mov     a,#(__str_2 >> 8)
045A C0E0      1454            push    acc
045C 7480      1455            mov     a,#0x80
045E C0E0      1456            push    acc
0460 120000    1457            lcall   _printf
0463 1581      1458            dec     sp
0465 1581      1459            dec     sp
0467 1581      1460            dec     sp
0469           1461   L012003?:
0469           1462   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Examples\Robot_Base\Robot_Base.c:494: waitms(200);
0469 9000C8    1463            mov     dptr,#0x00C8
046C 120000    1464            lcall   _waitms
046F 020000    1465            ljmp    L012005?
0472           1466            rseg R_CSEG
0472           1467   
0000           1468            rseg R_XINIT
0000           1469   
0000           1470            rseg R_CONST
0000           1471   _PrintNumber_HexDigit_1_81:
0000 30313233  1472            db '0123456789ABCDEF'
     34353637
     38394142
     43444546
0010 00        1473            db 0x00
0011           1474   __str_1:
0011 663D256C  1475            db 'f=%ld Hz, count=%ld'
     6420487A
     2C20636F
     756E743D
     256C64
0024 0D        1476            db 0x0D
0025 0A        1477            db 0x0A
0026 00        1478            db 0x00
0027           1479   __str_2:
0027 4E4F2053  1480            db 'NO SIGNAL                     '
     49474E41
     4C202020
     20202020
     20202020
     20202020
     20202020
     2020
0045 0D        1481            db 0x0D
0046 00        1482            db 0x00
0047           1483   
0096           1484            CSEG
0096           1485   
0096           1486   end
