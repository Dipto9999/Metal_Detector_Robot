0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Tue Mar 26 17:01:22 2024
0000              5   ;--------------------------------------------------------
                  5   $name movement_new_new
                  6   $optc51 --model-small
0000              8            R_DSEG    segment data
0000              9            R_CSEG    segment code
0000             10            R_BSEG    segment bit
0000             11            R_XSEG    segment xdata
0000             12            R_PSEG    segment xdata
0000             13            R_ISEG    segment idata
0000             14            R_OSEG    segment data overlay
0000             15            BIT_BANK  segment data overlay
0000             16            R_HOME    segment code
0000             17            R_GSINIT  segment code
0000             18            R_IXSEG   segment xdata
0000             19            R_CONST   segment code
0000             20            R_XINIT   segment code
0000             21            R_DINIT   segment code
0000             22   
0000             23   ;--------------------------------------------------------
0000             24   ; Public variables in this module
0000             25   ;--------------------------------------------------------
0000             26            public _main
0000             27            public _PWM_manager
0000             28            public _Timer4_ISR
0000             29            public _Timer3_ISR
0000             30            public _TIMER4Init
0000             31            public _TIMER3Init
0000             32            public __c51_external_startup
0000             33            public _PWM_manager_PARM_2
0000             34            public _prev_PWM_percent_y
0000             35            public _prev_PWM_percent_x
0000             36            public _right_wheel
0000             37            public _left_wheel
0000             38            public _PWM_percent_x
0000             39            public _PWM_percent_y
0000             40            public _state
0000             41            public _count
0000             42   ;--------------------------------------------------------
0000             43   ; Special Function Registers
0000             44   ;--------------------------------------------------------
0000             45   _ACC            DATA 0xe0
0000             46   _ADC0ASAH       DATA 0xb6
0000             47   _ADC0ASAL       DATA 0xb5
0000             48   _ADC0ASCF       DATA 0xa1
0000             49   _ADC0ASCT       DATA 0xc7
0000             50   _ADC0CF0        DATA 0xbc
0000             51   _ADC0CF1        DATA 0xb9
0000             52   _ADC0CF2        DATA 0xdf
0000             53   _ADC0CN0        DATA 0xe8
0000             54   _ADC0CN1        DATA 0xb2
0000             55   _ADC0CN2        DATA 0xb3
0000             56   _ADC0GTH        DATA 0xc4
0000             57   _ADC0GTL        DATA 0xc3
0000             58   _ADC0H          DATA 0xbe
0000             59   _ADC0L          DATA 0xbd
0000             60   _ADC0LTH        DATA 0xc6
0000             61   _ADC0LTL        DATA 0xc5
0000             62   _ADC0MX         DATA 0xbb
0000             63   _B              DATA 0xf0
0000             64   _CKCON0         DATA 0x8e
0000             65   _CKCON1         DATA 0xa6
0000             66   _CLEN0          DATA 0xc6
0000             67   _CLIE0          DATA 0xc7
0000             68   _CLIF0          DATA 0xe8
0000             69   _CLKSEL         DATA 0xa9
0000             70   _CLOUT0         DATA 0xd1
0000             71   _CLU0CF         DATA 0xb1
0000             72   _CLU0FN         DATA 0xaf
0000             73   _CLU0MX         DATA 0x84
0000             74   _CLU1CF         DATA 0xb3
0000             75   _CLU1FN         DATA 0xb2
0000             76   _CLU1MX         DATA 0x85
0000             77   _CLU2CF         DATA 0xb6
0000             78   _CLU2FN         DATA 0xb5
0000             79   _CLU2MX         DATA 0x91
0000             80   _CLU3CF         DATA 0xbf
0000             81   _CLU3FN         DATA 0xbe
0000             82   _CLU3MX         DATA 0xae
0000             83   _CMP0CN0        DATA 0x9b
0000             84   _CMP0CN1        DATA 0x99
0000             85   _CMP0MD         DATA 0x9d
0000             86   _CMP0MX         DATA 0x9f
0000             87   _CMP1CN0        DATA 0xbf
0000             88   _CMP1CN1        DATA 0xac
0000             89   _CMP1MD         DATA 0xab
0000             90   _CMP1MX         DATA 0xaa
0000             91   _CRC0CN0        DATA 0xce
0000             92   _CRC0CN1        DATA 0x86
0000             93   _CRC0CNT        DATA 0xd3
0000             94   _CRC0DAT        DATA 0xcb
0000             95   _CRC0FLIP       DATA 0xcf
0000             96   _CRC0IN         DATA 0xca
0000             97   _CRC0ST         DATA 0xd2
0000             98   _DAC0CF0        DATA 0x91
0000             99   _DAC0CF1        DATA 0x92
0000            100   _DAC0H          DATA 0x85
0000            101   _DAC0L          DATA 0x84
0000            102   _DAC1CF0        DATA 0x93
0000            103   _DAC1CF1        DATA 0x94
0000            104   _DAC1H          DATA 0x8a
0000            105   _DAC1L          DATA 0x89
0000            106   _DAC2CF0        DATA 0x95
0000            107   _DAC2CF1        DATA 0x96
0000            108   _DAC2H          DATA 0x8c
0000            109   _DAC2L          DATA 0x8b
0000            110   _DAC3CF0        DATA 0x9a
0000            111   _DAC3CF1        DATA 0x9c
0000            112   _DAC3H          DATA 0x8e
0000            113   _DAC3L          DATA 0x8d
0000            114   _DACGCF0        DATA 0x88
0000            115   _DACGCF1        DATA 0x98
0000            116   _DACGCF2        DATA 0xa2
0000            117   _DERIVID        DATA 0xad
0000            118   _DEVICEID       DATA 0xb5
0000            119   _DPH            DATA 0x83
0000            120   _DPL            DATA 0x82
0000            121   _EIE1           DATA 0xe6
0000            122   _EIE2           DATA 0xf3
0000            123   _EIP1           DATA 0xbb
0000            124   _EIP1H          DATA 0xee
0000            125   _EIP2           DATA 0xed
0000            126   _EIP2H          DATA 0xf6
0000            127   _EMI0CN         DATA 0xe7
0000            128   _FLKEY          DATA 0xb7
0000            129   _HFO0CAL        DATA 0xc7
0000            130   _HFO1CAL        DATA 0xd6
0000            131   _HFOCN          DATA 0xef
0000            132   _I2C0ADM        DATA 0xff
0000            133   _I2C0CN0        DATA 0xba
0000            134   _I2C0DIN        DATA 0xbc
0000            135   _I2C0DOUT       DATA 0xbb
0000            136   _I2C0FCN0       DATA 0xad
0000            137   _I2C0FCN1       DATA 0xab
0000            138   _I2C0FCT        DATA 0xf5
0000            139   _I2C0SLAD       DATA 0xbd
0000            140   _I2C0STAT       DATA 0xb9
0000            141   _IE             DATA 0xa8
0000            142   _IP             DATA 0xb8
0000            143   _IPH            DATA 0xf2
0000            144   _IT01CF         DATA 0xe4
0000            145   _LFO0CN         DATA 0xb1
0000            146   _P0             DATA 0x80
0000            147   _P0MASK         DATA 0xfe
0000            148   _P0MAT          DATA 0xfd
0000            149   _P0MDIN         DATA 0xf1
0000            150   _P0MDOUT        DATA 0xa4
0000            151   _P0SKIP         DATA 0xd4
0000            152   _P1             DATA 0x90
0000            153   _P1MASK         DATA 0xee
0000            154   _P1MAT          DATA 0xed
0000            155   _P1MDIN         DATA 0xf2
0000            156   _P1MDOUT        DATA 0xa5
0000            157   _P1SKIP         DATA 0xd5
0000            158   _P2             DATA 0xa0
0000            159   _P2MASK         DATA 0xfc
0000            160   _P2MAT          DATA 0xfb
0000            161   _P2MDIN         DATA 0xf3
0000            162   _P2MDOUT        DATA 0xa6
0000            163   _P2SKIP         DATA 0xcc
0000            164   _P3             DATA 0xb0
0000            165   _P3MDIN         DATA 0xf4
0000            166   _P3MDOUT        DATA 0x9c
0000            167   _PCA0CENT       DATA 0x9e
0000            168   _PCA0CLR        DATA 0x9c
0000            169   _PCA0CN0        DATA 0xd8
0000            170   _PCA0CPH0       DATA 0xfc
0000            171   _PCA0CPH1       DATA 0xea
0000            172   _PCA0CPH2       DATA 0xec
0000            173   _PCA0CPH3       DATA 0xf5
0000            174   _PCA0CPH4       DATA 0x85
0000            175   _PCA0CPH5       DATA 0xde
0000            176   _PCA0CPL0       DATA 0xfb
0000            177   _PCA0CPL1       DATA 0xe9
0000            178   _PCA0CPL2       DATA 0xeb
0000            179   _PCA0CPL3       DATA 0xf4
0000            180   _PCA0CPL4       DATA 0x84
0000            181   _PCA0CPL5       DATA 0xdd
0000            182   _PCA0CPM0       DATA 0xda
0000            183   _PCA0CPM1       DATA 0xdb
0000            184   _PCA0CPM2       DATA 0xdc
0000            185   _PCA0CPM3       DATA 0xae
0000            186   _PCA0CPM4       DATA 0xaf
0000            187   _PCA0CPM5       DATA 0xcc
0000            188   _PCA0H          DATA 0xfa
0000            189   _PCA0L          DATA 0xf9
0000            190   _PCA0MD         DATA 0xd9
0000            191   _PCA0POL        DATA 0x96
0000            192   _PCA0PWM        DATA 0xf7
0000            193   _PCON0          DATA 0x87
0000            194   _PCON1          DATA 0xcd
0000            195   _PFE0CN         DATA 0xc1
0000            196   _PRTDRV         DATA 0xf6
0000            197   _PSCTL          DATA 0x8f
0000            198   _PSTAT0         DATA 0xaa
0000            199   _PSW            DATA 0xd0
0000            200   _REF0CN         DATA 0xd1
0000            201   _REG0CN         DATA 0xc9
0000            202   _REVID          DATA 0xb6
0000            203   _RSTSRC         DATA 0xef
0000            204   _SBCON1         DATA 0x94
0000            205   _SBRLH1         DATA 0x96
0000            206   _SBRLL1         DATA 0x95
0000            207   _SBUF           DATA 0x99
0000            208   _SBUF0          DATA 0x99
0000            209   _SBUF1          DATA 0x92
0000            210   _SCON           DATA 0x98
0000            211   _SCON0          DATA 0x98
0000            212   _SCON1          DATA 0xc8
0000            213   _SFRPAGE        DATA 0xa7
0000            214   _SFRPGCN        DATA 0xbc
0000            215   _SFRSTACK       DATA 0xd7
0000            216   _SMB0ADM        DATA 0xd6
0000            217   _SMB0ADR        DATA 0xd7
0000            218   _SMB0CF         DATA 0xc1
0000            219   _SMB0CN0        DATA 0xc0
0000            220   _SMB0DAT        DATA 0xc2
0000            221   _SMB0FCN0       DATA 0xc3
0000            222   _SMB0FCN1       DATA 0xc4
0000            223   _SMB0FCT        DATA 0xef
0000            224   _SMB0RXLN       DATA 0xc5
0000            225   _SMB0TC         DATA 0xac
0000            226   _SMOD1          DATA 0x93
0000            227   _SP             DATA 0x81
0000            228   _SPI0CFG        DATA 0xa1
0000            229   _SPI0CKR        DATA 0xa2
0000            230   _SPI0CN0        DATA 0xf8
0000            231   _SPI0DAT        DATA 0xa3
0000            232   _SPI0FCN0       DATA 0x9a
0000            233   _SPI0FCN1       DATA 0x9b
0000            234   _SPI0FCT        DATA 0xf7
0000            235   _SPI0PCF        DATA 0xdf
0000            236   _TCON           DATA 0x88
0000            237   _TH0            DATA 0x8c
0000            238   _TH1            DATA 0x8d
0000            239   _TL0            DATA 0x8a
0000            240   _TL1            DATA 0x8b
0000            241   _TMOD           DATA 0x89
0000            242   _TMR2CN0        DATA 0xc8
0000            243   _TMR2CN1        DATA 0xfd
0000            244   _TMR2H          DATA 0xcf
0000            245   _TMR2L          DATA 0xce
0000            246   _TMR2RLH        DATA 0xcb
0000            247   _TMR2RLL        DATA 0xca
0000            248   _TMR3CN0        DATA 0x91
0000            249   _TMR3CN1        DATA 0xfe
0000            250   _TMR3H          DATA 0x95
0000            251   _TMR3L          DATA 0x94
0000            252   _TMR3RLH        DATA 0x93
0000            253   _TMR3RLL        DATA 0x92
0000            254   _TMR4CN0        DATA 0x98
0000            255   _TMR4CN1        DATA 0xff
0000            256   _TMR4H          DATA 0xa5
0000            257   _TMR4L          DATA 0xa4
0000            258   _TMR4RLH        DATA 0xa3
0000            259   _TMR4RLL        DATA 0xa2
0000            260   _TMR5CN0        DATA 0xc0
0000            261   _TMR5CN1        DATA 0xf1
0000            262   _TMR5H          DATA 0xd5
0000            263   _TMR5L          DATA 0xd4
0000            264   _TMR5RLH        DATA 0xd3
0000            265   _TMR5RLL        DATA 0xd2
0000            266   _UART0PCF       DATA 0xd9
0000            267   _UART1FCN0      DATA 0x9d
0000            268   _UART1FCN1      DATA 0xd8
0000            269   _UART1FCT       DATA 0xfa
0000            270   _UART1LIN       DATA 0x9e
0000            271   _UART1PCF       DATA 0xda
0000            272   _VDM0CN         DATA 0xff
0000            273   _WDTCN          DATA 0x97
0000            274   _XBR0           DATA 0xe1
0000            275   _XBR1           DATA 0xe2
0000            276   _XBR2           DATA 0xe3
0000            277   _XOSC0CN        DATA 0x86
0000            278   _DPTR           DATA 0x8382
0000            279   _TMR2RL         DATA 0xcbca
0000            280   _TMR3RL         DATA 0x9392
0000            281   _TMR4RL         DATA 0xa3a2
0000            282   _TMR5RL         DATA 0xd3d2
0000            283   _TMR0           DATA 0x8c8a
0000            284   _TMR1           DATA 0x8d8b
0000            285   _TMR2           DATA 0xcfce
0000            286   _TMR3           DATA 0x9594
0000            287   _TMR4           DATA 0xa5a4
0000            288   _TMR5           DATA 0xd5d4
0000            289   _SBRL1          DATA 0x9695
0000            290   _PCA0           DATA 0xfaf9
0000            291   _PCA0CP0        DATA 0xfcfb
0000            292   _PCA0CP1        DATA 0xeae9
0000            293   _PCA0CP2        DATA 0xeceb
0000            294   _PCA0CP3        DATA 0xf5f4
0000            295   _PCA0CP4        DATA 0x8584
0000            296   _PCA0CP5        DATA 0xdedd
0000            297   _ADC0ASA        DATA 0xb6b5
0000            298   _ADC0GT         DATA 0xc4c3
0000            299   _ADC0           DATA 0xbebd
0000            300   _ADC0LT         DATA 0xc6c5
0000            301   _DAC0           DATA 0x8584
0000            302   _DAC1           DATA 0x8a89
0000            303   _DAC2           DATA 0x8c8b
0000            304   _DAC3           DATA 0x8e8d
0000            305   ;--------------------------------------------------------
0000            306   ; special function bits
0000            307   ;--------------------------------------------------------
0000            308   _ACC_0          BIT 0xe0
0000            309   _ACC_1          BIT 0xe1
0000            310   _ACC_2          BIT 0xe2
0000            311   _ACC_3          BIT 0xe3
0000            312   _ACC_4          BIT 0xe4
0000            313   _ACC_5          BIT 0xe5
0000            314   _ACC_6          BIT 0xe6
0000            315   _ACC_7          BIT 0xe7
0000            316   _TEMPE          BIT 0xe8
0000            317   _ADGN0          BIT 0xe9
0000            318   _ADGN1          BIT 0xea
0000            319   _ADWINT         BIT 0xeb
0000            320   _ADBUSY         BIT 0xec
0000            321   _ADINT          BIT 0xed
0000            322   _IPOEN          BIT 0xee
0000            323   _ADEN           BIT 0xef
0000            324   _B_0            BIT 0xf0
0000            325   _B_1            BIT 0xf1
0000            326   _B_2            BIT 0xf2
0000            327   _B_3            BIT 0xf3
0000            328   _B_4            BIT 0xf4
0000            329   _B_5            BIT 0xf5
0000            330   _B_6            BIT 0xf6
0000            331   _B_7            BIT 0xf7
0000            332   _C0FIF          BIT 0xe8
0000            333   _C0RIF          BIT 0xe9
0000            334   _C1FIF          BIT 0xea
0000            335   _C1RIF          BIT 0xeb
0000            336   _C2FIF          BIT 0xec
0000            337   _C2RIF          BIT 0xed
0000            338   _C3FIF          BIT 0xee
0000            339   _C3RIF          BIT 0xef
0000            340   _D1SRC0         BIT 0x88
0000            341   _D1SRC1         BIT 0x89
0000            342   _D1AMEN         BIT 0x8a
0000            343   _D01REFSL       BIT 0x8b
0000            344   _D3SRC0         BIT 0x8c
0000            345   _D3SRC1         BIT 0x8d
0000            346   _D3AMEN         BIT 0x8e
0000            347   _D23REFSL       BIT 0x8f
0000            348   _D0UDIS         BIT 0x98
0000            349   _D1UDIS         BIT 0x99
0000            350   _D2UDIS         BIT 0x9a
0000            351   _D3UDIS         BIT 0x9b
0000            352   _EX0            BIT 0xa8
0000            353   _ET0            BIT 0xa9
0000            354   _EX1            BIT 0xaa
0000            355   _ET1            BIT 0xab
0000            356   _ES0            BIT 0xac
0000            357   _ET2            BIT 0xad
0000            358   _ESPI0          BIT 0xae
0000            359   _EA             BIT 0xaf
0000            360   _PX0            BIT 0xb8
0000            361   _PT0            BIT 0xb9
0000            362   _PX1            BIT 0xba
0000            363   _PT1            BIT 0xbb
0000            364   _PS0            BIT 0xbc
0000            365   _PT2            BIT 0xbd
0000            366   _PSPI0          BIT 0xbe
0000            367   _P0_0           BIT 0x80
0000            368   _P0_1           BIT 0x81
0000            369   _P0_2           BIT 0x82
0000            370   _P0_3           BIT 0x83
0000            371   _P0_4           BIT 0x84
0000            372   _P0_5           BIT 0x85
0000            373   _P0_6           BIT 0x86
0000            374   _P0_7           BIT 0x87
0000            375   _P1_0           BIT 0x90
0000            376   _P1_1           BIT 0x91
0000            377   _P1_2           BIT 0x92
0000            378   _P1_3           BIT 0x93
0000            379   _P1_4           BIT 0x94
0000            380   _P1_5           BIT 0x95
0000            381   _P1_6           BIT 0x96
0000            382   _P1_7           BIT 0x97
0000            383   _P2_0           BIT 0xa0
0000            384   _P2_1           BIT 0xa1
0000            385   _P2_2           BIT 0xa2
0000            386   _P2_3           BIT 0xa3
0000            387   _P2_4           BIT 0xa4
0000            388   _P2_5           BIT 0xa5
0000            389   _P2_6           BIT 0xa6
0000            390   _P3_0           BIT 0xb0
0000            391   _P3_1           BIT 0xb1
0000            392   _P3_2           BIT 0xb2
0000            393   _P3_3           BIT 0xb3
0000            394   _P3_4           BIT 0xb4
0000            395   _P3_7           BIT 0xb7
0000            396   _CCF0           BIT 0xd8
0000            397   _CCF1           BIT 0xd9
0000            398   _CCF2           BIT 0xda
0000            399   _CCF3           BIT 0xdb
0000            400   _CCF4           BIT 0xdc
0000            401   _CCF5           BIT 0xdd
0000            402   _CR             BIT 0xde
0000            403   _CF             BIT 0xdf
0000            404   _PARITY         BIT 0xd0
0000            405   _F1             BIT 0xd1
0000            406   _OV             BIT 0xd2
0000            407   _RS0            BIT 0xd3
0000            408   _RS1            BIT 0xd4
0000            409   _F0             BIT 0xd5
0000            410   _AC             BIT 0xd6
0000            411   _CY             BIT 0xd7
0000            412   _RI             BIT 0x98
0000            413   _TI             BIT 0x99
0000            414   _RB8            BIT 0x9a
0000            415   _TB8            BIT 0x9b
0000            416   _REN            BIT 0x9c
0000            417   _CE             BIT 0x9d
0000            418   _SMODE          BIT 0x9e
0000            419   _RI1            BIT 0xc8
0000            420   _TI1            BIT 0xc9
0000            421   _RBX1           BIT 0xca
0000            422   _TBX1           BIT 0xcb
0000            423   _REN1           BIT 0xcc
0000            424   _PERR1          BIT 0xcd
0000            425   _OVR1           BIT 0xce
0000            426   _SI             BIT 0xc0
0000            427   _ACK            BIT 0xc1
0000            428   _ARBLOST        BIT 0xc2
0000            429   _ACKRQ          BIT 0xc3
0000            430   _STO            BIT 0xc4
0000            431   _STA            BIT 0xc5
0000            432   _TXMODE         BIT 0xc6
0000            433   _MASTER         BIT 0xc7
0000            434   _SPIEN          BIT 0xf8
0000            435   _TXNF           BIT 0xf9
0000            436   _NSSMD0         BIT 0xfa
0000            437   _NSSMD1         BIT 0xfb
0000            438   _RXOVRN         BIT 0xfc
0000            439   _MODF           BIT 0xfd
0000            440   _WCOL           BIT 0xfe
0000            441   _SPIF           BIT 0xff
0000            442   _IT0            BIT 0x88
0000            443   _IE0            BIT 0x89
0000            444   _IT1            BIT 0x8a
0000            445   _IE1            BIT 0x8b
0000            446   _TR0            BIT 0x8c
0000            447   _TF0            BIT 0x8d
0000            448   _TR1            BIT 0x8e
0000            449   _TF1            BIT 0x8f
0000            450   _T2XCLK0        BIT 0xc8
0000            451   _T2XCLK1        BIT 0xc9
0000            452   _TR2            BIT 0xca
0000            453   _T2SPLIT        BIT 0xcb
0000            454   _TF2CEN         BIT 0xcc
0000            455   _TF2LEN         BIT 0xcd
0000            456   _TF2L           BIT 0xce
0000            457   _TF2H           BIT 0xcf
0000            458   _T4XCLK0        BIT 0x98
0000            459   _T4XCLK1        BIT 0x99
0000            460   _TR4            BIT 0x9a
0000            461   _T4SPLIT        BIT 0x9b
0000            462   _TF4CEN         BIT 0x9c
0000            463   _TF4LEN         BIT 0x9d
0000            464   _TF4L           BIT 0x9e
0000            465   _TF4H           BIT 0x9f
0000            466   _T5XCLK0        BIT 0xc0
0000            467   _T5XCLK1        BIT 0xc1
0000            468   _TR5            BIT 0xc2
0000            469   _T5SPLIT        BIT 0xc3
0000            470   _TF5CEN         BIT 0xc4
0000            471   _TF5LEN         BIT 0xc5
0000            472   _TF5L           BIT 0xc6
0000            473   _TF5H           BIT 0xc7
0000            474   _RIE            BIT 0xd8
0000            475   _RXTO0          BIT 0xd9
0000            476   _RXTO1          BIT 0xda
0000            477   _RFRQ           BIT 0xdb
0000            478   _TIE            BIT 0xdc
0000            479   _TXHOLD         BIT 0xdd
0000            480   _TXNF1          BIT 0xde
0000            481   _TFRQ           BIT 0xdf
0000            482   ;--------------------------------------------------------
0000            483   ; overlayable register banks
0000            484   ;--------------------------------------------------------
0000            485            rbank0 segment data overlay
0000            486   ;--------------------------------------------------------
0000            487   ; overlayable bit register bank
0000            488   ;--------------------------------------------------------
0000            489            rseg BIT_BANK
0000            490   bits:
0000            491            ds 1
0001            492            b0 equ  bits.0 
0001            493            b1 equ  bits.1 
0001            494            b2 equ  bits.2 
0001            495            b3 equ  bits.3 
0001            496            b4 equ  bits.4 
0001            497            b5 equ  bits.5 
0001            498            b6 equ  bits.6 
0001            499            b7 equ  bits.7 
0001            500   ;--------------------------------------------------------
0001            501   ; internal ram data
0001            502   ;--------------------------------------------------------
0000            503            rseg R_DSEG
0000            504   _count:
0000            505            ds 2
0002            506   _state:
0002            507            ds 2
0004            508   _PWM_percent_y:
0004            509            ds 2
0006            510   _PWM_percent_x:
0006            511            ds 2
0008            512   _left_wheel:
0008            513            ds 4
000C            514   _right_wheel:
000C            515            ds 4
0010            516   _prev_PWM_percent_x:
0010            517            ds 2
0012            518   _prev_PWM_percent_y:
0012            519            ds 2
0014            520   _PWM_manager_PARM_2:
0014            521            ds 4
0018            522   _PWM_manager_sloc0_1_0:
0018            523            ds 2
001A            524   ;--------------------------------------------------------
001A            525   ; overlayable items in internal ram 
001A            526   ;--------------------------------------------------------
0000            527            rseg R_OSEG
0000            528   ;--------------------------------------------------------
0000            529   ; indirectly addressable internal ram data
0000            530   ;--------------------------------------------------------
0000            531            rseg R_ISEG
0000            532   ;--------------------------------------------------------
0000            533   ; absolute internal ram data
0000            534   ;--------------------------------------------------------
0000            535            DSEG
0000            536   ;--------------------------------------------------------
0000            537   ; bit data
0000            538   ;--------------------------------------------------------
0000            539            rseg R_BSEG
0000            540   ;--------------------------------------------------------
0000            541   ; paged external ram data
0000            542   ;--------------------------------------------------------
0000            543            rseg R_PSEG
0000            544   ;--------------------------------------------------------
0000            545   ; external ram data
0000            546   ;--------------------------------------------------------
0000            547            rseg R_XSEG
0000            548   ;--------------------------------------------------------
0000            549   ; absolute external ram data
0000            550   ;--------------------------------------------------------
0000            551            XSEG
0000            552   ;--------------------------------------------------------
0000            553   ; external initialized ram data
0000            554   ;--------------------------------------------------------
0000            555            rseg R_IXSEG
0000            556            rseg R_HOME
0000            557            rseg R_GSINIT
0000            558            rseg R_CSEG
0000            559   ;--------------------------------------------------------
0000            560   ; Reset entry point and interrupt vectors
0000            561   ;--------------------------------------------------------
0000            562            CSEG at 0x0000
0000 020000     563            ljmp    _crt0
0073            564            CSEG at 0x0073
0073 020000     565            ljmp    _Timer3_ISR
008B            566            CSEG at 0x008b
008B 020000     567            ljmp    _Timer4_ISR
008E            568   ;--------------------------------------------------------
008E            569   ; global & static initialisations
008E            570   ;--------------------------------------------------------
0000            571            rseg R_HOME
0000            572            rseg R_GSINIT
0000            573            rseg R_GSINIT
0000            574   ;--------------------------------------------------------
0000            575   ; data variables initialization
0000            576   ;--------------------------------------------------------
0000            577            rseg R_DINIT
0000            578   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:18: int count = 0;
0000 E4         579            clr     a
0001 F5D8       580            mov     _count,a
0003 F5D9       581            mov     (_count + 1),a
0005            582   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:21: int PWM_percent_y = 100;
0005 755864     583            mov     _PWM_percent_y,#0x64
0008 E4         584            clr     a
0009 F559       585            mov     (_PWM_percent_y + 1),a
000B            586   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:22: int PWM_percent_x = 20;
000B 751814     587            mov     _PWM_percent_x,#0x14
000E E4         588            clr     a
000F F519       589            mov     (_PWM_percent_x + 1),a
0011            590   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:23: float left_wheel = 0;
0011 75D800     591            mov     _left_wheel,#0x00
0014 75D900     592            mov     (_left_wheel + 1),#0x00
0017 75DA00     593            mov     (_left_wheel + 2),#0x00
001A 75DB00     594            mov     (_left_wheel + 3),#0x00
001D            595   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:24: float right_wheel = 0;
001D 759800     596            mov     _right_wheel,#0x00
0020 759900     597            mov     (_right_wheel + 1),#0x00
0023 759A00     598            mov     (_right_wheel + 2),#0x00
0026 759B00     599            mov     (_right_wheel + 3),#0x00
0029            600   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:25: int prev_PWM_percent_x = 0;
0029 E4         601            clr     a
002A F558       602            mov     _prev_PWM_percent_x,a
002C F559       603            mov     (_prev_PWM_percent_x + 1),a
002E            604   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:26: int prev_PWM_percent_y = 0;
002E E4         605            clr     a
002F F508       606            mov     _prev_PWM_percent_y,a
0031 F509       607            mov     (_prev_PWM_percent_y + 1),a
0033            608            ; The linker places a 'ret' at the end of segment R_DINIT.
0033            609   ;--------------------------------------------------------
0033            610   ; code
0033            611   ;--------------------------------------------------------
0000            612            rseg R_CSEG
0000            613   ;------------------------------------------------------------
0000            614   ;Allocation info for local variables in function '_c51_external_startup'
0000            615   ;------------------------------------------------------------
0000            616   ;------------------------------------------------------------
0000            617   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:28: char _c51_external_startup (void)
0000            618   ;        -----------------------------------------
0000            619   ;         function _c51_external_startup
0000            620   ;        -----------------------------------------
0000            621   __c51_external_startup:
0000            622            using   0
0000            623   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:31: SFRPAGE = 0x00;
0000 75A700     624            mov     _SFRPAGE,#0x00
0003            625   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:32: WDTCN = 0xDE; //First key
0003 7597DE     626            mov     _WDTCN,#0xDE
0006            627   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:33: WDTCN = 0xAD; //Second key
0006 7597AD     628            mov     _WDTCN,#0xAD
0009            629   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:35: VDM0CN=0x80;       // enable VDD monitor
0009 75FF80     630            mov     _VDM0CN,#0x80
000C            631   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:36: RSTSRC=0x02|0x04;  // Enable reset on missing clock detector and VDD
000C 75EF06     632            mov     _RSTSRC,#0x06
000F            633   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:43: SFRPAGE = 0x10;
000F 75A710     634            mov     _SFRPAGE,#0x10
0012            635   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:44: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     636            mov     _PFE0CN,#0x20
0015            637   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:45: SFRPAGE = 0x00;
0015 75A700     638            mov     _SFRPAGE,#0x00
0018            639   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:66: CLKSEL = 0x00;
0018 75A900     640            mov     _CLKSEL,#0x00
001B            641   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:67: CLKSEL = 0x00;
001B 75A900     642            mov     _CLKSEL,#0x00
001E            643   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:68: while ((CLKSEL & 0x80) == 0);
001E            644   L002001?:
001E E5A9       645            mov     a,_CLKSEL
0020 30E768     646            jnb     acc.7,L002001?
0023            647   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:69: CLKSEL = 0x03;
0023 75A903     648            mov     _CLKSEL,#0x03
0026            649   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:70: CLKSEL = 0x03;
0026 75A903     650            mov     _CLKSEL,#0x03
0029            651   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:71: while ((CLKSEL & 0x80) == 0);
0029            652   L002004?:
0029 E5A9       653            mov     a,_CLKSEL
002B 30E7E8     654            jnb     acc.7,L002004?
002E            655   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:76: P0MDOUT|=0b_1100_0010;
002E 43A4C2     656            orl     _P0MDOUT,#0xC2
0031            657   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:77: P1MDOUT|=0b_1111_1111;
0031 E5A5       658            mov     a,_P1MDOUT
0033 75A5FF     659            mov     _P1MDOUT,#0xFF
0036            660   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:78: P2MDOUT|=0b_0001_1111;
0036 43A61F     661            orl     _P2MDOUT,#0x1F
0039            662   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:80: XBR0     = 0x00;
0039 75E100     663            mov     _XBR0,#0x00
003C            664   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:81: XBR1     = 0X00;
003C 75E200     665            mov     _XBR1,#0x00
003F            666   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:82: XBR2     = 0x40; // Enable crossbar and weak pull-ups
003F 75E340     667            mov     _XBR2,#0x40
0042            668   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:98: return 0;
0042 758200     669            mov     dpl,#0x00
0045 22         670            ret
0046            671   ;------------------------------------------------------------
0046            672   ;Allocation info for local variables in function 'TIMER3Init'
0046            673   ;------------------------------------------------------------
0046            674   ;------------------------------------------------------------
0046            675   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:110: void TIMER3Init(void)
0046            676   ;        -----------------------------------------
0046            677   ;         function TIMER3Init
0046            678   ;        -----------------------------------------
0046            679   _TIMER3Init:
0046            680   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:113: TMR3CN0=0x00;   // Stop Timer3; Clear TF3;
0046 759100     681            mov     _TMR3CN0,#0x00
0049            682   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:114: CKCON0|=0b_0100_0000; // Timer 3 uses the system clock
0049 438E40     683            orl     _CKCON0,#0x40
004C            684   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:115: TMR3RL=(0x10000L-(SYSCLK/(2*TIMER_3_FREQ))); // Initialize reload value
004C 7592F0     685            mov     _TMR3RL,#0xF0
004F 7593F1     686            mov     (_TMR3RL >> 8),#0xF1
0052            687   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:116: TMR3=0xffff;   // Set to reload immediately
0052 7594FF     688            mov     _TMR3,#0xFF
0055 7595FF     689            mov     (_TMR3 >> 8),#0xFF
0058            690   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:117: EIE1|=0b_1000_0000;     // Enable Timer3 interrupts
0058 43E680     691            orl     _EIE1,#0x80
005B            692   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:118: TMR3CN0|=0b_0000_0100;  // Start Timer3 (TMR3CN0 is not bit addressable)
005B 439104     693            orl     _TMR3CN0,#0x04
005E            694   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:119: EA = 1;
005E D2AF       695            setb    _EA
0060 22         696            ret
0061            697   ;------------------------------------------------------------
0061            698   ;Allocation info for local variables in function 'TIMER4Init'
0061            699   ;------------------------------------------------------------
0061            700   ;------------------------------------------------------------
0061            701   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:122: void TIMER4Init(void)
0061            702   ;        -----------------------------------------
0061            703   ;         function TIMER4Init
0061            704   ;        -----------------------------------------
0061            705   _TIMER4Init:
0061            706   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:125: SFRPAGE=0x10;
0061 75A710     707            mov     _SFRPAGE,#0x10
0064            708   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:126: TMR4CN0=0x00;   // Stop Timer4; Clear TF4; WARNING: lives in SFR page 0x10
0064 759800     709            mov     _TMR4CN0,#0x00
0067            710   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:127: CKCON1|=0b_0000_0001; // Timer 4 uses the system clock
0067 43A601     711            orl     _CKCON1,#0x01
006A            712   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:128: TMR4RL=(0x10000L-(SYSCLK/(2*TIMER_4_FREQ))); // Initialize reload value
006A 75A2F0     713            mov     _TMR4RL,#0xF0
006D 75A3F1     714            mov     (_TMR4RL >> 8),#0xF1
0070            715   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:129: TMR4=0xffff;   // Set to reload immediately
0070 75A4FF     716            mov     _TMR4,#0xFF
0073 75A5FF     717            mov     (_TMR4 >> 8),#0xFF
0076            718   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:130: EIE2|=0b_0000_0100;     // Enable Timer4 interrupts
0076 43F304     719            orl     _EIE2,#0x04
0079            720   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:131: TR4=1;
0079 D29A       721            setb    _TR4
007B 22         722            ret
007C            723   ;------------------------------------------------------------
007C            724   ;Allocation info for local variables in function 'Timer3_ISR'
007C            725   ;------------------------------------------------------------
007C            726   ;------------------------------------------------------------
007C            727   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:163: void Timer3_ISR (void) interrupt INTERRUPT_TIMER3
007C            728   ;        -----------------------------------------
007C            729   ;         function Timer3_ISR
007C            730   ;        -----------------------------------------
007C            731   _Timer3_ISR:
007C C0D8       732            push    bits
007E C0E0       733            push    acc
0080 C0F0       734            push    b
0082 C082       735            push    dpl
0084 C083       736            push    dph
0086 C002       737            push    (0+2)
0088 C003       738            push    (0+3)
008A C004       739            push    (0+4)
008C C005       740            push    (0+5)
008E C006       741            push    (0+6)
0090 C007       742            push    (0+7)
0092 C000       743            push    (0+0)
0094 C001       744            push    (0+1)
0096 C0D0       745            push    psw
0098 75D000     746            mov     psw,#0x00
009B            747   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:165: SFRPAGE=0x0;
009B 75A700     748            mov     _SFRPAGE,#0x00
009E            749   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:166: TMR3CN0&=0b_0011_1111; // Clear Timer3 interrupt flags
009E 53913F     750            anl     _TMR3CN0,#0x3F
00A1            751   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:167: P1_2 = !P1_2;
00A1 B292       752            cpl     _P1_2
00A3            753   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:169: if (count > 100)
00A3 C3         754            clr     c
00A4 7464       755            mov     a,#0x64
00A6 95D8       756            subb    a,_count
00A8 E4         757            clr     a
00A9 6480       758            xrl     a,#0x80
00AB 85D9F0     759            mov     b,(_count + 1)
00AE 63F080     760            xrl     b,#0x80
00B1 95F0       761            subb    a,b
00B3 5000       762            jnc     L005004?
00B5            763   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:171: LEFT_MOTOR_LHS = 1;
00B5 D2A4       764            setb    _P2_4
00B7            765   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:173: count = 0;
00B7 E4         766            clr     a
00B8 F5D8       767            mov     _count,a
00BA F5D9       768            mov     (_count + 1),a
00BC 8000       769            sjmp    L005005?
00BE            770   L005004?:
00BE            771   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:175: else if (count > left_wheel)
00BE 85D882     772            mov     dpl,_count
00C1 85D983     773            mov     dph,(_count + 1)
00C4 120000     774            lcall   ___sint2fs
00C7 AA82       775            mov     r2,dpl
00C9 AB83       776            mov     r3,dph
00CB ACF0       777            mov     r4,b
00CD FD         778            mov     r5,a
00CE C0D8       779            push    _left_wheel
00D0 C0D9       780            push    (_left_wheel + 1)
00D2 C0DA       781            push    (_left_wheel + 2)
00D4 C0DB       782            push    (_left_wheel + 3)
00D6 8A82       783            mov     dpl,r2
00D8 8B83       784            mov     dph,r3
00DA 8CF0       785            mov     b,r4
00DC ED         786            mov     a,r5
00DD 120000     787            lcall   ___fsgt
00E0 AA82       788            mov     r2,dpl
00E2 E581       789            mov     a,sp
00E4 24FC       790            add     a,#0xfc
00E6 F581       791            mov     sp,a
00E8 EA         792            mov     a,r2
00E9 6000       793            jz      L005005?
00EB            794   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:177: LEFT_MOTOR_LHS = 0;
00EB C2A4       795            clr     _P2_4
00ED            796   L005005?:
00ED            797   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:179: count++;
00ED 05D8       798            inc     _count
00EF E4         799            clr     a
00F0 B5D868     800            cjne    a,_count,L005012?
00F3 05D9       801            inc     (_count + 1)
00F5            802   L005012?:
00F5 D0D0       803            pop     psw
00F7 D001       804            pop     (0+1)
00F9 D000       805            pop     (0+0)
00FB D007       806            pop     (0+7)
00FD D006       807            pop     (0+6)
00FF D005       808            pop     (0+5)
0101 D004       809            pop     (0+4)
0103 D003       810            pop     (0+3)
0105 D002       811            pop     (0+2)
0107 D083       812            pop     dph
0109 D082       813            pop     dpl
010B D0F0       814            pop     b
010D D0E0       815            pop     acc
010F D0D8       816            pop     bits
0111 32         817            reti
0112            818   ;------------------------------------------------------------
0112            819   ;Allocation info for local variables in function 'Timer4_ISR'
0112            820   ;------------------------------------------------------------
0112            821   ;------------------------------------------------------------
0112            822   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:182: void Timer4_ISR (void) interrupt INTERRUPT_TIMER4
0112            823   ;        -----------------------------------------
0112            824   ;         function Timer4_ISR
0112            825   ;        -----------------------------------------
0112            826   _Timer4_ISR:
0112 C0D8       827            push    bits
0114 C0E0       828            push    acc
0116 C0F0       829            push    b
0118 C082       830            push    dpl
011A C083       831            push    dph
011C C002       832            push    (0+2)
011E C003       833            push    (0+3)
0120 C004       834            push    (0+4)
0122 C005       835            push    (0+5)
0124 C006       836            push    (0+6)
0126 C007       837            push    (0+7)
0128 C000       838            push    (0+0)
012A C001       839            push    (0+1)
012C C0D0       840            push    psw
012E 75D000     841            mov     psw,#0x00
0131            842   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:184: SFRPAGE=0x10;
0131 75A710     843            mov     _SFRPAGE,#0x10
0134            844   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:185: TF4H = 0; // Clear Timer4 interrupt flag
0134 C29F       845            clr     _TF4H
0136            846   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:186: P1_3 = !P1_3;
0136 B293       847            cpl     _P1_3
0138            848   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:188: if (count > 100)
0138 C3         849            clr     c
0139 7464       850            mov     a,#0x64
013B 95D8       851            subb    a,_count
013D E4         852            clr     a
013E 6480       853            xrl     a,#0x80
0140 85D9F0     854            mov     b,(_count + 1)
0143 63F080     855            xrl     b,#0x80
0146 95F0       856            subb    a,b
0148 5000       857            jnc     L006004?
014A            858   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:190: RIGHT_MOTOR_LHS = 1;
014A D2A2       859            setb    _P2_2
014C            860   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:192: count = 0;
014C E4         861            clr     a
014D F5D8       862            mov     _count,a
014F F5D9       863            mov     (_count + 1),a
0151 8000       864            sjmp    L006005?
0153            865   L006004?:
0153            866   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:194: else if (count > right_wheel)
0153 85D882     867            mov     dpl,_count
0156 85D983     868            mov     dph,(_count + 1)
0159 120000     869            lcall   ___sint2fs
015C AA82       870            mov     r2,dpl
015E AB83       871            mov     r3,dph
0160 ACF0       872            mov     r4,b
0162 FD         873            mov     r5,a
0163 C098       874            push    _right_wheel
0165 C099       875            push    (_right_wheel + 1)
0167 C09A       876            push    (_right_wheel + 2)
0169 C09B       877            push    (_right_wheel + 3)
016B 8A82       878            mov     dpl,r2
016D 8B83       879            mov     dph,r3
016F 8CF0       880            mov     b,r4
0171 ED         881            mov     a,r5
0172 120000     882            lcall   ___fsgt
0175 AA82       883            mov     r2,dpl
0177 E581       884            mov     a,sp
0179 24FC       885            add     a,#0xfc
017B F581       886            mov     sp,a
017D EA         887            mov     a,r2
017E 6000       888            jz      L006005?
0180            889   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:196: RIGHT_MOTOR_LHS = 0;
0180 C2A2       890            clr     _P2_2
0182            891   L006005?:
0182            892   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:198: count++;
0182 05D8       893            inc     _count
0184 E4         894            clr     a
0185 B5D828     895            cjne    a,_count,L006012?
0188 05D9       896            inc     (_count + 1)
018A            897   L006012?:
018A D0D0       898            pop     psw
018C D001       899            pop     (0+1)
018E D000       900            pop     (0+0)
0190 D007       901            pop     (0+7)
0192 D006       902            pop     (0+6)
0194 D005       903            pop     (0+5)
0196 D004       904            pop     (0+4)
0198 D003       905            pop     (0+3)
019A D002       906            pop     (0+2)
019C D083       907            pop     dph
019E D082       908            pop     dpl
01A0 D0F0       909            pop     b
01A2 D0E0       910            pop     acc
01A4 D0D8       911            pop     bits
01A6 32         912            reti
01A7            913   ;------------------------------------------------------------
01A7            914   ;Allocation info for local variables in function 'PWM_manager'
01A7            915   ;------------------------------------------------------------
01A7            916   ;y_value                   Allocated with name '_PWM_manager_PARM_2'
01A7            917   ;x_value                   Allocated to registers r2 r3 r4 r5 
01A7            918   ;sloc0                     Allocated with name '_PWM_manager_sloc0_1_0'
01A7            919   ;------------------------------------------------------------
01A7            920   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:300: void PWM_manager(float x_value, float y_value)
01A7            921   ;        -----------------------------------------
01A7            922   ;         function PWM_manager
01A7            923   ;        -----------------------------------------
01A7            924   _PWM_manager:
01A7 AA82       925            mov     r2,dpl
01A9 AB83       926            mov     r3,dph
01AB ACF0       927            mov     r4,b
01AD FD         928            mov     r5,a
01AE            929   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:303: if (x_value >= 0) // RIGHT TURN
01AE C002       930            push    ar2
01B0 C003       931            push    ar3
01B2 C004       932            push    ar4
01B4 C005       933            push    ar5
01B6 E4         934            clr     a
01B7 C0E0       935            push    acc
01B9 C0E0       936            push    acc
01BB C0E0       937            push    acc
01BD C0E0       938            push    acc
01BF 8A82       939            mov     dpl,r2
01C1 8B83       940            mov     dph,r3
01C3 8CF0       941            mov     b,r4
01C5 ED         942            mov     a,r5
01C6 120000     943            lcall   ___fslt
01C9 AE82       944            mov     r6,dpl
01CB E581       945            mov     a,sp
01CD 24FC       946            add     a,#0xfc
01CF F581       947            mov     sp,a
01D1 D005       948            pop     ar5
01D3 D004       949            pop     ar4
01D5 D003       950            pop     ar3
01D7 D002       951            pop     ar2
01D9 EE         952            mov     a,r6
01DA 6000       953            jz      L007010?
01DC 020000     954            ljmp    L007004?
01DF            955   L007010?:
01DF            956   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:305: left_wheel = abs(y_value);
01DF 85B882     957            mov     dpl,_PWM_manager_PARM_2
01E2 85B983     958            mov     dph,(_PWM_manager_PARM_2 + 1)
01E5 85BAF0     959            mov     b,(_PWM_manager_PARM_2 + 2)
01E8 E5BB       960            mov     a,(_PWM_manager_PARM_2 + 3)
01EA C002       961            push    ar2
01EC C003       962            push    ar3
01EE C004       963            push    ar4
01F0 C005       964            push    ar5
01F2 120000     965            lcall   ___fs2sint
01F5 8582E8     966            mov     _PWM_manager_sloc0_1_0,dpl
01F8 8583E9     967            mov  (_PWM_manager_sloc0_1_0 + 1),dph
01FB 120000     968            lcall   _abs
01FE 120000     969            lcall   ___sint2fs
0201 8582D8     970            mov     _left_wheel,dpl
0204 8583D9     971            mov     (_left_wheel + 1),dph
0207 85F0DA     972            mov     (_left_wheel + 2),b
020A F5DB       973            mov     (_left_wheel + 3),a
020C D005       974            pop     ar5
020E D004       975            pop     ar4
0210 D003       976            pop     ar3
0212 D002       977            pop     ar2
0214            978   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:306: right_wheel = (100 - abs(x_value)) * abs(y_value) / 100;
0214 8A82       979            mov     dpl,r2
0216 8B83       980            mov     dph,r3
0218 8CF0       981            mov     b,r4
021A ED         982            mov     a,r5
021B 120000     983            lcall   ___fs2sint
021E 120000     984            lcall   _abs
0221 A982       985            mov     r1,dpl
0223 AF83       986            mov     r7,dph
0225 7464       987            mov     a,#0x64
0227 C3         988            clr     c
0228 99         989            subb    a,r1
0229 F9         990            mov     r1,a
022A E4         991            clr     a
022B 9F         992            subb    a,r7
022C FF         993            mov     r7,a
022D 85E882     994            mov     dpl,_PWM_manager_sloc0_1_0
0230 85E983     995            mov     dph,(_PWM_manager_sloc0_1_0 + 1)
0233 C007       996            push    ar7
0235 C001       997            push    ar1
0237 120000     998            lcall   _abs
023A 858200     999            mov     __mulint_PARM_2,dpl
023D 858301    1000            mov     (__mulint_PARM_2 + 1),dph
0240 D001      1001            pop     ar1
0242 D007      1002            pop     ar7
0244 8982      1003            mov     dpl,r1
0246 8F83      1004            mov     dph,r7
0248 120000    1005            lcall   __mulint
024B AF82      1006            mov     r7,dpl
024D A883      1007            mov     r0,dph
024F 750064    1008            mov     __divsint_PARM_2,#0x64
0252 E4        1009            clr     a
0253 F501      1010            mov     (__divsint_PARM_2 + 1),a
0255 8F82      1011            mov     dpl,r7
0257 8883      1012            mov     dph,r0
0259 120000    1013            lcall   __divsint
025C 120000    1014            lcall   ___sint2fs
025F 858298    1015            mov     _right_wheel,dpl
0262 858399    1016            mov     (_right_wheel + 1),dph
0265 85F09A    1017            mov     (_right_wheel + 2),b
0268 F59B      1018            mov     (_right_wheel + 3),a
026A 22        1019            ret
026B           1020   L007004?:
026B           1021   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:308: else if (x_value < 0) // LEFT TURN
026B EE        1022            mov     a,r6
026C 7000      1023            jnz     L007011?
026E 22        1024            ret
026F           1025   L007011?:
026F           1026   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:310: left_wheel = (100 - abs(x_value)) * abs(y_value) / 100;
026F 8A82      1027            mov     dpl,r2
0271 8B83      1028            mov     dph,r3
0273 8CF0      1029            mov     b,r4
0275 ED        1030            mov     a,r5
0276 120000    1031            lcall   ___fs2sint
0279 120000    1032            lcall   _abs
027C AA82      1033            mov     r2,dpl
027E AB83      1034            mov     r3,dph
0280 7464      1035            mov     a,#0x64
0282 C3        1036            clr     c
0283 9A        1037            subb    a,r2
0284 FA        1038            mov     r2,a
0285 E4        1039            clr     a
0286 9B        1040            subb    a,r3
0287 FB        1041            mov     r3,a
0288 85B882    1042            mov     dpl,_PWM_manager_PARM_2
028B 85B983    1043            mov     dph,(_PWM_manager_PARM_2 + 1)
028E 85BAF0    1044            mov     b,(_PWM_manager_PARM_2 + 2)
0291 E5BB      1045            mov     a,(_PWM_manager_PARM_2 + 3)
0293 C002      1046            push    ar2
0295 C003      1047            push    ar3
0297 120000    1048            lcall   ___fs2sint
029A AC82      1049            mov     r4,dpl
029C AD83      1050            mov  r5,dph
029E C004      1051            push    ar4
02A0 C005      1052            push    ar5
02A2 120000    1053            lcall   _abs
02A5 858200    1054            mov     __mulint_PARM_2,dpl
02A8 858301    1055            mov     (__mulint_PARM_2 + 1),dph
02AB D005      1056            pop     ar5
02AD D004      1057            pop     ar4
02AF D003      1058            pop     ar3
02B1 D002      1059            pop     ar2
02B3 8A82      1060            mov     dpl,r2
02B5 8B83      1061            mov     dph,r3
02B7 C004      1062            push    ar4
02B9 C005      1063            push    ar5
02BB 120000    1064            lcall   __mulint
02BE AA82      1065            mov     r2,dpl
02C0 AB83      1066            mov     r3,dph
02C2 750064    1067            mov     __divsint_PARM_2,#0x64
02C5 E4        1068            clr     a
02C6 F501      1069            mov     (__divsint_PARM_2 + 1),a
02C8 8A82      1070            mov     dpl,r2
02CA 8B83      1071            mov     dph,r3
02CC 120000    1072            lcall   __divsint
02CF 120000    1073            lcall   ___sint2fs
02D2 8582D8    1074            mov     _left_wheel,dpl
02D5 8583D9    1075            mov     (_left_wheel + 1),dph
02D8 85F0DA    1076            mov     (_left_wheel + 2),b
02DB F5DB      1077            mov     (_left_wheel + 3),a
02DD D005      1078            pop     ar5
02DF D004      1079            pop     ar4
02E1           1080   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:311: right_wheel = abs(y_value);
02E1 8C82      1081            mov     dpl,r4
02E3 8D83      1082            mov     dph,r5
02E5 120000    1083            lcall   _abs
02E8 120000    1084            lcall   ___sint2fs
02EB 858298    1085            mov     _right_wheel,dpl
02EE 858399    1086            mov     (_right_wheel + 1),dph
02F1 85F09A    1087            mov     (_right_wheel + 2),b
02F4 F59B      1088            mov     (_right_wheel + 3),a
02F6 22        1089            ret
02F7           1090   ;------------------------------------------------------------
02F7           1091   ;Allocation info for local variables in function 'main'
02F7           1092   ;------------------------------------------------------------
02F7           1093   ;------------------------------------------------------------
02F7           1094   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:367: int main(void)
02F7           1095   ;        -----------------------------------------
02F7           1096   ;         function main
02F7           1097   ;        -----------------------------------------
02F7           1098   _main:
02F7           1099   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:369: PWM_manager(PWM_percent_x, PWM_percent_x);
02F7 851882    1100            mov     dpl,_PWM_percent_x
02FA 851983    1101            mov     dph,(_PWM_percent_x + 1)
02FD 120000    1102            lcall   ___sint2fs
0300 AA82      1103            mov     r2,dpl
0302 AB83      1104            mov     r3,dph
0304 ACF0      1105            mov     r4,b
0306 FD        1106            mov     r5,a
0307 8AB8      1107            mov     _PWM_manager_PARM_2,r2
0309 8BB9      1108            mov     (_PWM_manager_PARM_2 + 1),r3
030B 8CBA      1109            mov     (_PWM_manager_PARM_2 + 2),r4
030D 8DBB      1110            mov     (_PWM_manager_PARM_2 + 3),r5
030F 120000    1111            lcall   _PWM_manager
0312           1112   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:371: TIMER3Init();
0312 120000    1113            lcall   _TIMER3Init
0315           1114   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:372: TIMER4Init();
0315 120000    1115            lcall   _TIMER4Init
0318           1116   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:376: printf("\r\nUart 1 test\r\n");
0318 74F8      1117            mov     a,#__str_0
031A C0E0      1118            push    acc
031C 74B9      1119            mov     a,#(__str_0 >> 8)
031E C0E0      1120            push    acc
0320 7480      1121            mov     a,#0x80
0322 C0E0      1122            push    acc
0324 120000    1123            lcall   _printf
0327 1581      1124            dec     sp
0329 1581      1125            dec     sp
032B 1581      1126            dec     sp
032D           1127   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:381: while(1)
032D           1128   L008002?:
032D           1129   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:383: PWM_manager(PWM_percent_x, PWM_percent_x);
032D 851882    1130            mov     dpl,_PWM_percent_x
0330 851983    1131            mov     dph,(_PWM_percent_x + 1)
0333 120000    1132            lcall   ___sint2fs
0336 AA82      1133            mov     r2,dpl
0338 AB83      1134            mov     r3,dph
033A ACF0      1135            mov     r4,b
033C FD        1136            mov     r5,a
033D 8AB8      1137            mov     _PWM_manager_PARM_2,r2
033F 8BB9      1138            mov     (_PWM_manager_PARM_2 + 1),r3
0341 8CBA      1139            mov     (_PWM_manager_PARM_2 + 2),r4
0343 8DBB      1140            mov     (_PWM_manager_PARM_2 + 3),r5
0345 120000    1141            lcall   _PWM_manager
0348 8000      1142            sjmp    L008002?
034A           1143            rseg R_CSEG
034A           1144   
0000           1145            rseg R_XINIT
0000           1146   
0000           1147            rseg R_CONST
0000           1148   __str_0:
0000 0D        1149            db 0x0D
0001 0A        1150            db 0x0A
0002 55617274  1151            db 'Uart 1 test'
     20312074
     657374
000D 0D        1152            db 0x0D
000E 0A        1153            db 0x0A
000F 00        1154            db 0x00
0010           1155   
008E           1156            CSEG
008E           1157   
008E           1158   end
