0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Tue Mar 26 14:16:50 2024
0000              5   ;--------------------------------------------------------
                  5   $name movement_new_new
                  6   $optc51 --model-small
0000              8            R_DSEG    segment data
0000              9            R_CSEG    segment code
0000             10            R_BSEG    segment bit
0000             11            R_XSEG    segment xdata
0000             12            R_PSEG    segment xdata
0000             13            R_ISEG    segment idata
0000             14            R_OSEG    segment data overlay
0000             15            BIT_BANK  segment data overlay
0000             16            R_HOME    segment code
0000             17            R_GSINIT  segment code
0000             18            R_IXSEG   segment xdata
0000             19            R_CONST   segment code
0000             20            R_XINIT   segment code
0000             21            R_DINIT   segment code
0000             22   
0000             23   ;--------------------------------------------------------
0000             24   ; Public variables in this module
0000             25   ;--------------------------------------------------------
0000             26            public _main
0000             27            public _PWM_manager
0000             28            public _movement_manager
0000             29            public _right
0000             30            public _left
0000             31            public _backward
0000             32            public _straight
0000             33            public _idle
0000             34            public _Timer4_ISR
0000             35            public _Timer3_ISR
0000             36            public _TIMER4Init
0000             37            public _TIMER3Init
0000             38            public __c51_external_startup
0000             39            public _PWM_manager_PARM_3
0000             40            public _PWM_manager_PARM_2
0000             41            public _movement_manager_PARM_5
0000             42            public _movement_manager_PARM_4
0000             43            public _movement_manager_PARM_3
0000             44            public _movement_manager_PARM_2
0000             45            public _array
0000             46            public _prev_PWM_percent_y
0000             47            public _prev_PWM_percent_x
0000             48            public _right_PWM
0000             49            public _left_PWM
0000             50            public _PWM_percent_x
0000             51            public _PWM_percent_y
0000             52            public _state
0000             53            public _count
0000             54   ;--------------------------------------------------------
0000             55   ; Special Function Registers
0000             56   ;--------------------------------------------------------
0000             57   _ACC            DATA 0xe0
0000             58   _ADC0ASAH       DATA 0xb6
0000             59   _ADC0ASAL       DATA 0xb5
0000             60   _ADC0ASCF       DATA 0xa1
0000             61   _ADC0ASCT       DATA 0xc7
0000             62   _ADC0CF0        DATA 0xbc
0000             63   _ADC0CF1        DATA 0xb9
0000             64   _ADC0CF2        DATA 0xdf
0000             65   _ADC0CN0        DATA 0xe8
0000             66   _ADC0CN1        DATA 0xb2
0000             67   _ADC0CN2        DATA 0xb3
0000             68   _ADC0GTH        DATA 0xc4
0000             69   _ADC0GTL        DATA 0xc3
0000             70   _ADC0H          DATA 0xbe
0000             71   _ADC0L          DATA 0xbd
0000             72   _ADC0LTH        DATA 0xc6
0000             73   _ADC0LTL        DATA 0xc5
0000             74   _ADC0MX         DATA 0xbb
0000             75   _B              DATA 0xf0
0000             76   _CKCON0         DATA 0x8e
0000             77   _CKCON1         DATA 0xa6
0000             78   _CLEN0          DATA 0xc6
0000             79   _CLIE0          DATA 0xc7
0000             80   _CLIF0          DATA 0xe8
0000             81   _CLKSEL         DATA 0xa9
0000             82   _CLOUT0         DATA 0xd1
0000             83   _CLU0CF         DATA 0xb1
0000             84   _CLU0FN         DATA 0xaf
0000             85   _CLU0MX         DATA 0x84
0000             86   _CLU1CF         DATA 0xb3
0000             87   _CLU1FN         DATA 0xb2
0000             88   _CLU1MX         DATA 0x85
0000             89   _CLU2CF         DATA 0xb6
0000             90   _CLU2FN         DATA 0xb5
0000             91   _CLU2MX         DATA 0x91
0000             92   _CLU3CF         DATA 0xbf
0000             93   _CLU3FN         DATA 0xbe
0000             94   _CLU3MX         DATA 0xae
0000             95   _CMP0CN0        DATA 0x9b
0000             96   _CMP0CN1        DATA 0x99
0000             97   _CMP0MD         DATA 0x9d
0000             98   _CMP0MX         DATA 0x9f
0000             99   _CMP1CN0        DATA 0xbf
0000            100   _CMP1CN1        DATA 0xac
0000            101   _CMP1MD         DATA 0xab
0000            102   _CMP1MX         DATA 0xaa
0000            103   _CRC0CN0        DATA 0xce
0000            104   _CRC0CN1        DATA 0x86
0000            105   _CRC0CNT        DATA 0xd3
0000            106   _CRC0DAT        DATA 0xcb
0000            107   _CRC0FLIP       DATA 0xcf
0000            108   _CRC0IN         DATA 0xca
0000            109   _CRC0ST         DATA 0xd2
0000            110   _DAC0CF0        DATA 0x91
0000            111   _DAC0CF1        DATA 0x92
0000            112   _DAC0H          DATA 0x85
0000            113   _DAC0L          DATA 0x84
0000            114   _DAC1CF0        DATA 0x93
0000            115   _DAC1CF1        DATA 0x94
0000            116   _DAC1H          DATA 0x8a
0000            117   _DAC1L          DATA 0x89
0000            118   _DAC2CF0        DATA 0x95
0000            119   _DAC2CF1        DATA 0x96
0000            120   _DAC2H          DATA 0x8c
0000            121   _DAC2L          DATA 0x8b
0000            122   _DAC3CF0        DATA 0x9a
0000            123   _DAC3CF1        DATA 0x9c
0000            124   _DAC3H          DATA 0x8e
0000            125   _DAC3L          DATA 0x8d
0000            126   _DACGCF0        DATA 0x88
0000            127   _DACGCF1        DATA 0x98
0000            128   _DACGCF2        DATA 0xa2
0000            129   _DERIVID        DATA 0xad
0000            130   _DEVICEID       DATA 0xb5
0000            131   _DPH            DATA 0x83
0000            132   _DPL            DATA 0x82
0000            133   _EIE1           DATA 0xe6
0000            134   _EIE2           DATA 0xf3
0000            135   _EIP1           DATA 0xbb
0000            136   _EIP1H          DATA 0xee
0000            137   _EIP2           DATA 0xed
0000            138   _EIP2H          DATA 0xf6
0000            139   _EMI0CN         DATA 0xe7
0000            140   _FLKEY          DATA 0xb7
0000            141   _HFO0CAL        DATA 0xc7
0000            142   _HFO1CAL        DATA 0xd6
0000            143   _HFOCN          DATA 0xef
0000            144   _I2C0ADM        DATA 0xff
0000            145   _I2C0CN0        DATA 0xba
0000            146   _I2C0DIN        DATA 0xbc
0000            147   _I2C0DOUT       DATA 0xbb
0000            148   _I2C0FCN0       DATA 0xad
0000            149   _I2C0FCN1       DATA 0xab
0000            150   _I2C0FCT        DATA 0xf5
0000            151   _I2C0SLAD       DATA 0xbd
0000            152   _I2C0STAT       DATA 0xb9
0000            153   _IE             DATA 0xa8
0000            154   _IP             DATA 0xb8
0000            155   _IPH            DATA 0xf2
0000            156   _IT01CF         DATA 0xe4
0000            157   _LFO0CN         DATA 0xb1
0000            158   _P0             DATA 0x80
0000            159   _P0MASK         DATA 0xfe
0000            160   _P0MAT          DATA 0xfd
0000            161   _P0MDIN         DATA 0xf1
0000            162   _P0MDOUT        DATA 0xa4
0000            163   _P0SKIP         DATA 0xd4
0000            164   _P1             DATA 0x90
0000            165   _P1MASK         DATA 0xee
0000            166   _P1MAT          DATA 0xed
0000            167   _P1MDIN         DATA 0xf2
0000            168   _P1MDOUT        DATA 0xa5
0000            169   _P1SKIP         DATA 0xd5
0000            170   _P2             DATA 0xa0
0000            171   _P2MASK         DATA 0xfc
0000            172   _P2MAT          DATA 0xfb
0000            173   _P2MDIN         DATA 0xf3
0000            174   _P2MDOUT        DATA 0xa6
0000            175   _P2SKIP         DATA 0xcc
0000            176   _P3             DATA 0xb0
0000            177   _P3MDIN         DATA 0xf4
0000            178   _P3MDOUT        DATA 0x9c
0000            179   _PCA0CENT       DATA 0x9e
0000            180   _PCA0CLR        DATA 0x9c
0000            181   _PCA0CN0        DATA 0xd8
0000            182   _PCA0CPH0       DATA 0xfc
0000            183   _PCA0CPH1       DATA 0xea
0000            184   _PCA0CPH2       DATA 0xec
0000            185   _PCA0CPH3       DATA 0xf5
0000            186   _PCA0CPH4       DATA 0x85
0000            187   _PCA0CPH5       DATA 0xde
0000            188   _PCA0CPL0       DATA 0xfb
0000            189   _PCA0CPL1       DATA 0xe9
0000            190   _PCA0CPL2       DATA 0xeb
0000            191   _PCA0CPL3       DATA 0xf4
0000            192   _PCA0CPL4       DATA 0x84
0000            193   _PCA0CPL5       DATA 0xdd
0000            194   _PCA0CPM0       DATA 0xda
0000            195   _PCA0CPM1       DATA 0xdb
0000            196   _PCA0CPM2       DATA 0xdc
0000            197   _PCA0CPM3       DATA 0xae
0000            198   _PCA0CPM4       DATA 0xaf
0000            199   _PCA0CPM5       DATA 0xcc
0000            200   _PCA0H          DATA 0xfa
0000            201   _PCA0L          DATA 0xf9
0000            202   _PCA0MD         DATA 0xd9
0000            203   _PCA0POL        DATA 0x96
0000            204   _PCA0PWM        DATA 0xf7
0000            205   _PCON0          DATA 0x87
0000            206   _PCON1          DATA 0xcd
0000            207   _PFE0CN         DATA 0xc1
0000            208   _PRTDRV         DATA 0xf6
0000            209   _PSCTL          DATA 0x8f
0000            210   _PSTAT0         DATA 0xaa
0000            211   _PSW            DATA 0xd0
0000            212   _REF0CN         DATA 0xd1
0000            213   _REG0CN         DATA 0xc9
0000            214   _REVID          DATA 0xb6
0000            215   _RSTSRC         DATA 0xef
0000            216   _SBCON1         DATA 0x94
0000            217   _SBRLH1         DATA 0x96
0000            218   _SBRLL1         DATA 0x95
0000            219   _SBUF           DATA 0x99
0000            220   _SBUF0          DATA 0x99
0000            221   _SBUF1          DATA 0x92
0000            222   _SCON           DATA 0x98
0000            223   _SCON0          DATA 0x98
0000            224   _SCON1          DATA 0xc8
0000            225   _SFRPAGE        DATA 0xa7
0000            226   _SFRPGCN        DATA 0xbc
0000            227   _SFRSTACK       DATA 0xd7
0000            228   _SMB0ADM        DATA 0xd6
0000            229   _SMB0ADR        DATA 0xd7
0000            230   _SMB0CF         DATA 0xc1
0000            231   _SMB0CN0        DATA 0xc0
0000            232   _SMB0DAT        DATA 0xc2
0000            233   _SMB0FCN0       DATA 0xc3
0000            234   _SMB0FCN1       DATA 0xc4
0000            235   _SMB0FCT        DATA 0xef
0000            236   _SMB0RXLN       DATA 0xc5
0000            237   _SMB0TC         DATA 0xac
0000            238   _SMOD1          DATA 0x93
0000            239   _SP             DATA 0x81
0000            240   _SPI0CFG        DATA 0xa1
0000            241   _SPI0CKR        DATA 0xa2
0000            242   _SPI0CN0        DATA 0xf8
0000            243   _SPI0DAT        DATA 0xa3
0000            244   _SPI0FCN0       DATA 0x9a
0000            245   _SPI0FCN1       DATA 0x9b
0000            246   _SPI0FCT        DATA 0xf7
0000            247   _SPI0PCF        DATA 0xdf
0000            248   _TCON           DATA 0x88
0000            249   _TH0            DATA 0x8c
0000            250   _TH1            DATA 0x8d
0000            251   _TL0            DATA 0x8a
0000            252   _TL1            DATA 0x8b
0000            253   _TMOD           DATA 0x89
0000            254   _TMR2CN0        DATA 0xc8
0000            255   _TMR2CN1        DATA 0xfd
0000            256   _TMR2H          DATA 0xcf
0000            257   _TMR2L          DATA 0xce
0000            258   _TMR2RLH        DATA 0xcb
0000            259   _TMR2RLL        DATA 0xca
0000            260   _TMR3CN0        DATA 0x91
0000            261   _TMR3CN1        DATA 0xfe
0000            262   _TMR3H          DATA 0x95
0000            263   _TMR3L          DATA 0x94
0000            264   _TMR3RLH        DATA 0x93
0000            265   _TMR3RLL        DATA 0x92
0000            266   _TMR4CN0        DATA 0x98
0000            267   _TMR4CN1        DATA 0xff
0000            268   _TMR4H          DATA 0xa5
0000            269   _TMR4L          DATA 0xa4
0000            270   _TMR4RLH        DATA 0xa3
0000            271   _TMR4RLL        DATA 0xa2
0000            272   _TMR5CN0        DATA 0xc0
0000            273   _TMR5CN1        DATA 0xf1
0000            274   _TMR5H          DATA 0xd5
0000            275   _TMR5L          DATA 0xd4
0000            276   _TMR5RLH        DATA 0xd3
0000            277   _TMR5RLL        DATA 0xd2
0000            278   _UART0PCF       DATA 0xd9
0000            279   _UART1FCN0      DATA 0x9d
0000            280   _UART1FCN1      DATA 0xd8
0000            281   _UART1FCT       DATA 0xfa
0000            282   _UART1LIN       DATA 0x9e
0000            283   _UART1PCF       DATA 0xda
0000            284   _VDM0CN         DATA 0xff
0000            285   _WDTCN          DATA 0x97
0000            286   _XBR0           DATA 0xe1
0000            287   _XBR1           DATA 0xe2
0000            288   _XBR2           DATA 0xe3
0000            289   _XOSC0CN        DATA 0x86
0000            290   _DPTR           DATA 0x8382
0000            291   _TMR2RL         DATA 0xcbca
0000            292   _TMR3RL         DATA 0x9392
0000            293   _TMR4RL         DATA 0xa3a2
0000            294   _TMR5RL         DATA 0xd3d2
0000            295   _TMR0           DATA 0x8c8a
0000            296   _TMR1           DATA 0x8d8b
0000            297   _TMR2           DATA 0xcfce
0000            298   _TMR3           DATA 0x9594
0000            299   _TMR4           DATA 0xa5a4
0000            300   _TMR5           DATA 0xd5d4
0000            301   _SBRL1          DATA 0x9695
0000            302   _PCA0           DATA 0xfaf9
0000            303   _PCA0CP0        DATA 0xfcfb
0000            304   _PCA0CP1        DATA 0xeae9
0000            305   _PCA0CP2        DATA 0xeceb
0000            306   _PCA0CP3        DATA 0xf5f4
0000            307   _PCA0CP4        DATA 0x8584
0000            308   _PCA0CP5        DATA 0xdedd
0000            309   _ADC0ASA        DATA 0xb6b5
0000            310   _ADC0GT         DATA 0xc4c3
0000            311   _ADC0           DATA 0xbebd
0000            312   _ADC0LT         DATA 0xc6c5
0000            313   _DAC0           DATA 0x8584
0000            314   _DAC1           DATA 0x8a89
0000            315   _DAC2           DATA 0x8c8b
0000            316   _DAC3           DATA 0x8e8d
0000            317   ;--------------------------------------------------------
0000            318   ; special function bits
0000            319   ;--------------------------------------------------------
0000            320   _ACC_0          BIT 0xe0
0000            321   _ACC_1          BIT 0xe1
0000            322   _ACC_2          BIT 0xe2
0000            323   _ACC_3          BIT 0xe3
0000            324   _ACC_4          BIT 0xe4
0000            325   _ACC_5          BIT 0xe5
0000            326   _ACC_6          BIT 0xe6
0000            327   _ACC_7          BIT 0xe7
0000            328   _TEMPE          BIT 0xe8
0000            329   _ADGN0          BIT 0xe9
0000            330   _ADGN1          BIT 0xea
0000            331   _ADWINT         BIT 0xeb
0000            332   _ADBUSY         BIT 0xec
0000            333   _ADINT          BIT 0xed
0000            334   _IPOEN          BIT 0xee
0000            335   _ADEN           BIT 0xef
0000            336   _B_0            BIT 0xf0
0000            337   _B_1            BIT 0xf1
0000            338   _B_2            BIT 0xf2
0000            339   _B_3            BIT 0xf3
0000            340   _B_4            BIT 0xf4
0000            341   _B_5            BIT 0xf5
0000            342   _B_6            BIT 0xf6
0000            343   _B_7            BIT 0xf7
0000            344   _C0FIF          BIT 0xe8
0000            345   _C0RIF          BIT 0xe9
0000            346   _C1FIF          BIT 0xea
0000            347   _C1RIF          BIT 0xeb
0000            348   _C2FIF          BIT 0xec
0000            349   _C2RIF          BIT 0xed
0000            350   _C3FIF          BIT 0xee
0000            351   _C3RIF          BIT 0xef
0000            352   _D1SRC0         BIT 0x88
0000            353   _D1SRC1         BIT 0x89
0000            354   _D1AMEN         BIT 0x8a
0000            355   _D01REFSL       BIT 0x8b
0000            356   _D3SRC0         BIT 0x8c
0000            357   _D3SRC1         BIT 0x8d
0000            358   _D3AMEN         BIT 0x8e
0000            359   _D23REFSL       BIT 0x8f
0000            360   _D0UDIS         BIT 0x98
0000            361   _D1UDIS         BIT 0x99
0000            362   _D2UDIS         BIT 0x9a
0000            363   _D3UDIS         BIT 0x9b
0000            364   _EX0            BIT 0xa8
0000            365   _ET0            BIT 0xa9
0000            366   _EX1            BIT 0xaa
0000            367   _ET1            BIT 0xab
0000            368   _ES0            BIT 0xac
0000            369   _ET2            BIT 0xad
0000            370   _ESPI0          BIT 0xae
0000            371   _EA             BIT 0xaf
0000            372   _PX0            BIT 0xb8
0000            373   _PT0            BIT 0xb9
0000            374   _PX1            BIT 0xba
0000            375   _PT1            BIT 0xbb
0000            376   _PS0            BIT 0xbc
0000            377   _PT2            BIT 0xbd
0000            378   _PSPI0          BIT 0xbe
0000            379   _P0_0           BIT 0x80
0000            380   _P0_1           BIT 0x81
0000            381   _P0_2           BIT 0x82
0000            382   _P0_3           BIT 0x83
0000            383   _P0_4           BIT 0x84
0000            384   _P0_5           BIT 0x85
0000            385   _P0_6           BIT 0x86
0000            386   _P0_7           BIT 0x87
0000            387   _P1_0           BIT 0x90
0000            388   _P1_1           BIT 0x91
0000            389   _P1_2           BIT 0x92
0000            390   _P1_3           BIT 0x93
0000            391   _P1_4           BIT 0x94
0000            392   _P1_5           BIT 0x95
0000            393   _P1_6           BIT 0x96
0000            394   _P1_7           BIT 0x97
0000            395   _P2_0           BIT 0xa0
0000            396   _P2_1           BIT 0xa1
0000            397   _P2_2           BIT 0xa2
0000            398   _P2_3           BIT 0xa3
0000            399   _P2_4           BIT 0xa4
0000            400   _P2_5           BIT 0xa5
0000            401   _P2_6           BIT 0xa6
0000            402   _P3_0           BIT 0xb0
0000            403   _P3_1           BIT 0xb1
0000            404   _P3_2           BIT 0xb2
0000            405   _P3_3           BIT 0xb3
0000            406   _P3_4           BIT 0xb4
0000            407   _P3_7           BIT 0xb7
0000            408   _CCF0           BIT 0xd8
0000            409   _CCF1           BIT 0xd9
0000            410   _CCF2           BIT 0xda
0000            411   _CCF3           BIT 0xdb
0000            412   _CCF4           BIT 0xdc
0000            413   _CCF5           BIT 0xdd
0000            414   _CR             BIT 0xde
0000            415   _CF             BIT 0xdf
0000            416   _PARITY         BIT 0xd0
0000            417   _F1             BIT 0xd1
0000            418   _OV             BIT 0xd2
0000            419   _RS0            BIT 0xd3
0000            420   _RS1            BIT 0xd4
0000            421   _F0             BIT 0xd5
0000            422   _AC             BIT 0xd6
0000            423   _CY             BIT 0xd7
0000            424   _RI             BIT 0x98
0000            425   _TI             BIT 0x99
0000            426   _RB8            BIT 0x9a
0000            427   _TB8            BIT 0x9b
0000            428   _REN            BIT 0x9c
0000            429   _CE             BIT 0x9d
0000            430   _SMODE          BIT 0x9e
0000            431   _RI1            BIT 0xc8
0000            432   _TI1            BIT 0xc9
0000            433   _RBX1           BIT 0xca
0000            434   _TBX1           BIT 0xcb
0000            435   _REN1           BIT 0xcc
0000            436   _PERR1          BIT 0xcd
0000            437   _OVR1           BIT 0xce
0000            438   _SI             BIT 0xc0
0000            439   _ACK            BIT 0xc1
0000            440   _ARBLOST        BIT 0xc2
0000            441   _ACKRQ          BIT 0xc3
0000            442   _STO            BIT 0xc4
0000            443   _STA            BIT 0xc5
0000            444   _TXMODE         BIT 0xc6
0000            445   _MASTER         BIT 0xc7
0000            446   _SPIEN          BIT 0xf8
0000            447   _TXNF           BIT 0xf9
0000            448   _NSSMD0         BIT 0xfa
0000            449   _NSSMD1         BIT 0xfb
0000            450   _RXOVRN         BIT 0xfc
0000            451   _MODF           BIT 0xfd
0000            452   _WCOL           BIT 0xfe
0000            453   _SPIF           BIT 0xff
0000            454   _IT0            BIT 0x88
0000            455   _IE0            BIT 0x89
0000            456   _IT1            BIT 0x8a
0000            457   _IE1            BIT 0x8b
0000            458   _TR0            BIT 0x8c
0000            459   _TF0            BIT 0x8d
0000            460   _TR1            BIT 0x8e
0000            461   _TF1            BIT 0x8f
0000            462   _T2XCLK0        BIT 0xc8
0000            463   _T2XCLK1        BIT 0xc9
0000            464   _TR2            BIT 0xca
0000            465   _T2SPLIT        BIT 0xcb
0000            466   _TF2CEN         BIT 0xcc
0000            467   _TF2LEN         BIT 0xcd
0000            468   _TF2L           BIT 0xce
0000            469   _TF2H           BIT 0xcf
0000            470   _T4XCLK0        BIT 0x98
0000            471   _T4XCLK1        BIT 0x99
0000            472   _TR4            BIT 0x9a
0000            473   _T4SPLIT        BIT 0x9b
0000            474   _TF4CEN         BIT 0x9c
0000            475   _TF4LEN         BIT 0x9d
0000            476   _TF4L           BIT 0x9e
0000            477   _TF4H           BIT 0x9f
0000            478   _T5XCLK0        BIT 0xc0
0000            479   _T5XCLK1        BIT 0xc1
0000            480   _TR5            BIT 0xc2
0000            481   _T5SPLIT        BIT 0xc3
0000            482   _TF5CEN         BIT 0xc4
0000            483   _TF5LEN         BIT 0xc5
0000            484   _TF5L           BIT 0xc6
0000            485   _TF5H           BIT 0xc7
0000            486   _RIE            BIT 0xd8
0000            487   _RXTO0          BIT 0xd9
0000            488   _RXTO1          BIT 0xda
0000            489   _RFRQ           BIT 0xdb
0000            490   _TIE            BIT 0xdc
0000            491   _TXHOLD         BIT 0xdd
0000            492   _TXNF1          BIT 0xde
0000            493   _TFRQ           BIT 0xdf
0000            494   ;--------------------------------------------------------
0000            495   ; overlayable register banks
0000            496   ;--------------------------------------------------------
0000            497            rbank0 segment data overlay
0000            498   ;--------------------------------------------------------
0000            499   ; overlayable bit register bank
0000            500   ;--------------------------------------------------------
0000            501            rseg BIT_BANK
0000            502   bits:
0000            503            ds 1
0001            504            b0 equ  bits.0 
0001            505            b1 equ  bits.1 
0001            506            b2 equ  bits.2 
0001            507            b3 equ  bits.3 
0001            508            b4 equ  bits.4 
0001            509            b5 equ  bits.5 
0001            510            b6 equ  bits.6 
0001            511            b7 equ  bits.7 
0001            512   ;--------------------------------------------------------
0001            513   ; internal ram data
0001            514   ;--------------------------------------------------------
0000            515            rseg R_DSEG
0000            516   _count:
0000            517            ds 2
0002            518   _state:
0002            519            ds 2
0004            520   _PWM_percent_y:
0004            521            ds 4
0008            522   _PWM_percent_x:
0008            523            ds 4
000C            524   _left_PWM:
000C            525            ds 4
0010            526   _right_PWM:
0010            527            ds 4
0014            528   _prev_PWM_percent_x:
0014            529            ds 4
0018            530   _prev_PWM_percent_y:
0018            531            ds 4
001C            532   _array:
001C            533            ds 8
0024            534   _Timer3_ISR_sloc0_1_0:
0024            535            ds 4
0028            536   _Timer4_ISR_sloc0_1_0:
0028            537            ds 4
002C            538   _movement_manager_PARM_2:
002C            539            ds 4
0030            540   _movement_manager_PARM_3:
0030            541            ds 4
0034            542   _movement_manager_PARM_4:
0034            543            ds 4
0038            544   _movement_manager_PARM_5:
0038            545            ds 1
0039            546   _PWM_manager_PARM_2:
0039            547            ds 4
003D            548   _PWM_manager_PARM_3:
003D            549            ds 3
0040            550   _PWM_manager_sloc0_1_0:
0040            551            ds 3
0043            552   _PWM_manager_sloc1_1_0:
0043            553            ds 4
0047            554   ;--------------------------------------------------------
0047            555   ; overlayable items in internal ram 
0047            556   ;--------------------------------------------------------
0000            557            rseg R_OSEG
0000            558   ;--------------------------------------------------------
0000            559   ; indirectly addressable internal ram data
0000            560   ;--------------------------------------------------------
0000            561            rseg R_ISEG
0000            562   ;--------------------------------------------------------
0000            563   ; absolute internal ram data
0000            564   ;--------------------------------------------------------
0000            565            DSEG
0000            566   ;--------------------------------------------------------
0000            567   ; bit data
0000            568   ;--------------------------------------------------------
0000            569            rseg R_BSEG
0000            570   ;--------------------------------------------------------
0000            571   ; paged external ram data
0000            572   ;--------------------------------------------------------
0000            573            rseg R_PSEG
0000            574   ;--------------------------------------------------------
0000            575   ; external ram data
0000            576   ;--------------------------------------------------------
0000            577            rseg R_XSEG
0000            578   ;--------------------------------------------------------
0000            579   ; absolute external ram data
0000            580   ;--------------------------------------------------------
0000            581            XSEG
0000            582   ;--------------------------------------------------------
0000            583   ; external initialized ram data
0000            584   ;--------------------------------------------------------
0000            585            rseg R_IXSEG
0000            586            rseg R_HOME
0000            587            rseg R_GSINIT
0000            588            rseg R_CSEG
0000            589   ;--------------------------------------------------------
0000            590   ; Reset entry point and interrupt vectors
0000            591   ;--------------------------------------------------------
0000            592            CSEG at 0x0000
0000 020000     593            ljmp    _crt0
0073            594            CSEG at 0x0073
0073 020000     595            ljmp    _Timer3_ISR
008B            596            CSEG at 0x008b
008B 020000     597            ljmp    _Timer4_ISR
008E            598   ;--------------------------------------------------------
008E            599   ; global & static initialisations
008E            600   ;--------------------------------------------------------
0000            601            rseg R_HOME
0000            602            rseg R_GSINIT
0000            603            rseg R_GSINIT
0000            604   ;--------------------------------------------------------
0000            605   ; data variables initialization
0000            606   ;--------------------------------------------------------
0000            607            rseg R_DINIT
0000            608   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:16: int count = 0;
0000 E4         609            clr     a
0001 F538       610            mov     _count,a
0003 F539       611            mov     (_count + 1),a
0005            612   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:18: float PWM_percent_y = 0.25;
0005 75B800     613            mov     _PWM_percent_y,#0x00
0008 75B900     614            mov     (_PWM_percent_y + 1),#0x00
000B 75BA80     615            mov     (_PWM_percent_y + 2),#0x80
000E 75BB3E     616            mov     (_PWM_percent_y + 3),#0x3E
0011            617   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:19: float PWM_percent_x = 0;
0011 757800     618            mov     _PWM_percent_x,#0x00
0014 757900     619            mov     (_PWM_percent_x + 1),#0x00
0017 757A00     620            mov     (_PWM_percent_x + 2),#0x00
001A 757B00     621            mov     (_PWM_percent_x + 3),#0x00
001D            622   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:20: float left_PWM = 0;
001D 753800     623            mov     _left_PWM,#0x00
0020 753900     624            mov     (_left_PWM + 1),#0x00
0023 753A00     625            mov     (_left_PWM + 2),#0x00
0026 753B00     626            mov     (_left_PWM + 3),#0x00
0029            627   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:21: float right_PWM = 0;
0029 75F800     628            mov     _right_PWM,#0x00
002C 75F900     629            mov     (_right_PWM + 1),#0x00
002F 75FA00     630            mov     (_right_PWM + 2),#0x00
0032 75FB00     631            mov     (_right_PWM + 3),#0x00
0035            632   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:22: float prev_PWM_percent_x = 0;
0035 75B800     633            mov     _prev_PWM_percent_x,#0x00
0038 75B900     634            mov     (_prev_PWM_percent_x + 1),#0x00
003B 75BA00     635            mov     (_prev_PWM_percent_x + 2),#0x00
003E 75BB00     636            mov     (_prev_PWM_percent_x + 3),#0x00
0041            637   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:23: float prev_PWM_percent_y = 0;
0041 756800     638            mov     _prev_PWM_percent_y,#0x00
0044 756900     639            mov     (_prev_PWM_percent_y + 1),#0x00
0047 756A00     640            mov     (_prev_PWM_percent_y + 2),#0x00
004A 756B00     641            mov     (_prev_PWM_percent_y + 3),#0x00
004D            642            ; The linker places a 'ret' at the end of segment R_DINIT.
004D            643   ;--------------------------------------------------------
004D            644   ; code
004D            645   ;--------------------------------------------------------
0000            646            rseg R_CSEG
0000            647   ;------------------------------------------------------------
0000            648   ;Allocation info for local variables in function '_c51_external_startup'
0000            649   ;------------------------------------------------------------
0000            650   ;------------------------------------------------------------
0000            651   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:26: char _c51_external_startup (void)
0000            652   ;        -----------------------------------------
0000            653   ;         function _c51_external_startup
0000            654   ;        -----------------------------------------
0000            655   __c51_external_startup:
0000            656            using   0
0000            657   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:29: SFRPAGE = 0x00;
0000 75A700     658            mov     _SFRPAGE,#0x00
0003            659   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:30: WDTCN = 0xDE; //First key
0003 7597DE     660            mov     _WDTCN,#0xDE
0006            661   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:31: WDTCN = 0xAD; //Second key
0006 7597AD     662            mov     _WDTCN,#0xAD
0009            663   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:33: VDM0CN=0x80;       // enable VDD monitor
0009 75FF80     664            mov     _VDM0CN,#0x80
000C            665   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:34: RSTSRC=0x02|0x04;  // Enable reset on missing clock detector and VDD
000C 75EF06     666            mov     _RSTSRC,#0x06
000F            667   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:41: SFRPAGE = 0x10;
000F 75A710     668            mov     _SFRPAGE,#0x10
0012            669   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:42: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     670            mov     _PFE0CN,#0x20
0015            671   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:43: SFRPAGE = 0x00;
0015 75A700     672            mov     _SFRPAGE,#0x00
0018            673   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:64: CLKSEL = 0x00;
0018 75A900     674            mov     _CLKSEL,#0x00
001B            675   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:65: CLKSEL = 0x00;
001B 75A900     676            mov     _CLKSEL,#0x00
001E            677   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:66: while ((CLKSEL & 0x80) == 0);
001E            678   L002001?:
001E E5A9       679            mov     a,_CLKSEL
0020 30E7C0     680            jnb     acc.7,L002001?
0023            681   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:67: CLKSEL = 0x03;
0023 75A903     682            mov     _CLKSEL,#0x03
0026            683   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:68: CLKSEL = 0x03;
0026 75A903     684            mov     _CLKSEL,#0x03
0029            685   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:69: while ((CLKSEL & 0x80) == 0);
0029            686   L002004?:
0029 E5A9       687            mov     a,_CLKSEL
002B 30E740     688            jnb     acc.7,L002004?
002E            689   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:74: P0MDOUT|=0b_1100_0010;
002E 43A4C2     690            orl     _P0MDOUT,#0xC2
0031            691   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:75: P1MDOUT|=0b_1111_1111;
0031 E5A5       692            mov     a,_P1MDOUT
0033 75A5FF     693            mov     _P1MDOUT,#0xFF
0036            694   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:76: P2MDOUT|=0b_0001_1111;
0036 43A61F     695            orl     _P2MDOUT,#0x1F
0039            696   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:78: XBR0     = 0x00;                     
0039 75E100     697            mov     _XBR0,#0x00
003C            698   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:79: XBR1     = 0X00;
003C 75E200     699            mov     _XBR1,#0x00
003F            700   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:80: XBR2     = 0x40; // Enable crossbar and weak pull-ups
003F 75E340     701            mov     _XBR2,#0x40
0042            702   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:81: return 0;
0042 758200     703            mov     dpl,#0x00
0045 22         704            ret
0046            705   ;------------------------------------------------------------
0046            706   ;Allocation info for local variables in function 'TIMER3Init'
0046            707   ;------------------------------------------------------------
0046            708   ;------------------------------------------------------------
0046            709   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:92: void TIMER3Init(void)
0046            710   ;        -----------------------------------------
0046            711   ;         function TIMER3Init
0046            712   ;        -----------------------------------------
0046            713   _TIMER3Init:
0046            714   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:95: TMR3CN0=0x00;   // Stop Timer3; Clear TF3;
0046 759100     715            mov     _TMR3CN0,#0x00
0049            716   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:96: CKCON0|=0b_0100_0000; // Timer 3 uses the system clock
0049 438E40     717            orl     _CKCON0,#0x40
004C            718   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:97: TMR3RL=(0x10000L-(SYSCLK/(2*TIMER_3_FREQ))); // Initialize reload value
004C 7592F0     719            mov     _TMR3RL,#0xF0
004F 7593F1     720            mov     (_TMR3RL >> 8),#0xF1
0052            721   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:98: TMR3=0xffff;   // Set to reload immediately
0052 7594FF     722            mov     _TMR3,#0xFF
0055 7595FF     723            mov     (_TMR3 >> 8),#0xFF
0058            724   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:99: EIE1|=0b_1000_0000;     // Enable Timer3 interrupts
0058 43E680     725            orl     _EIE1,#0x80
005B            726   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:100: TMR3CN0|=0b_0000_0100;  // Start Timer3 (TMR3CN0 is not bit addressable)
005B 439104     727            orl     _TMR3CN0,#0x04
005E            728   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:101: EA = 1;
005E D2AF       729            setb    _EA
0060 22         730            ret
0061            731   ;------------------------------------------------------------
0061            732   ;Allocation info for local variables in function 'TIMER4Init'
0061            733   ;------------------------------------------------------------
0061            734   ;------------------------------------------------------------
0061            735   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:103: void TIMER4Init(void)
0061            736   ;        -----------------------------------------
0061            737   ;         function TIMER4Init
0061            738   ;        -----------------------------------------
0061            739   _TIMER4Init:
0061            740   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:106: SFRPAGE=0x10;
0061 75A710     741            mov     _SFRPAGE,#0x10
0064            742   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:107: TMR4CN0=0x00;   // Stop Timer4; Clear TF4; WARNING: lives in SFR page 0x10
0064 759800     743            mov     _TMR4CN0,#0x00
0067            744   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:108: CKCON1|=0b_0000_0001; // Timer 4 uses the system clock
0067 43A601     745            orl     _CKCON1,#0x01
006A            746   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:109: TMR4RL=(0x10000L-(SYSCLK/(2*TIMER_4_FREQ))); // Initialize reload value
006A 75A260     747            mov     _TMR4RL,#0x60
006D 75A373     748            mov     (_TMR4RL >> 8),#0x73
0070            749   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:110: TMR4=0xffff;   // Set to reload immediately
0070 75A4FF     750            mov     _TMR4,#0xFF
0073 75A5FF     751            mov     (_TMR4 >> 8),#0xFF
0076            752   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:111: EIE2|=0b_0000_0100;     // Enable Timer4 interrupts
0076 43F304     753            orl     _EIE2,#0x04
0079            754   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:112: TR4=1;
0079 D29A       755            setb    _TR4
007B 22         756            ret
007C            757   ;------------------------------------------------------------
007C            758   ;Allocation info for local variables in function 'Timer3_ISR'
007C            759   ;------------------------------------------------------------
007C            760   ;sloc0                     Allocated with name '_Timer3_ISR_sloc0_1_0'
007C            761   ;------------------------------------------------------------
007C            762   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:115: void Timer3_ISR (void) interrupt INTERRUPT_TIMER3
007C            763   ;        -----------------------------------------
007C            764   ;         function Timer3_ISR
007C            765   ;        -----------------------------------------
007C            766   _Timer3_ISR:
007C C040       767            push    bits
007E C0E0       768            push    acc
0080 C0F0       769            push    b
0082 C082       770            push    dpl
0084 C083       771            push    dph
0086 C002       772            push    (0+2)
0088 C003       773            push    (0+3)
008A C004       774            push    (0+4)
008C C005       775            push    (0+5)
008E C006       776            push    (0+6)
0090 C007       777            push    (0+7)
0092 C000       778            push    (0+0)
0094 C001       779            push    (0+1)
0096 C0D0       780            push    psw
0098 75D000     781            mov     psw,#0x00
009B            782   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:117: SFRPAGE=0x0;
009B 75A700     783            mov     _SFRPAGE,#0x00
009E            784   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:118: TMR3CN0&=0b_0011_1111; // Clear Timer3 interrupt flags
009E 53913F     785            anl     _TMR3CN0,#0x3F
00A1            786   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:120: P1_2 = !P1_2;
00A1 B292       787            cpl     _P1_2
00A3            788   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:124: if (count > 100)
00A3 C3         789            clr     c
00A4 7464       790            mov     a,#0x64
00A6 9538       791            subb    a,_count
00A8 E4         792            clr     a
00A9 6480       793            xrl     a,#0x80
00AB 8539F0     794            mov     b,(_count + 1)
00AE 63F080     795            xrl     b,#0x80
00B1 95F0       796            subb    a,b
00B3 5000       797            jnc     L005004?
00B5            798   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:126: LEFT_MOTOR_LHS = 1;
00B5 D2A4       799            setb    _P2_4
00B7            800   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:128: count = 0;
00B7 E4         801            clr     a
00B8 F538       802            mov     _count,a
00BA F539       803            mov     (_count + 1),a
00BC 8000       804            sjmp    L005005?
00BE            805   L005004?:
00BE            806   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:130: else if (count > array[0]*100)
00BE C018       807            push    _array
00C0 C019       808            push    (_array + 1)
00C2 C01A       809            push    (_array + 2)
00C4 C01B       810            push    (_array + 3)
00C6 900000     811            mov     dptr,#0x0000
00C9 75F0C8     812            mov     b,#0xC8
00CC 7442       813            mov     a,#0x42
00CE 120000     814            lcall   ___fsmul
00D1 858250     815            mov     _Timer3_ISR_sloc0_1_0,dpl
00D4 858351     816            mov     (_Timer3_ISR_sloc0_1_0 + 1),dph
00D7 85F052     817            mov     (_Timer3_ISR_sloc0_1_0 + 2),b
00DA F553       818            mov     (_Timer3_ISR_sloc0_1_0 + 3),a
00DC E581       819            mov     a,sp
00DE 24FC       820            add     a,#0xfc
00E0 F581       821            mov     sp,a
00E2 853882     822            mov     dpl,_count
00E5 853983     823            mov     dph,(_count + 1)
00E8 120000     824            lcall   ___sint2fs
00EB AE82       825            mov     r6,dpl
00ED AF83       826            mov     r7,dph
00EF AAF0       827            mov     r2,b
00F1 FB         828            mov     r3,a
00F2 C050       829            push    _Timer3_ISR_sloc0_1_0
00F4 C051       830            push    (_Timer3_ISR_sloc0_1_0 + 1)
00F6 C052       831            push    (_Timer3_ISR_sloc0_1_0 + 2)
00F8 C053       832            push    (_Timer3_ISR_sloc0_1_0 + 3)
00FA 8E82       833            mov     dpl,r6
00FC 8F83       834            mov     dph,r7
00FE 8AF0       835            mov     b,r2
0100 EB         836            mov     a,r3
0101 120000     837            lcall   ___fsgt
0104 AA82       838            mov     r2,dpl
0106 E581       839            mov     a,sp
0108 24FC       840            add     a,#0xfc
010A F581       841            mov     sp,a
010C EA         842            mov     a,r2
010D 6000       843            jz      L005005?
010F            844   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:133: LEFT_MOTOR_LHS = 0;
010F C2A4       845            clr     _P2_4
0111            846   L005005?:
0111            847   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:135: count++;
0111 0538       848            inc     _count
0113 E4         849            clr     a
0114 B53800     850            cjne    a,_count,L005012?
0117 0539       851            inc     (_count + 1)
0119            852   L005012?:
0119 D0D0       853            pop     psw
011B D001       854            pop     (0+1)
011D D000       855            pop     (0+0)
011F D007       856            pop     (0+7)
0121 D006       857            pop     (0+6)
0123 D005       858            pop     (0+5)
0125 D004       859            pop     (0+4)
0127 D003       860            pop     (0+3)
0129 D002       861            pop     (0+2)
012B D083       862            pop     dph
012D D082       863            pop     dpl
012F D0F0       864            pop     b
0131 D0E0       865            pop     acc
0133 D040       866            pop     bits
0135 32         867            reti
0136            868   ;------------------------------------------------------------
0136            869   ;Allocation info for local variables in function 'Timer4_ISR'
0136            870   ;------------------------------------------------------------
0136            871   ;sloc0                     Allocated with name '_Timer4_ISR_sloc0_1_0'
0136            872   ;------------------------------------------------------------
0136            873   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:138: void Timer4_ISR (void) interrupt INTERRUPT_TIMER4
0136            874   ;        -----------------------------------------
0136            875   ;         function Timer4_ISR
0136            876   ;        -----------------------------------------
0136            877   _Timer4_ISR:
0136 C040       878            push    bits
0138 C0E0       879            push    acc
013A C0F0       880            push    b
013C C082       881            push    dpl
013E C083       882            push    dph
0140 C002       883            push    (0+2)
0142 C003       884            push    (0+3)
0144 C004       885            push    (0+4)
0146 C005       886            push    (0+5)
0148 C006       887            push    (0+6)
014A C007       888            push    (0+7)
014C C000       889            push    (0+0)
014E C001       890            push    (0+1)
0150 C0D0       891            push    psw
0152 75D000     892            mov     psw,#0x00
0155            893   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:140: SFRPAGE=0x10;
0155 75A710     894            mov     _SFRPAGE,#0x10
0158            895   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:141: TF4H = 0; // Clear Timer4 interrupt flag
0158 C29F       896            clr     _TF4H
015A            897   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:142: P1_3 = !P1_3;
015A B293       898            cpl     _P1_3
015C            899   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:144: if (count > 100)
015C C3         900            clr     c
015D 7464       901            mov     a,#0x64
015F 9538       902            subb    a,_count
0161 E4         903            clr     a
0162 6480       904            xrl     a,#0x80
0164 8539F0     905            mov     b,(_count + 1)
0167 63F080     906            xrl     b,#0x80
016A 95F0       907            subb    a,b
016C 5000       908            jnc     L006004?
016E            909   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:146: RIGHT_MOTOR_LHS = 1;
016E D2A2       910            setb    _P2_2
0170            911   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:148: count = 0;
0170 E4         912            clr     a
0171 F538       913            mov     _count,a
0173 F539       914            mov     (_count + 1),a
0175 8000       915            sjmp    L006005?
0177            916   L006004?:
0177            917   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:150: else if (count > array[1]*100)
0177 C01C       918            push    (_array + 0x0004)
0179 C01D       919            push    ((_array + 0x0004) + 1)
017B C01E       920            push    ((_array + 0x0004) + 2)
017D C01F       921            push    ((_array + 0x0004) + 3)
017F 900000     922            mov     dptr,#0x0000
0182 75F0C8     923            mov     b,#0xC8
0185 7442       924            mov     a,#0x42
0187 120000     925            lcall   ___fsmul
018A 8582A0     926            mov     _Timer4_ISR_sloc0_1_0,dpl
018D 8583A1     927            mov     (_Timer4_ISR_sloc0_1_0 + 1),dph
0190 85F0A2     928            mov     (_Timer4_ISR_sloc0_1_0 + 2),b
0193 F5A3       929            mov     (_Timer4_ISR_sloc0_1_0 + 3),a
0195 E581       930            mov     a,sp
0197 24FC       931            add     a,#0xfc
0199 F581       932            mov     sp,a
019B 853882     933            mov     dpl,_count
019E 853983     934            mov     dph,(_count + 1)
01A1 120000     935            lcall   ___sint2fs
01A4 AE82       936            mov     r6,dpl
01A6 AF83       937            mov     r7,dph
01A8 AAF0       938            mov     r2,b
01AA FB         939            mov     r3,a
01AB C0A0       940            push    _Timer4_ISR_sloc0_1_0
01AD C0A1       941            push    (_Timer4_ISR_sloc0_1_0 + 1)
01AF C0A2       942            push    (_Timer4_ISR_sloc0_1_0 + 2)
01B1 C0A3       943            push    (_Timer4_ISR_sloc0_1_0 + 3)
01B3 8E82       944            mov     dpl,r6
01B5 8F83       945            mov     dph,r7
01B7 8AF0       946            mov     b,r2
01B9 EB         947            mov     a,r3
01BA 120000     948            lcall   ___fsgt
01BD AA82       949            mov     r2,dpl
01BF E581       950            mov     a,sp
01C1 24FC       951            add     a,#0xfc
01C3 F581       952            mov     sp,a
01C5 EA         953            mov     a,r2
01C6 6000       954            jz      L006005?
01C8            955   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:153: RIGHT_MOTOR_LHS = 0;
01C8 C2A2       956            clr     _P2_2
01CA            957   L006005?:
01CA            958   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:155: count++;
01CA 0538       959            inc     _count
01CC E4         960            clr     a
01CD B538C0     961            cjne    a,_count,L006012?
01D0 0539       962            inc     (_count + 1)
01D2            963   L006012?:
01D2 D0D0       964            pop     psw
01D4 D001       965            pop     (0+1)
01D6 D000       966            pop     (0+0)
01D8 D007       967            pop     (0+7)
01DA D006       968            pop     (0+6)
01DC D005       969            pop     (0+5)
01DE D004       970            pop     (0+4)
01E0 D003       971            pop     (0+3)
01E2 D002       972            pop     (0+2)
01E4 D083       973            pop     dph
01E6 D082       974            pop     dpl
01E8 D0F0       975            pop     b
01EA D0E0       976            pop     acc
01EC D040       977            pop     bits
01EE 32         978            reti
01EF            979   ;------------------------------------------------------------
01EF            980   ;Allocation info for local variables in function 'idle'
01EF            981   ;------------------------------------------------------------
01EF            982   ;------------------------------------------------------------
01EF            983   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:158: void idle(void)
01EF            984   ;        -----------------------------------------
01EF            985   ;         function idle
01EF            986   ;        -----------------------------------------
01EF            987   _idle:
01EF            988   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:160: LEFT_MOTOR_LHS = 0;
01EF C2A4       989            clr     _P2_4
01F1            990   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:161: LEFT_MOTOR_RHS = 0;
01F1 C2A3       991            clr     _P2_3
01F3            992   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:162: RIGHT_MOTOR_LHS = 0;
01F3 C2A2       993            clr     _P2_2
01F5            994   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:163: RIGHT_MOTOR_RHS = 0;
01F5 C2A1       995            clr     _P2_1
01F7 22         996            ret
01F8            997   ;------------------------------------------------------------
01F8            998   ;Allocation info for local variables in function 'straight'
01F8            999   ;------------------------------------------------------------
01F8           1000   ;------------------------------------------------------------
01F8           1001   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:166: void straight(void)
01F8           1002   ;        -----------------------------------------
01F8           1003   ;         function straight
01F8           1004   ;        -----------------------------------------
01F8           1005   _straight:
01F8           1006   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:168: LEFT_MOTOR_LHS = 1;
01F8 D2A4      1007            setb    _P2_4
01FA           1008   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:169: LEFT_MOTOR_RHS = 0;
01FA C2A3      1009            clr     _P2_3
01FC           1010   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:170: RIGHT_MOTOR_LHS = 1;
01FC D2A2      1011            setb    _P2_2
01FE           1012   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:171: RIGHT_MOTOR_RHS = 0;
01FE C2A1      1013            clr     _P2_1
0200 22        1014            ret
0201           1015   ;------------------------------------------------------------
0201           1016   ;Allocation info for local variables in function 'backward'
0201           1017   ;------------------------------------------------------------
0201           1018   ;------------------------------------------------------------
0201           1019   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:174: void backward(void)
0201           1020   ;        -----------------------------------------
0201           1021   ;         function backward
0201           1022   ;        -----------------------------------------
0201           1023   _backward:
0201           1024   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:176: LEFT_MOTOR_LHS = 0;
0201 C2A4      1025            clr     _P2_4
0203           1026   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:177: LEFT_MOTOR_RHS = 1;
0203 D2A3      1027            setb    _P2_3
0205           1028   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:178: RIGHT_MOTOR_LHS = 0;
0205 C2A2      1029            clr     _P2_2
0207           1030   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:179: RIGHT_MOTOR_RHS = 1;
0207 D2A1      1031            setb    _P2_1
0209 22        1032            ret
020A           1033   ;------------------------------------------------------------
020A           1034   ;Allocation info for local variables in function 'left'
020A           1035   ;------------------------------------------------------------
020A           1036   ;PWM_percent_y             Allocated to registers r2 r3 r4 r5 
020A           1037   ;------------------------------------------------------------
020A           1038   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:182: void left(float PWM_percent_y)
020A           1039   ;        -----------------------------------------
020A           1040   ;         function left
020A           1041   ;        -----------------------------------------
020A           1042   _left:
020A AA82      1043            mov     r2,dpl
020C AB83      1044            mov     r3,dph
020E ACF0      1045            mov     r4,b
0210 FD        1046            mov     r5,a
0211           1047   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:184: if (PWM_percent_y > 0)
0211 E4        1048            clr     a
0212 C0E0      1049            push    acc
0214 C0E0      1050            push    acc
0216 C0E0      1051            push    acc
0218 C0E0      1052            push    acc
021A 8A82      1053            mov     dpl,r2
021C 8B83      1054            mov     dph,r3
021E 8CF0      1055            mov     b,r4
0220 ED        1056            mov     a,r5
0221 120000    1057            lcall   ___fsgt
0224 AA82      1058            mov     r2,dpl
0226 E581      1059            mov     a,sp
0228 24FC      1060            add     a,#0xfc
022A F581      1061            mov     sp,a
022C EA        1062            mov     a,r2
022D 6000      1063            jz      L010002?
022F           1064   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:186: RIGHT_MOTOR_LHS = 1;
022F D2A2      1065            setb    _P2_2
0231           1066   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:187: RIGHT_MOTOR_RHS = 0;
0231 C2A1      1067            clr     _P2_1
0233           1068   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:188: LEFT_MOTOR_LHS = 1;
0233 D2A4      1069            setb    _P2_4
0235           1070   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:189: LEFT_MOTOR_RHS = 0;
0235 C2A3      1071            clr     _P2_3
0237 22        1072            ret
0238           1073   L010002?:
0238           1074   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:193: RIGHT_MOTOR_LHS = 0;
0238 C2A2      1075            clr     _P2_2
023A           1076   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:194: RIGHT_MOTOR_RHS = 1;
023A D2A1      1077            setb    _P2_1
023C           1078   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:195: LEFT_MOTOR_LHS = 0;
023C C2A4      1079            clr     _P2_4
023E           1080   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:196: LEFT_MOTOR_RHS = 1;
023E D2A3      1081            setb    _P2_3
0240 22        1082            ret
0241           1083   ;------------------------------------------------------------
0241           1084   ;Allocation info for local variables in function 'right'
0241           1085   ;------------------------------------------------------------
0241           1086   ;PWM_percent_y             Allocated to registers r2 r3 r4 r5 
0241           1087   ;------------------------------------------------------------
0241           1088   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:201: void right(float PWM_percent_y)
0241           1089   ;        -----------------------------------------
0241           1090   ;         function right
0241           1091   ;        -----------------------------------------
0241           1092   _right:
0241 AA82      1093            mov     r2,dpl
0243 AB83      1094            mov     r3,dph
0245 ACF0      1095            mov     r4,b
0247 FD        1096            mov     r5,a
0248           1097   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:204: if (PWM_percent_y > 0)
0248 E4        1098            clr     a
0249 C0E0      1099            push    acc
024B C0E0      1100            push    acc
024D C0E0      1101            push    acc
024F C0E0      1102            push    acc
0251 8A82      1103            mov     dpl,r2
0253 8B83      1104            mov     dph,r3
0255 8CF0      1105            mov     b,r4
0257 ED        1106            mov     a,r5
0258 120000    1107            lcall   ___fsgt
025B AA82      1108            mov     r2,dpl
025D E581      1109            mov     a,sp
025F 24FC      1110            add     a,#0xfc
0261 F581      1111            mov     sp,a
0263 EA        1112            mov     a,r2
0264 6000      1113            jz      L011002?
0266           1114   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:206: LEFT_MOTOR_LHS = 1;
0266 D2A4      1115            setb    _P2_4
0268           1116   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:207: LEFT_MOTOR_RHS = 0;
0268 C2A3      1117            clr     _P2_3
026A           1118   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:208: RIGHT_MOTOR_LHS = 1;
026A D2A2      1119            setb    _P2_2
026C           1120   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:209: RIGHT_MOTOR_RHS = 0;
026C C2A1      1121            clr     _P2_1
026E 22        1122            ret
026F           1123   L011002?:
026F           1124   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:213: LEFT_MOTOR_LHS = 0;
026F C2A4      1125            clr     _P2_4
0271           1126   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:214: LEFT_MOTOR_RHS = 1;
0271 D2A3      1127            setb    _P2_3
0273           1128   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:215: RIGHT_MOTOR_LHS = 0;
0273 C2A2      1129            clr     _P2_2
0275           1130   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:216: RIGHT_MOTOR_RHS = 1;
0275 D2A1      1131            setb    _P2_1
0277 22        1132            ret
0278           1133   ;------------------------------------------------------------
0278           1134   ;Allocation info for local variables in function 'movement_manager'
0278           1135   ;------------------------------------------------------------
0278           1136   ;PWM_percent_y             Allocated with name '_movement_manager_PARM_2'
0278           1137   ;prev_PWM_percent_x        Allocated with name '_movement_manager_PARM_3'
0278           1138   ;prev_PWM_percent_y        Allocated with name '_movement_manager_PARM_4'
0278           1139   ;state                     Allocated with name '_movement_manager_PARM_5'
0278           1140   ;PWM_percent_x             Allocated to registers r2 r3 r4 r5 
0278           1141   ;------------------------------------------------------------
0278           1142   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:221: enum State movement_manager(float PWM_percent_x, float PWM_percent_y, float prev_PWM_percent_x, float prev_PWM_percent_y, enum State state)
0278           1143   ;        -----------------------------------------
0278           1144   ;         function movement_manager
0278           1145   ;        -----------------------------------------
0278           1146   _movement_manager:
0278 AA82      1147            mov     r2,dpl
027A AB83      1148            mov     r3,dph
027C ACF0      1149            mov     r4,b
027E FD        1150            mov     r5,a
027F           1151   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:224: if (prev_PWM_percent_x != PWM_percent_x || prev_PWM_percent_y != PWM_percent_y)
027F C002      1152            push    ar2
0281 C003      1153            push    ar3
0283 C004      1154            push    ar4
0285 C005      1155            push    ar5
0287 C002      1156            push    ar2
0289 C003      1157            push    ar3
028B C004      1158            push    ar4
028D C005      1159            push    ar5
028F 858882    1160            mov     dpl,_movement_manager_PARM_3
0292 858983    1161            mov     dph,(_movement_manager_PARM_3 + 1)
0295 858AF0    1162            mov     b,(_movement_manager_PARM_3 + 2)
0298 E58B      1163            mov     a,(_movement_manager_PARM_3 + 3)
029A 120000    1164            lcall   ___fseq
029D AE82      1165            mov     r6,dpl
029F E581      1166            mov     a,sp
02A1 24FC      1167            add     a,#0xfc
02A3 F581      1168            mov     sp,a
02A5 D005      1169            pop     ar5
02A7 D004      1170            pop     ar4
02A9 D003      1171            pop     ar3
02AB D002      1172            pop     ar2
02AD EE        1173            mov     a,r6
02AE 6000      1174            jz      L012014?
02B0 C002      1175            push    ar2
02B2 C003      1176            push    ar3
02B4 C004      1177            push    ar4
02B6 C005      1178            push    ar5
02B8 C0D8      1179            push    _movement_manager_PARM_2
02BA C0D9      1180            push    (_movement_manager_PARM_2 + 1)
02BC C0DA      1181            push    (_movement_manager_PARM_2 + 2)
02BE C0DB      1182            push    (_movement_manager_PARM_2 + 3)
02C0 853882    1183            mov     dpl,_movement_manager_PARM_4
02C3 853983    1184            mov     dph,(_movement_manager_PARM_4 + 1)
02C6 853AF0    1185            mov     b,(_movement_manager_PARM_4 + 2)
02C9 E53B      1186            mov     a,(_movement_manager_PARM_4 + 3)
02CB 120000    1187            lcall   ___fseq
02CE AE82      1188            mov     r6,dpl
02D0 E581      1189            mov     a,sp
02D2 24FC      1190            add     a,#0xfc
02D4 F581      1191            mov     sp,a
02D6 D005      1192            pop     ar5
02D8 D004      1193            pop     ar4
02DA D003      1194            pop     ar3
02DC D002      1195            pop     ar2
02DE EE        1196            mov     a,r6
02DF 6000      1197            jz      L012026?
02E1 020000    1198            ljmp    L012015?
02E4           1199   L012026?:
02E4           1200   L012014?:
02E4           1201   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:226: if (PWM_percent_y == 0 && PWM_percent_x == 0)
02E4 E5D8      1202            mov     a,_movement_manager_PARM_2
02E6 45D9      1203            orl     a,(_movement_manager_PARM_2 + 1)
02E8 45DA      1204            orl     a,(_movement_manager_PARM_2 + 2)
02EA 85DBF0    1205            mov     b,(_movement_manager_PARM_2 + 3)
02ED C2F7      1206            clr     b.7 ; Clear the sign bit
02EF 45F0      1207            orl     a,b
02F1 7000      1208            jnz     L012011?
02F3 EA        1209            mov     a,r2
02F4 4B        1210            orl     a,r3
02F5 4C        1211            orl     a,r4
02F6 8DF0      1212            mov     b,r5
02F8 C2F7      1213            clr     b.7 ; Clear the sign bit
02FA 45F0      1214            orl     a,b
02FC           1215   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:228: state = idle_enum;
02FC 7000      1216            jnz     L012011?
02FE F5E8      1217            mov     _movement_manager_PARM_5,a
0300           1218   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:229: idle();
0300 120000    1219            lcall   _idle
0303 020000    1220            ljmp    L012015?
0306           1221   L012011?:
0306           1222   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:231: else if (PWM_percent_x < 0)
0306 C002      1223            push    ar2
0308 C003      1224            push    ar3
030A C004      1225            push    ar4
030C C005      1226            push    ar5
030E E4        1227            clr     a
030F C0E0      1228            push    acc
0311 C0E0      1229            push    acc
0313 C0E0      1230            push    acc
0315 C0E0      1231            push    acc
0317 8A82      1232            mov     dpl,r2
0319 8B83      1233            mov     dph,r3
031B 8CF0      1234            mov     b,r4
031D ED        1235            mov     a,r5
031E 120000    1236            lcall   ___fslt
0321 AE82      1237            mov     r6,dpl
0323 E581      1238            mov     a,sp
0325 24FC      1239            add     a,#0xfc
0327 F581      1240            mov     sp,a
0329 D005      1241            pop     ar5
032B D004      1242            pop     ar4
032D D003      1243            pop     ar3
032F D002      1244            pop     ar2
0331 EE        1245            mov     a,r6
0332 6000      1246            jz      L012008?
0334           1247   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:233: state = left_enum;
0334 75E801    1248            mov     _movement_manager_PARM_5,#0x01
0337           1249   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:234: left(PWM_percent_y);
0337 85D882    1250            mov     dpl,_movement_manager_PARM_2
033A 85D983    1251            mov     dph,(_movement_manager_PARM_2 + 1)
033D 85DAF0    1252            mov     b,(_movement_manager_PARM_2 + 2)
0340 E5DB      1253            mov     a,(_movement_manager_PARM_2 + 3)
0342 120000    1254            lcall   _left
0345 8000      1255            sjmp    L012015?
0347           1256   L012008?:
0347           1257   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:236: else if (PWM_percent_x > 0)
0347 E4        1258            clr     a
0348 C0E0      1259            push    acc
034A C0E0      1260            push    acc
034C C0E0      1261            push    acc
034E C0E0      1262            push    acc
0350 8A82      1263            mov     dpl,r2
0352 8B83      1264            mov     dph,r3
0354 8CF0      1265            mov     b,r4
0356 ED        1266            mov     a,r5
0357 120000    1267            lcall   ___fsgt
035A AA82      1268            mov     r2,dpl
035C E581      1269            mov     a,sp
035E 24FC      1270            add     a,#0xfc
0360 F581      1271            mov     sp,a
0362 EA        1272            mov     a,r2
0363 6000      1273            jz      L012005?
0365           1274   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:238: state = right_enum;
0365 75E802    1275            mov     _movement_manager_PARM_5,#0x02
0368           1276   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:239: right(PWM_percent_y);
0368 85D882    1277            mov     dpl,_movement_manager_PARM_2
036B 85D983    1278            mov     dph,(_movement_manager_PARM_2 + 1)
036E 85DAF0    1279            mov     b,(_movement_manager_PARM_2 + 2)
0371 E5DB      1280            mov     a,(_movement_manager_PARM_2 + 3)
0373 120000    1281            lcall   _right
0376 8000      1282            sjmp    L012015?
0378           1283   L012005?:
0378           1284   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:241: else if (PWM_percent_y > 0)
0378 E4        1285            clr     a
0379 C0E0      1286            push    acc
037B C0E0      1287            push    acc
037D C0E0      1288            push    acc
037F C0E0      1289            push    acc
0381 85D882    1290            mov     dpl,_movement_manager_PARM_2
0384 85D983    1291            mov     dph,(_movement_manager_PARM_2 + 1)
0387 85DAF0    1292            mov     b,(_movement_manager_PARM_2 + 2)
038A E5DB      1293            mov     a,(_movement_manager_PARM_2 + 3)
038C 120000    1294            lcall   ___fsgt
038F AA82      1295            mov     r2,dpl
0391 E581      1296            mov     a,sp
0393 24FC      1297            add     a,#0xfc
0395 F581      1298            mov     sp,a
0397 EA        1299            mov     a,r2
0398 6000      1300            jz      L012002?
039A           1301   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:243: state = straight_enum;
039A 75E803    1302            mov     _movement_manager_PARM_5,#0x03
039D           1303   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:244: straight();
039D 120000    1304            lcall   _straight
03A0 8000      1305            sjmp    L012015?
03A2           1306   L012002?:
03A2           1307   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:248: state = backward_enum;
03A2 75E804    1308            mov     _movement_manager_PARM_5,#0x04
03A5           1309   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:249: backward();
03A5 120000    1310            lcall   _backward
03A8           1311   L012015?:
03A8           1312   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:253: return state;
03A8 85E882    1313            mov     dpl,_movement_manager_PARM_5
03AB 22        1314            ret
03AC           1315   ;------------------------------------------------------------
03AC           1316   ;Allocation info for local variables in function 'PWM_manager'
03AC           1317   ;------------------------------------------------------------
03AC           1318   ;y_value                   Allocated with name '_PWM_manager_PARM_2'
03AC           1319   ;array                     Allocated with name '_PWM_manager_PARM_3'
03AC           1320   ;x_value                   Allocated to registers r2 r3 r4 r5 
03AC           1321   ;sloc0                     Allocated with name '_PWM_manager_sloc0_1_0'
03AC           1322   ;sloc1                     Allocated with name '_PWM_manager_sloc1_1_0'
03AC           1323   ;------------------------------------------------------------
03AC           1324   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:257: void PWM_manager(float x_value, float y_value, float array[])
03AC           1325   ;        -----------------------------------------
03AC           1326   ;         function PWM_manager
03AC           1327   ;        -----------------------------------------
03AC           1328   _PWM_manager:
03AC AA82      1329            mov     r2,dpl
03AE AB83      1330            mov     r3,dph
03B0 ACF0      1331            mov     r4,b
03B2 FD        1332            mov     r5,a
03B3           1333   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:262: if (x_value >= 0) // RIGHT TURN
03B3 C002      1334            push    ar2
03B5 C003      1335            push    ar3
03B7 C004      1336            push    ar4
03B9 C005      1337            push    ar5
03BB E4        1338            clr     a
03BC C0E0      1339            push    acc
03BE C0E0      1340            push    acc
03C0 C0E0      1341            push    acc
03C2 C0E0      1342            push    acc
03C4 8A82      1343            mov     dpl,r2
03C6 8B83      1344            mov     dph,r3
03C8 8CF0      1345            mov     b,r4
03CA ED        1346            mov     a,r5
03CB 120000    1347            lcall   ___fslt
03CE AE82      1348            mov     r6,dpl
03D0 E581      1349            mov     a,sp
03D2 24FC      1350            add     a,#0xfc
03D4 F581      1351            mov     sp,a
03D6 D005      1352            pop     ar5
03D8 D004      1353            pop     ar4
03DA D003      1354            pop     ar3
03DC D002      1355            pop     ar2
03DE EE        1356            mov     a,r6
03DF 6000      1357            jz      L013010?
03E1 020000    1358            ljmp    L013004?
03E4           1359   L013010?:
03E4           1360   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:264: array[0] = y_value;
03E4 AF48      1361            mov     r7,_PWM_manager_PARM_3
03E6 A849      1362            mov     r0,(_PWM_manager_PARM_3 + 1)
03E8 A94A      1363            mov     r1,(_PWM_manager_PARM_3 + 2)
03EA 8F82      1364            mov     dpl,r7
03EC 8883      1365            mov     dph,r0
03EE 89F0      1366            mov     b,r1
03F0 E598      1367            mov     a,_PWM_manager_PARM_2
03F2 120000    1368            lcall   __gptrput
03F5 A3        1369            inc     dptr
03F6 E599      1370            mov     a,(_PWM_manager_PARM_2 + 1)
03F8 120000    1371            lcall   __gptrput
03FB A3        1372            inc     dptr
03FC E59A      1373            mov     a,(_PWM_manager_PARM_2 + 2)
03FE 120000    1374            lcall   __gptrput
0401 A3        1375            inc     dptr
0402 E59B      1376            mov     a,(_PWM_manager_PARM_2 + 3)
0404 120000    1377            lcall   __gptrput
0407           1378   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:265: array[1] = (1 - x_value) * y_value;
0407 7404      1379            mov     a,#0x04
0409 2F        1380            add     a,r7
040A F5F0      1381            mov     _PWM_manager_sloc0_1_0,a
040C E4        1382            clr     a
040D 38        1383            addc    a,r0
040E F5F1      1384            mov     (_PWM_manager_sloc0_1_0 + 1),a
0410 89F2      1385            mov     (_PWM_manager_sloc0_1_0 + 2),r1
0412 C002      1386            push    ar2
0414 C003      1387            push    ar3
0416 C004      1388            push    ar4
0418 C005      1389            push    ar5
041A 900000    1390            mov     dptr,#0x0000
041D 75F080    1391            mov     b,#0x80
0420 743F      1392            mov     a,#0x3F
0422 120000    1393            lcall   ___fssub
0425 858240    1394            mov     _PWM_manager_sloc1_1_0,dpl
0428 858341    1395            mov     (_PWM_manager_sloc1_1_0 + 1),dph
042B 85F042    1396            mov     (_PWM_manager_sloc1_1_0 + 2),b
042E F543      1397            mov     (_PWM_manager_sloc1_1_0 + 3),a
0430 E581      1398            mov     a,sp
0432 24FC      1399            add     a,#0xfc
0434 F581      1400            mov     sp,a
0436 C098      1401            push    _PWM_manager_PARM_2
0438 C099      1402            push    (_PWM_manager_PARM_2 + 1)
043A C09A      1403            push    (_PWM_manager_PARM_2 + 2)
043C C09B      1404            push    (_PWM_manager_PARM_2 + 3)
043E 854082    1405            mov     dpl,_PWM_manager_sloc1_1_0
0441 854183    1406            mov     dph,(_PWM_manager_sloc1_1_0 + 1)
0444 8542F0    1407            mov     b,(_PWM_manager_sloc1_1_0 + 2)
0447 E543      1408            mov     a,(_PWM_manager_sloc1_1_0 + 3)
0449 120000    1409            lcall   ___fsmul
044C 858240    1410            mov     _PWM_manager_sloc1_1_0,dpl
044F 858341    1411            mov     (_PWM_manager_sloc1_1_0 + 1),dph
0452 85F042    1412            mov     (_PWM_manager_sloc1_1_0 + 2),b
0455 F543      1413            mov     (_PWM_manager_sloc1_1_0 + 3),a
0457 E581      1414            mov     a,sp
0459 24FC      1415            add     a,#0xfc
045B F581      1416            mov     sp,a
045D 85F082    1417            mov     dpl,_PWM_manager_sloc0_1_0
0460 85F183    1418            mov     dph,(_PWM_manager_sloc0_1_0 + 1)
0463 85F2F0    1419            mov     b,(_PWM_manager_sloc0_1_0 + 2)
0466 E540      1420            mov     a,_PWM_manager_sloc1_1_0
0468 120000    1421            lcall   __gptrput
046B A3        1422            inc     dptr
046C E541      1423            mov     a,(_PWM_manager_sloc1_1_0 + 1)
046E 120000    1424            lcall   __gptrput
0471 A3        1425            inc     dptr
0472 E542      1426            mov     a,(_PWM_manager_sloc1_1_0 + 2)
0474 120000    1427            lcall   __gptrput
0477 A3        1428            inc     dptr
0478 E543      1429            mov     a,(_PWM_manager_sloc1_1_0 + 3)
047A 020000    1430            ljmp    __gptrput
047D           1431   L013004?:
047D           1432   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:267: else if (x_value < 0) // LEFT TURN
047D EE        1433            mov     a,r6
047E 7000      1434            jnz     L013011?
0480 22        1435            ret
0481           1436   L013011?:
0481           1437   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:269: array[0] = (1 + x_value) * y_value;
0481 AE48      1438            mov     r6,_PWM_manager_PARM_3
0483 AF49      1439            mov     r7,(_PWM_manager_PARM_3 + 1)
0485 A84A      1440            mov     r0,(_PWM_manager_PARM_3 + 2)
0487 C006      1441            push    ar6
0489 C007      1442            push    ar7
048B C000      1443            push    ar0
048D E4        1444            clr     a
048E C0E0      1445            push    acc
0490 C0E0      1446            push    acc
0492 7480      1447            mov     a,#0x80
0494 C0E0      1448            push    acc
0496 743F      1449            mov     a,#0x3F
0498 C0E0      1450            push    acc
049A 8A82      1451            mov     dpl,r2
049C 8B83      1452            mov     dph,r3
049E 8CF0      1453            mov     b,r4
04A0 ED        1454            mov     a,r5
04A1 120000    1455            lcall   ___fsadd
04A4 AA82      1456            mov     r2,dpl
04A6 AB83      1457            mov     r3,dph
04A8 ACF0      1458            mov     r4,b
04AA FD        1459            mov     r5,a
04AB E581      1460            mov     a,sp
04AD 24FC      1461            add     a,#0xfc
04AF F581      1462            mov     sp,a
04B1 C098      1463            push    _PWM_manager_PARM_2
04B3 C099      1464            push    (_PWM_manager_PARM_2 + 1)
04B5 C09A      1465            push    (_PWM_manager_PARM_2 + 2)
04B7 C09B      1466            push    (_PWM_manager_PARM_2 + 3)
04B9 8A82      1467            mov     dpl,r2
04BB 8B83      1468            mov     dph,r3
04BD 8CF0      1469            mov     b,r4
04BF ED        1470            mov     a,r5
04C0 120000    1471            lcall   ___fsmul
04C3 AA82      1472            mov     r2,dpl
04C5 AB83      1473            mov     r3,dph
04C7 ACF0      1474            mov     r4,b
04C9 FD        1475            mov     r5,a
04CA E581      1476            mov     a,sp
04CC 24FC      1477            add     a,#0xfc
04CE F581      1478            mov     sp,a
04D0 D000      1479            pop     ar0
04D2 D007      1480            pop     ar7
04D4 D006      1481            pop     ar6
04D6 8E82      1482            mov     dpl,r6
04D8 8F83      1483            mov     dph,r7
04DA 88F0      1484            mov     b,r0
04DC EA        1485            mov     a,r2
04DD 120000    1486            lcall   __gptrput
04E0 A3        1487            inc     dptr
04E1 EB        1488            mov     a,r3
04E2 120000    1489            lcall   __gptrput
04E5 A3        1490            inc     dptr
04E6 EC        1491            mov     a,r4
04E7 120000    1492            lcall   __gptrput
04EA A3        1493            inc     dptr
04EB ED        1494            mov     a,r5
04EC 120000    1495            lcall   __gptrput
04EF           1496   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:270: array[1] = y_value;
04EF 7404      1497            mov     a,#0x04
04F1 2E        1498            add     a,r6
04F2 FE        1499            mov     r6,a
04F3 E4        1500            clr     a
04F4 3F        1501            addc    a,r7
04F5 FF        1502            mov     r7,a
04F6 8E82      1503            mov     dpl,r6
04F8 8F83      1504            mov     dph,r7
04FA 88F0      1505            mov     b,r0
04FC E598      1506            mov     a,_PWM_manager_PARM_2
04FE 120000    1507            lcall   __gptrput
0501 A3        1508            inc     dptr
0502 E599      1509            mov     a,(_PWM_manager_PARM_2 + 1)
0504 120000    1510            lcall   __gptrput
0507 A3        1511            inc     dptr
0508 E59A      1512            mov     a,(_PWM_manager_PARM_2 + 2)
050A 120000    1513            lcall   __gptrput
050D A3        1514            inc     dptr
050E E59B      1515            mov     a,(_PWM_manager_PARM_2 + 3)
0510 020000    1516            ljmp    __gptrput
0513           1517   ;------------------------------------------------------------
0513           1518   ;Allocation info for local variables in function 'main'
0513           1519   ;------------------------------------------------------------
0513           1520   ;------------------------------------------------------------
0513           1521   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:275: int main(void)
0513           1522   ;        -----------------------------------------
0513           1523   ;         function main
0513           1524   ;        -----------------------------------------
0513           1525   _main:
0513           1526   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:277: TIMER3Init();
0513 120000    1527            lcall   _TIMER3Init
0516           1528   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:278: TIMER4Init();
0516 120000    1529            lcall   _TIMER4Init
0519           1530   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:279: left(0.5);
0519 900000    1531            mov     dptr,#(0x00&0x00ff)
051C E4        1532            clr     a
051D F5F0      1533            mov     b,a
051F 743F      1534            mov     a,#0x3F
0521 120000    1535            lcall   _left
0524           1536   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:280: state = left_enum;
0524 75F801    1537            mov     _state,#0x01
0527 E4        1538            clr     a
0528 F5F9      1539            mov     (_state + 1),a
052A           1540   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:281: while(1)
052A           1541   L014002?:
052A           1542   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:283: state = movement_manager(PWM_percent_x, PWM_percent_y, prev_PWM_percent_x, prev_PWM_percent_y, state);
052A 85F8E8    1543            mov     _movement_manager_PARM_5,_state
052D 85B8D8    1544            mov     _movement_manager_PARM_2,_PWM_percent_y
0530 85B9D9    1545            mov     (_movement_manager_PARM_2 + 1),(_PWM_percent_y + 1)
0533 85BADA    1546            mov     (_movement_manager_PARM_2 + 2),(_PWM_percent_y + 2)
0536 85BBDB    1547            mov     (_movement_manager_PARM_2 + 3),(_PWM_percent_y + 3)
0539 85B888    1548            mov     _movement_manager_PARM_3,_prev_PWM_percent_x
053C 85B989    1549            mov     (_movement_manager_PARM_3 + 1),(_prev_PWM_percent_x + 1)
053F 85BA8A    1550            mov     (_movement_manager_PARM_3 + 2),(_prev_PWM_percent_x + 2)
0542 85BB8B    1551            mov     (_movement_manager_PARM_3 + 3),(_prev_PWM_percent_x + 3)
0545 856838    1552            mov     _movement_manager_PARM_4,_prev_PWM_percent_y
0548 856939    1553            mov     (_movement_manager_PARM_4 + 1),(_prev_PWM_percent_y + 1)
054B 856A3A    1554            mov     (_movement_manager_PARM_4 + 2),(_prev_PWM_percent_y + 2)
054E 856B3B    1555            mov     (_movement_manager_PARM_4 + 3),(_prev_PWM_percent_y + 3)
0551 857882    1556            mov     dpl,_PWM_percent_x
0554 857983    1557            mov     dph,(_PWM_percent_x + 1)
0557 857AF0    1558            mov     b,(_PWM_percent_x + 2)
055A E57B      1559            mov     a,(_PWM_percent_x + 3)
055C 120000    1560            lcall   _movement_manager
055F AA82      1561            mov     r2,dpl
0561 8AF8      1562            mov     _state,r2
0563 75F900    1563            mov     (_state + 1),#0x00
0566           1564   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:284: PWM_manager(PWM_percent_x, PWM_percent_x, array);
0566 754818    1565            mov     _PWM_manager_PARM_3,#_array
0569 754900    1566            mov     (_PWM_manager_PARM_3 + 1),#0x00
056C 754A40    1567            mov     (_PWM_manager_PARM_3 + 2),#0x40
056F 857898    1568            mov     _PWM_manager_PARM_2,_PWM_percent_x
0572 857999    1569            mov     (_PWM_manager_PARM_2 + 1),(_PWM_percent_x + 1)
0575 857A9A    1570            mov     (_PWM_manager_PARM_2 + 2),(_PWM_percent_x + 2)
0578 857B9B    1571            mov     (_PWM_manager_PARM_2 + 3),(_PWM_percent_x + 3)
057B 857882    1572            mov     dpl,_PWM_percent_x
057E 857983    1573            mov     dph,(_PWM_percent_x + 1)
0581 857AF0    1574            mov     b,(_PWM_percent_x + 2)
0584 E57B      1575            mov     a,(_PWM_percent_x + 3)
0586 120000    1576            lcall   _PWM_manager
0589           1577   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:287: prev_PWM_percent_x = PWM_percent_x;
0589 8578B8    1578            mov     _prev_PWM_percent_x,_PWM_percent_x
058C 8579B9    1579            mov     (_prev_PWM_percent_x + 1),(_PWM_percent_x + 1)
058F 857ABA    1580            mov     (_prev_PWM_percent_x + 2),(_PWM_percent_x + 2)
0592 857BBB    1581            mov     (_prev_PWM_percent_x + 3),(_PWM_percent_x + 3)
0595           1582   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:288: prev_PWM_percent_y = PWM_percent_y;
0595 85B868    1583            mov     _prev_PWM_percent_y,_PWM_percent_y
0598 85B969    1584            mov     (_prev_PWM_percent_y + 1),(_PWM_percent_y + 1)
059B 85BA6A    1585            mov     (_prev_PWM_percent_y + 2),(_PWM_percent_y + 2)
059E 85BB6B    1586            mov     (_prev_PWM_percent_y + 3),(_PWM_percent_y + 3)
05A1 8000      1587            sjmp    L014002?
05A3           1588            rseg R_CSEG
05A3           1589   
0000           1590            rseg R_XINIT
0000           1591   
0000           1592            rseg R_CONST
0000           1593   
008E           1594            CSEG
008E           1595   
008E           1596   end
