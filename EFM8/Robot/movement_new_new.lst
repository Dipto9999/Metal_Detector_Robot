0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Sat Mar 30 13:03:18 2024
0000              5   ;--------------------------------------------------------
                  5   $name movement_new_new
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _main
0000             28            public _Timer5_ISR
0000             29            public _movement_manager
0000             30            public _PWM_manager
0000             31            public _TIMER5Init
0000             32            public _backward
0000             33            public _straight
0000             34            public _TIMER0_Init
0000             35            public __c51_external_startup
0000             36            public _movement_manager_PARM_2
0000             37            public _PWM_manager_PARM_2
0000             38            public _prev_PWM_percent_y
0000             39            public _prev_PWM_percent_x
0000             40            public _new_right_wheel
0000             41            public _right_wheel
0000             42            public _left_wheel
0000             43            public _PWM_percent_x
0000             44            public _PWM_percent_y
0000             45            public _state
0000             46            public _count
0000             47            public _inductance
0000             48   ;--------------------------------------------------------
0000             49   ; Special Function Registers
0000             50   ;--------------------------------------------------------
0000             51   _ACC            DATA 0xe0
0000             52   _ADC0ASAH       DATA 0xb6
0000             53   _ADC0ASAL       DATA 0xb5
0000             54   _ADC0ASCF       DATA 0xa1
0000             55   _ADC0ASCT       DATA 0xc7
0000             56   _ADC0CF0        DATA 0xbc
0000             57   _ADC0CF1        DATA 0xb9
0000             58   _ADC0CF2        DATA 0xdf
0000             59   _ADC0CN0        DATA 0xe8
0000             60   _ADC0CN1        DATA 0xb2
0000             61   _ADC0CN2        DATA 0xb3
0000             62   _ADC0GTH        DATA 0xc4
0000             63   _ADC0GTL        DATA 0xc3
0000             64   _ADC0H          DATA 0xbe
0000             65   _ADC0L          DATA 0xbd
0000             66   _ADC0LTH        DATA 0xc6
0000             67   _ADC0LTL        DATA 0xc5
0000             68   _ADC0MX         DATA 0xbb
0000             69   _B              DATA 0xf0
0000             70   _CKCON0         DATA 0x8e
0000             71   _CKCON1         DATA 0xa6
0000             72   _CLEN0          DATA 0xc6
0000             73   _CLIE0          DATA 0xc7
0000             74   _CLIF0          DATA 0xe8
0000             75   _CLKSEL         DATA 0xa9
0000             76   _CLOUT0         DATA 0xd1
0000             77   _CLU0CF         DATA 0xb1
0000             78   _CLU0FN         DATA 0xaf
0000             79   _CLU0MX         DATA 0x84
0000             80   _CLU1CF         DATA 0xb3
0000             81   _CLU1FN         DATA 0xb2
0000             82   _CLU1MX         DATA 0x85
0000             83   _CLU2CF         DATA 0xb6
0000             84   _CLU2FN         DATA 0xb5
0000             85   _CLU2MX         DATA 0x91
0000             86   _CLU3CF         DATA 0xbf
0000             87   _CLU3FN         DATA 0xbe
0000             88   _CLU3MX         DATA 0xae
0000             89   _CMP0CN0        DATA 0x9b
0000             90   _CMP0CN1        DATA 0x99
0000             91   _CMP0MD         DATA 0x9d
0000             92   _CMP0MX         DATA 0x9f
0000             93   _CMP1CN0        DATA 0xbf
0000             94   _CMP1CN1        DATA 0xac
0000             95   _CMP1MD         DATA 0xab
0000             96   _CMP1MX         DATA 0xaa
0000             97   _CRC0CN0        DATA 0xce
0000             98   _CRC0CN1        DATA 0x86
0000             99   _CRC0CNT        DATA 0xd3
0000            100   _CRC0DAT        DATA 0xcb
0000            101   _CRC0FLIP       DATA 0xcf
0000            102   _CRC0IN         DATA 0xca
0000            103   _CRC0ST         DATA 0xd2
0000            104   _DAC0CF0        DATA 0x91
0000            105   _DAC0CF1        DATA 0x92
0000            106   _DAC0H          DATA 0x85
0000            107   _DAC0L          DATA 0x84
0000            108   _DAC1CF0        DATA 0x93
0000            109   _DAC1CF1        DATA 0x94
0000            110   _DAC1H          DATA 0x8a
0000            111   _DAC1L          DATA 0x89
0000            112   _DAC2CF0        DATA 0x95
0000            113   _DAC2CF1        DATA 0x96
0000            114   _DAC2H          DATA 0x8c
0000            115   _DAC2L          DATA 0x8b
0000            116   _DAC3CF0        DATA 0x9a
0000            117   _DAC3CF1        DATA 0x9c
0000            118   _DAC3H          DATA 0x8e
0000            119   _DAC3L          DATA 0x8d
0000            120   _DACGCF0        DATA 0x88
0000            121   _DACGCF1        DATA 0x98
0000            122   _DACGCF2        DATA 0xa2
0000            123   _DERIVID        DATA 0xad
0000            124   _DEVICEID       DATA 0xb5
0000            125   _DPH            DATA 0x83
0000            126   _DPL            DATA 0x82
0000            127   _EIE1           DATA 0xe6
0000            128   _EIE2           DATA 0xf3
0000            129   _EIP1           DATA 0xbb
0000            130   _EIP1H          DATA 0xee
0000            131   _EIP2           DATA 0xed
0000            132   _EIP2H          DATA 0xf6
0000            133   _EMI0CN         DATA 0xe7
0000            134   _FLKEY          DATA 0xb7
0000            135   _HFO0CAL        DATA 0xc7
0000            136   _HFO1CAL        DATA 0xd6
0000            137   _HFOCN          DATA 0xef
0000            138   _I2C0ADM        DATA 0xff
0000            139   _I2C0CN0        DATA 0xba
0000            140   _I2C0DIN        DATA 0xbc
0000            141   _I2C0DOUT       DATA 0xbb
0000            142   _I2C0FCN0       DATA 0xad
0000            143   _I2C0FCN1       DATA 0xab
0000            144   _I2C0FCT        DATA 0xf5
0000            145   _I2C0SLAD       DATA 0xbd
0000            146   _I2C0STAT       DATA 0xb9
0000            147   _IE             DATA 0xa8
0000            148   _IP             DATA 0xb8
0000            149   _IPH            DATA 0xf2
0000            150   _IT01CF         DATA 0xe4
0000            151   _LFO0CN         DATA 0xb1
0000            152   _P0             DATA 0x80
0000            153   _P0MASK         DATA 0xfe
0000            154   _P0MAT          DATA 0xfd
0000            155   _P0MDIN         DATA 0xf1
0000            156   _P0MDOUT        DATA 0xa4
0000            157   _P0SKIP         DATA 0xd4
0000            158   _P1             DATA 0x90
0000            159   _P1MASK         DATA 0xee
0000            160   _P1MAT          DATA 0xed
0000            161   _P1MDIN         DATA 0xf2
0000            162   _P1MDOUT        DATA 0xa5
0000            163   _P1SKIP         DATA 0xd5
0000            164   _P2             DATA 0xa0
0000            165   _P2MASK         DATA 0xfc
0000            166   _P2MAT          DATA 0xfb
0000            167   _P2MDIN         DATA 0xf3
0000            168   _P2MDOUT        DATA 0xa6
0000            169   _P2SKIP         DATA 0xcc
0000            170   _P3             DATA 0xb0
0000            171   _P3MDIN         DATA 0xf4
0000            172   _P3MDOUT        DATA 0x9c
0000            173   _PCA0CENT       DATA 0x9e
0000            174   _PCA0CLR        DATA 0x9c
0000            175   _PCA0CN0        DATA 0xd8
0000            176   _PCA0CPH0       DATA 0xfc
0000            177   _PCA0CPH1       DATA 0xea
0000            178   _PCA0CPH2       DATA 0xec
0000            179   _PCA0CPH3       DATA 0xf5
0000            180   _PCA0CPH4       DATA 0x85
0000            181   _PCA0CPH5       DATA 0xde
0000            182   _PCA0CPL0       DATA 0xfb
0000            183   _PCA0CPL1       DATA 0xe9
0000            184   _PCA0CPL2       DATA 0xeb
0000            185   _PCA0CPL3       DATA 0xf4
0000            186   _PCA0CPL4       DATA 0x84
0000            187   _PCA0CPL5       DATA 0xdd
0000            188   _PCA0CPM0       DATA 0xda
0000            189   _PCA0CPM1       DATA 0xdb
0000            190   _PCA0CPM2       DATA 0xdc
0000            191   _PCA0CPM3       DATA 0xae
0000            192   _PCA0CPM4       DATA 0xaf
0000            193   _PCA0CPM5       DATA 0xcc
0000            194   _PCA0H          DATA 0xfa
0000            195   _PCA0L          DATA 0xf9
0000            196   _PCA0MD         DATA 0xd9
0000            197   _PCA0POL        DATA 0x96
0000            198   _PCA0PWM        DATA 0xf7
0000            199   _PCON0          DATA 0x87
0000            200   _PCON1          DATA 0xcd
0000            201   _PFE0CN         DATA 0xc1
0000            202   _PRTDRV         DATA 0xf6
0000            203   _PSCTL          DATA 0x8f
0000            204   _PSTAT0         DATA 0xaa
0000            205   _PSW            DATA 0xd0
0000            206   _REF0CN         DATA 0xd1
0000            207   _REG0CN         DATA 0xc9
0000            208   _REVID          DATA 0xb6
0000            209   _RSTSRC         DATA 0xef
0000            210   _SBCON1         DATA 0x94
0000            211   _SBRLH1         DATA 0x96
0000            212   _SBRLL1         DATA 0x95
0000            213   _SBUF           DATA 0x99
0000            214   _SBUF0          DATA 0x99
0000            215   _SBUF1          DATA 0x92
0000            216   _SCON           DATA 0x98
0000            217   _SCON0          DATA 0x98
0000            218   _SCON1          DATA 0xc8
0000            219   _SFRPAGE        DATA 0xa7
0000            220   _SFRPGCN        DATA 0xbc
0000            221   _SFRSTACK       DATA 0xd7
0000            222   _SMB0ADM        DATA 0xd6
0000            223   _SMB0ADR        DATA 0xd7
0000            224   _SMB0CF         DATA 0xc1
0000            225   _SMB0CN0        DATA 0xc0
0000            226   _SMB0DAT        DATA 0xc2
0000            227   _SMB0FCN0       DATA 0xc3
0000            228   _SMB0FCN1       DATA 0xc4
0000            229   _SMB0FCT        DATA 0xef
0000            230   _SMB0RXLN       DATA 0xc5
0000            231   _SMB0TC         DATA 0xac
0000            232   _SMOD1          DATA 0x93
0000            233   _SP             DATA 0x81
0000            234   _SPI0CFG        DATA 0xa1
0000            235   _SPI0CKR        DATA 0xa2
0000            236   _SPI0CN0        DATA 0xf8
0000            237   _SPI0DAT        DATA 0xa3
0000            238   _SPI0FCN0       DATA 0x9a
0000            239   _SPI0FCN1       DATA 0x9b
0000            240   _SPI0FCT        DATA 0xf7
0000            241   _SPI0PCF        DATA 0xdf
0000            242   _TCON           DATA 0x88
0000            243   _TH0            DATA 0x8c
0000            244   _TH1            DATA 0x8d
0000            245   _TL0            DATA 0x8a
0000            246   _TL1            DATA 0x8b
0000            247   _TMOD           DATA 0x89
0000            248   _TMR2CN0        DATA 0xc8
0000            249   _TMR2CN1        DATA 0xfd
0000            250   _TMR2H          DATA 0xcf
0000            251   _TMR2L          DATA 0xce
0000            252   _TMR2RLH        DATA 0xcb
0000            253   _TMR2RLL        DATA 0xca
0000            254   _TMR3CN0        DATA 0x91
0000            255   _TMR3CN1        DATA 0xfe
0000            256   _TMR3H          DATA 0x95
0000            257   _TMR3L          DATA 0x94
0000            258   _TMR3RLH        DATA 0x93
0000            259   _TMR3RLL        DATA 0x92
0000            260   _TMR4CN0        DATA 0x98
0000            261   _TMR4CN1        DATA 0xff
0000            262   _TMR4H          DATA 0xa5
0000            263   _TMR4L          DATA 0xa4
0000            264   _TMR4RLH        DATA 0xa3
0000            265   _TMR4RLL        DATA 0xa2
0000            266   _TMR5CN0        DATA 0xc0
0000            267   _TMR5CN1        DATA 0xf1
0000            268   _TMR5H          DATA 0xd5
0000            269   _TMR5L          DATA 0xd4
0000            270   _TMR5RLH        DATA 0xd3
0000            271   _TMR5RLL        DATA 0xd2
0000            272   _UART0PCF       DATA 0xd9
0000            273   _UART1FCN0      DATA 0x9d
0000            274   _UART1FCN1      DATA 0xd8
0000            275   _UART1FCT       DATA 0xfa
0000            276   _UART1LIN       DATA 0x9e
0000            277   _UART1PCF       DATA 0xda
0000            278   _VDM0CN         DATA 0xff
0000            279   _WDTCN          DATA 0x97
0000            280   _XBR0           DATA 0xe1
0000            281   _XBR1           DATA 0xe2
0000            282   _XBR2           DATA 0xe3
0000            283   _XOSC0CN        DATA 0x86
0000            284   _DPTR           DATA 0x8382
0000            285   _TMR2RL         DATA 0xcbca
0000            286   _TMR3RL         DATA 0x9392
0000            287   _TMR4RL         DATA 0xa3a2
0000            288   _TMR5RL         DATA 0xd3d2
0000            289   _TMR0           DATA 0x8c8a
0000            290   _TMR1           DATA 0x8d8b
0000            291   _TMR2           DATA 0xcfce
0000            292   _TMR3           DATA 0x9594
0000            293   _TMR4           DATA 0xa5a4
0000            294   _TMR5           DATA 0xd5d4
0000            295   _SBRL1          DATA 0x9695
0000            296   _PCA0           DATA 0xfaf9
0000            297   _PCA0CP0        DATA 0xfcfb
0000            298   _PCA0CP1        DATA 0xeae9
0000            299   _PCA0CP2        DATA 0xeceb
0000            300   _PCA0CP3        DATA 0xf5f4
0000            301   _PCA0CP4        DATA 0x8584
0000            302   _PCA0CP5        DATA 0xdedd
0000            303   _ADC0ASA        DATA 0xb6b5
0000            304   _ADC0GT         DATA 0xc4c3
0000            305   _ADC0           DATA 0xbebd
0000            306   _ADC0LT         DATA 0xc6c5
0000            307   _DAC0           DATA 0x8584
0000            308   _DAC1           DATA 0x8a89
0000            309   _DAC2           DATA 0x8c8b
0000            310   _DAC3           DATA 0x8e8d
0000            311   ;--------------------------------------------------------
0000            312   ; special function bits
0000            313   ;--------------------------------------------------------
0000            314   _ACC_0          BIT 0xe0
0000            315   _ACC_1          BIT 0xe1
0000            316   _ACC_2          BIT 0xe2
0000            317   _ACC_3          BIT 0xe3
0000            318   _ACC_4          BIT 0xe4
0000            319   _ACC_5          BIT 0xe5
0000            320   _ACC_6          BIT 0xe6
0000            321   _ACC_7          BIT 0xe7
0000            322   _TEMPE          BIT 0xe8
0000            323   _ADGN0          BIT 0xe9
0000            324   _ADGN1          BIT 0xea
0000            325   _ADWINT         BIT 0xeb
0000            326   _ADBUSY         BIT 0xec
0000            327   _ADINT          BIT 0xed
0000            328   _IPOEN          BIT 0xee
0000            329   _ADEN           BIT 0xef
0000            330   _B_0            BIT 0xf0
0000            331   _B_1            BIT 0xf1
0000            332   _B_2            BIT 0xf2
0000            333   _B_3            BIT 0xf3
0000            334   _B_4            BIT 0xf4
0000            335   _B_5            BIT 0xf5
0000            336   _B_6            BIT 0xf6
0000            337   _B_7            BIT 0xf7
0000            338   _C0FIF          BIT 0xe8
0000            339   _C0RIF          BIT 0xe9
0000            340   _C1FIF          BIT 0xea
0000            341   _C1RIF          BIT 0xeb
0000            342   _C2FIF          BIT 0xec
0000            343   _C2RIF          BIT 0xed
0000            344   _C3FIF          BIT 0xee
0000            345   _C3RIF          BIT 0xef
0000            346   _D1SRC0         BIT 0x88
0000            347   _D1SRC1         BIT 0x89
0000            348   _D1AMEN         BIT 0x8a
0000            349   _D01REFSL       BIT 0x8b
0000            350   _D3SRC0         BIT 0x8c
0000            351   _D3SRC1         BIT 0x8d
0000            352   _D3AMEN         BIT 0x8e
0000            353   _D23REFSL       BIT 0x8f
0000            354   _D0UDIS         BIT 0x98
0000            355   _D1UDIS         BIT 0x99
0000            356   _D2UDIS         BIT 0x9a
0000            357   _D3UDIS         BIT 0x9b
0000            358   _EX0            BIT 0xa8
0000            359   _ET0            BIT 0xa9
0000            360   _EX1            BIT 0xaa
0000            361   _ET1            BIT 0xab
0000            362   _ES0            BIT 0xac
0000            363   _ET2            BIT 0xad
0000            364   _ESPI0          BIT 0xae
0000            365   _EA             BIT 0xaf
0000            366   _PX0            BIT 0xb8
0000            367   _PT0            BIT 0xb9
0000            368   _PX1            BIT 0xba
0000            369   _PT1            BIT 0xbb
0000            370   _PS0            BIT 0xbc
0000            371   _PT2            BIT 0xbd
0000            372   _PSPI0          BIT 0xbe
0000            373   _P0_0           BIT 0x80
0000            374   _P0_1           BIT 0x81
0000            375   _P0_2           BIT 0x82
0000            376   _P0_3           BIT 0x83
0000            377   _P0_4           BIT 0x84
0000            378   _P0_5           BIT 0x85
0000            379   _P0_6           BIT 0x86
0000            380   _P0_7           BIT 0x87
0000            381   _P1_0           BIT 0x90
0000            382   _P1_1           BIT 0x91
0000            383   _P1_2           BIT 0x92
0000            384   _P1_3           BIT 0x93
0000            385   _P1_4           BIT 0x94
0000            386   _P1_5           BIT 0x95
0000            387   _P1_6           BIT 0x96
0000            388   _P1_7           BIT 0x97
0000            389   _P2_0           BIT 0xa0
0000            390   _P2_1           BIT 0xa1
0000            391   _P2_2           BIT 0xa2
0000            392   _P2_3           BIT 0xa3
0000            393   _P2_4           BIT 0xa4
0000            394   _P2_5           BIT 0xa5
0000            395   _P2_6           BIT 0xa6
0000            396   _P3_0           BIT 0xb0
0000            397   _P3_1           BIT 0xb1
0000            398   _P3_2           BIT 0xb2
0000            399   _P3_3           BIT 0xb3
0000            400   _P3_4           BIT 0xb4
0000            401   _P3_7           BIT 0xb7
0000            402   _CCF0           BIT 0xd8
0000            403   _CCF1           BIT 0xd9
0000            404   _CCF2           BIT 0xda
0000            405   _CCF3           BIT 0xdb
0000            406   _CCF4           BIT 0xdc
0000            407   _CCF5           BIT 0xdd
0000            408   _CR             BIT 0xde
0000            409   _CF             BIT 0xdf
0000            410   _PARITY         BIT 0xd0
0000            411   _F1             BIT 0xd1
0000            412   _OV             BIT 0xd2
0000            413   _RS0            BIT 0xd3
0000            414   _RS1            BIT 0xd4
0000            415   _F0             BIT 0xd5
0000            416   _AC             BIT 0xd6
0000            417   _CY             BIT 0xd7
0000            418   _RI             BIT 0x98
0000            419   _TI             BIT 0x99
0000            420   _RB8            BIT 0x9a
0000            421   _TB8            BIT 0x9b
0000            422   _REN            BIT 0x9c
0000            423   _CE             BIT 0x9d
0000            424   _SMODE          BIT 0x9e
0000            425   _RI1            BIT 0xc8
0000            426   _TI1            BIT 0xc9
0000            427   _RBX1           BIT 0xca
0000            428   _TBX1           BIT 0xcb
0000            429   _REN1           BIT 0xcc
0000            430   _PERR1          BIT 0xcd
0000            431   _OVR1           BIT 0xce
0000            432   _SI             BIT 0xc0
0000            433   _ACK            BIT 0xc1
0000            434   _ARBLOST        BIT 0xc2
0000            435   _ACKRQ          BIT 0xc3
0000            436   _STO            BIT 0xc4
0000            437   _STA            BIT 0xc5
0000            438   _TXMODE         BIT 0xc6
0000            439   _MASTER         BIT 0xc7
0000            440   _SPIEN          BIT 0xf8
0000            441   _TXNF           BIT 0xf9
0000            442   _NSSMD0         BIT 0xfa
0000            443   _NSSMD1         BIT 0xfb
0000            444   _RXOVRN         BIT 0xfc
0000            445   _MODF           BIT 0xfd
0000            446   _WCOL           BIT 0xfe
0000            447   _SPIF           BIT 0xff
0000            448   _IT0            BIT 0x88
0000            449   _IE0            BIT 0x89
0000            450   _IT1            BIT 0x8a
0000            451   _IE1            BIT 0x8b
0000            452   _TR0            BIT 0x8c
0000            453   _TF0            BIT 0x8d
0000            454   _TR1            BIT 0x8e
0000            455   _TF1            BIT 0x8f
0000            456   _T2XCLK0        BIT 0xc8
0000            457   _T2XCLK1        BIT 0xc9
0000            458   _TR2            BIT 0xca
0000            459   _T2SPLIT        BIT 0xcb
0000            460   _TF2CEN         BIT 0xcc
0000            461   _TF2LEN         BIT 0xcd
0000            462   _TF2L           BIT 0xce
0000            463   _TF2H           BIT 0xcf
0000            464   _T4XCLK0        BIT 0x98
0000            465   _T4XCLK1        BIT 0x99
0000            466   _TR4            BIT 0x9a
0000            467   _T4SPLIT        BIT 0x9b
0000            468   _TF4CEN         BIT 0x9c
0000            469   _TF4LEN         BIT 0x9d
0000            470   _TF4L           BIT 0x9e
0000            471   _TF4H           BIT 0x9f
0000            472   _T5XCLK0        BIT 0xc0
0000            473   _T5XCLK1        BIT 0xc1
0000            474   _TR5            BIT 0xc2
0000            475   _T5SPLIT        BIT 0xc3
0000            476   _TF5CEN         BIT 0xc4
0000            477   _TF5LEN         BIT 0xc5
0000            478   _TF5L           BIT 0xc6
0000            479   _TF5H           BIT 0xc7
0000            480   _RIE            BIT 0xd8
0000            481   _RXTO0          BIT 0xd9
0000            482   _RXTO1          BIT 0xda
0000            483   _RFRQ           BIT 0xdb
0000            484   _TIE            BIT 0xdc
0000            485   _TXHOLD         BIT 0xdd
0000            486   _TXNF1          BIT 0xde
0000            487   _TFRQ           BIT 0xdf
0000            488   ;--------------------------------------------------------
0000            489   ; overlayable register banks
0000            490   ;--------------------------------------------------------
0000            491            rbank0 segment data overlay
0000            492   ;--------------------------------------------------------
0000            493   ; overlayable bit register bank
0000            494   ;--------------------------------------------------------
0000            495            rseg BIT_BANK
0000            496   bits:
0000            497            ds 1
0001            498            b0 equ  bits.0 
0001            499            b1 equ  bits.1 
0001            500            b2 equ  bits.2 
0001            501            b3 equ  bits.3 
0001            502            b4 equ  bits.4 
0001            503            b5 equ  bits.5 
0001            504            b6 equ  bits.6 
0001            505            b7 equ  bits.7 
0001            506   ;--------------------------------------------------------
0001            507   ; internal ram data
0001            508   ;--------------------------------------------------------
0000            509            rseg R_DSEG
0000            510   _inductance:
0000            511            ds 2
0002            512   _count:
0002            513            ds 2
0004            514   _state:
0004            515            ds 2
0006            516   _PWM_percent_y:
0006            517            ds 2
0008            518   _PWM_percent_x:
0008            519            ds 2
000A            520   _left_wheel:
000A            521            ds 4
000E            522   _right_wheel:
000E            523            ds 4
0012            524   _new_right_wheel:
0012            525            ds 4
0016            526   _prev_PWM_percent_x:
0016            527            ds 2
0018            528   _prev_PWM_percent_y:
0018            529            ds 2
001A            530   _PWM_manager_PARM_2:
001A            531            ds 4
001E            532   _PWM_manager_sloc0_1_0:
001E            533            ds 2
0020            534   _movement_manager_PARM_2:
0020            535            ds 4
0024            536   ;--------------------------------------------------------
0024            537   ; overlayable items in internal ram 
0024            538   ;--------------------------------------------------------
0000            539            rseg R_OSEG
0000            540   ;--------------------------------------------------------
0000            541   ; indirectly addressable internal ram data
0000            542   ;--------------------------------------------------------
0000            543            rseg R_ISEG
0000            544   ;--------------------------------------------------------
0000            545   ; absolute internal ram data
0000            546   ;--------------------------------------------------------
0000            547            DSEG
0000            548   ;--------------------------------------------------------
0000            549   ; bit data
0000            550   ;--------------------------------------------------------
0000            551            rseg R_BSEG
0000            552   _Timer5_ISR_sloc0_1_0:
0000            553            DBIT    1
0001            554   ;--------------------------------------------------------
0001            555   ; paged external ram data
0001            556   ;--------------------------------------------------------
0000            557            rseg R_PSEG
0000            558   ;--------------------------------------------------------
0000            559   ; external ram data
0000            560   ;--------------------------------------------------------
0000            561            rseg R_XSEG
0000            562   ;--------------------------------------------------------
0000            563   ; absolute external ram data
0000            564   ;--------------------------------------------------------
0000            565            XSEG
0000            566   ;--------------------------------------------------------
0000            567   ; external initialized ram data
0000            568   ;--------------------------------------------------------
0000            569            rseg R_IXSEG
0000            570            rseg R_HOME
0000            571            rseg R_GSINIT
0000            572            rseg R_CSEG
0000            573   ;--------------------------------------------------------
0000            574   ; Reset entry point and interrupt vectors
0000            575   ;--------------------------------------------------------
0000            576            CSEG at 0x0000
0000 020000     577            ljmp    _crt0
0093            578            CSEG at 0x0093
0093 020000     579            ljmp    _Timer5_ISR
0096            580   ;--------------------------------------------------------
0096            581   ; global & static initialisations
0096            582   ;--------------------------------------------------------
0000            583            rseg R_HOME
0000            584            rseg R_GSINIT
0000            585            rseg R_GSINIT
0000            586   ;--------------------------------------------------------
0000            587   ; data variables initialization
0000            588   ;--------------------------------------------------------
0000            589            rseg R_DINIT
0000            590   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:22: volatile int inductance = 0;
0000 E4         591            clr     a
0001 F590       592            mov     _inductance,a
0003 F591       593            mov     (_inductance + 1),a
0005            594   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:36: int count = 0;
0005 E4         595            clr     a
0006 F550       596            mov     _count,a
0008 F551       597            mov     (_count + 1),a
000A            598   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:39: int PWM_percent_y = 0;
000A E4         599            clr     a
000B F5D0       600            mov     _PWM_percent_y,a
000D F5D1       601            mov     (_PWM_percent_y + 1),a
000F            602   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:40: int PWM_percent_x = -100;
000F 75909C     603            mov     _PWM_percent_x,#0x9C
0012 7591FF     604            mov     (_PWM_percent_x + 1),#0xFF
0015            605   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:41: float left_wheel = 0;
0015 755000     606            mov     _left_wheel,#0x00
0018 755100     607            mov     (_left_wheel + 1),#0x00
001B 755200     608            mov     (_left_wheel + 2),#0x00
001E 755300     609            mov     (_left_wheel + 3),#0x00
0021            610   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:42: float right_wheel = 0;
0021 751000     611            mov     _right_wheel,#0x00
0024 751100     612            mov     (_right_wheel + 1),#0x00
0027 751200     613            mov     (_right_wheel + 2),#0x00
002A 751300     614            mov     (_right_wheel + 3),#0x00
002D            615   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:44: int prev_PWM_percent_x = 0;
002D E4         616            clr     a
002E F580       617            mov     _prev_PWM_percent_x,a
0030 F581       618            mov     (_prev_PWM_percent_x + 1),a
0032            619   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:45: int prev_PWM_percent_y = 0;
0032 E4         620            clr     a
0033 F530       621            mov     _prev_PWM_percent_y,a
0035 F531       622            mov     (_prev_PWM_percent_y + 1),a
0037            623            ; The linker places a 'ret' at the end of segment R_DINIT.
0037            624   ;--------------------------------------------------------
0037            625   ; code
0037            626   ;--------------------------------------------------------
0000            627            rseg R_CSEG
0000            628   ;------------------------------------------------------------
0000            629   ;Allocation info for local variables in function '_c51_external_startup'
0000            630   ;------------------------------------------------------------
0000            631   ;------------------------------------------------------------
0000            632   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:49: char _c51_external_startup (void) {
0000            633   ;        -----------------------------------------
0000            634   ;         function _c51_external_startup
0000            635   ;        -----------------------------------------
0000            636   __c51_external_startup:
0000            637            using   0
0000            638   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:51: SFRPAGE = 0x00;
0000 75A700     639            mov     _SFRPAGE,#0x00
0003            640   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:52: WDTCN = 0xDE; //First key
0003 7597DE     641            mov     _WDTCN,#0xDE
0006            642   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:53: WDTCN = 0xAD; //Second key
0006 7597AD     643            mov     _WDTCN,#0xAD
0009            644   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:55: VDM0CN=0x80;       // enable VDD monitor
0009 75FF80     645            mov     _VDM0CN,#0x80
000C            646   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:56: RSTSRC=0x02|0x04;  // Enable reset on missing clock detector and VDD
000C 75EF06     647            mov     _RSTSRC,#0x06
000F            648   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:63: SFRPAGE = 0x10;
000F 75A710     649            mov     _SFRPAGE,#0x10
0012            650   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:64: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     651            mov     _PFE0CN,#0x20
0015            652   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:65: SFRPAGE = 0x00;
0015 75A700     653            mov     _SFRPAGE,#0x00
0018            654   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:86: CLKSEL = 0x00;
0018 75A900     655            mov     _CLKSEL,#0x00
001B            656   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:87: CLKSEL = 0x00;
001B 75A900     657            mov     _CLKSEL,#0x00
001E            658   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:88: while ((CLKSEL & 0x80) == 0);
001E            659   L002001?:
001E E5A9       660            mov     a,_CLKSEL
0020 30E770     661            jnb     acc.7,L002001?
0023            662   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:89: CLKSEL = 0x03;
0023 75A903     663            mov     _CLKSEL,#0x03
0026            664   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:90: CLKSEL = 0x03;
0026 75A903     665            mov     _CLKSEL,#0x03
0029            666   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:91: while ((CLKSEL & 0x80) == 0);
0029            667   L002004?:
0029 E5A9       668            mov     a,_CLKSEL
002B 30E7F0     669            jnb     acc.7,L002004?
002E            670   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:96: P0MDOUT |= 0x11; // Enable UART0 TX (P0.4) and UART1 TX (P0.0) as push-pull outputs
002E 43A411     671            orl     _P0MDOUT,#0x11
0031            672   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:97: P2MDOUT |= 0x01; // P2.0 in push-pull mode
0031 43A601     673            orl     _P2MDOUT,#0x01
0034            674   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:98: XBR0     = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)
0034 75E101     675            mov     _XBR0,#0x01
0037            676   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:99: XBR1     = 0X00;
0037 75E200     677            mov     _XBR1,#0x00
003A            678   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:100: XBR2     = 0x41; // Enable crossbar and uart 1
003A 75E341     679            mov     _XBR2,#0x41
003D            680   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:106: SCON0 = 0x10;
003D 759810     681            mov     _SCON0,#0x10
0040            682   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:107: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
0040 758DE6     683            mov     _TH1,#0xE6
0043            684   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:108: TL1 = TH1;      // Init Timer1
0043 858D8B     685            mov     _TL1,_TH1
0046            686   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:109: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0046 53890F     687            anl     _TMOD,#0x0F
0049            688   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:110: TMOD |=  0x20;
0049 438920     689            orl     _TMOD,#0x20
004C            690   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:111: TR1 = 1; // START Timer1
004C D28E       691            setb    _TR1
004E            692   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:112: TI = 1;  // Indicate TX0 ready
004E D299       693            setb    _TI
0050            694   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:114: P0MDOUT|=0b_0000_0010;
0050 43A402     695            orl     _P0MDOUT,#0x02
0053            696   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:115: P1MDOUT|=0b_1111_1111;
0053 E5A5       697            mov     a,_P1MDOUT
0055 75A5FF     698            mov     _P1MDOUT,#0xFF
0058            699   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:116: P2MDOUT|=0b_0001_1111;
0058 43A61F     700            orl     _P2MDOUT,#0x1F
005B            701   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:120: return 0;
005B 758200     702            mov     dpl,#0x00
005E 22         703            ret
005F            704   ;------------------------------------------------------------
005F            705   ;Allocation info for local variables in function 'TIMER0_Init'
005F            706   ;------------------------------------------------------------
005F            707   ;------------------------------------------------------------
005F            708   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:122: void TIMER0_Init(void) {
005F            709   ;        -----------------------------------------
005F            710   ;         function TIMER0_Init
005F            711   ;        -----------------------------------------
005F            712   _TIMER0_Init:
005F            713   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:123: TMOD &= 0b_1111_0000; // Set the Bits of Timer/Counter 0 to 0
005F 5389F0     714            anl     _TMOD,#0xF0
0062            715   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:124: TMOD |= 0b_0000_0001; // Timer/Counter 0 Used As 16-Bit Timer
0062 438901     716            orl     _TMOD,#0x01
0065            717   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:125: TR0 = 0; // Stop Timer/Counter 0
0065 C28C       718            clr     _TR0
0067 22         719            ret
0068            720   ;------------------------------------------------------------
0068            721   ;Allocation info for local variables in function 'straight'
0068            722   ;------------------------------------------------------------
0068            723   ;------------------------------------------------------------
0068            724   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:181: void straight(void)
0068            725   ;        -----------------------------------------
0068            726   ;         function straight
0068            727   ;        -----------------------------------------
0068            728   _straight:
0068            729   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:183: LEFT_MOTOR_RHS = 0;
0068 C2A3       730            clr     _P2_3
006A            731   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:184: RIGHT_MOTOR_RHS = 0;
006A C2A1       732            clr     _P2_1
006C 22         733            ret
006D            734   ;------------------------------------------------------------
006D            735   ;Allocation info for local variables in function 'backward'
006D            736   ;------------------------------------------------------------
006D            737   ;------------------------------------------------------------
006D            738   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:187: void backward(void)
006D            739   ;        -----------------------------------------
006D            740   ;         function backward
006D            741   ;        -----------------------------------------
006D            742   _backward:
006D            743   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:189: LEFT_MOTOR_RHS = 1;
006D D2A3       744            setb    _P2_3
006F            745   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:190: RIGHT_MOTOR_RHS = 1;
006F D2A1       746            setb    _P2_1
0071 22         747            ret
0072            748   ;------------------------------------------------------------
0072            749   ;Allocation info for local variables in function 'TIMER5Init'
0072            750   ;------------------------------------------------------------
0072            751   ;------------------------------------------------------------
0072            752   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:194: void TIMER5Init(void)
0072            753   ;        -----------------------------------------
0072            754   ;         function TIMER5Init
0072            755   ;        -----------------------------------------
0072            756   _TIMER5Init:
0072            757   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:197: SFRPAGE=0x10;
0072 75A710     758            mov     _SFRPAGE,#0x10
0075            759   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:198: TMR5CN0=0x00;   // Stop Timer5; Clear TF5; WARNING: lives in SFR page 0x10
0075 75C000     760            mov     _TMR5CN0,#0x00
0078            761   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:199: CKCON1|=0b_0000_0100; // Timer 5 uses the system clock
0078 43A604     762            orl     _CKCON1,#0x04
007B            763   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:200: TMR5RL=(0x10000L-(SYSCLK/(2*TIMER_5_FREQ))); // Initialize reload value
007B 75D2F0     764            mov     _TMR5RL,#0xF0
007E 75D3F1     765            mov     (_TMR5RL >> 8),#0xF1
0081            766   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:201: TMR5=0xffff;   // Set to reload immediately
0081 75D4FF     767            mov     _TMR5,#0xFF
0084 75D5FF     768            mov     (_TMR5 >> 8),#0xFF
0087            769   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:202: EIE2|=0b_0000_1000; // Enable Timer5 interrupts
0087 43F308     770            orl     _EIE2,#0x08
008A            771   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:203: TR5=1;         // Start Timer5 (TMR5CN0 is bit addressable)
008A D2C2       772            setb    _TR5
008C            773   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:204: EA = 1;
008C D2AF       774            setb    _EA
008E 22         775            ret
008F            776   ;------------------------------------------------------------
008F            777   ;Allocation info for local variables in function 'PWM_manager'
008F            778   ;------------------------------------------------------------
008F            779   ;y_value                   Allocated with name '_PWM_manager_PARM_2'
008F            780   ;x_value                   Allocated to registers r2 r3 r4 r5 
008F            781   ;sloc0                     Allocated with name '_PWM_manager_sloc0_1_0'
008F            782   ;------------------------------------------------------------
008F            783   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:208: void PWM_manager(float x_value, float y_value)
008F            784   ;        -----------------------------------------
008F            785   ;         function PWM_manager
008F            786   ;        -----------------------------------------
008F            787   _PWM_manager:
008F AA82       788            mov     r2,dpl
0091 AB83       789            mov     r3,dph
0093 ACF0       790            mov     r4,b
0095 FD         791            mov     r5,a
0096            792   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:210: if (x_value >= 0) // RIGHT TURN
0096 C002       793            push    ar2
0098 C003       794            push    ar3
009A C004       795            push    ar4
009C C005       796            push    ar5
009E E4         797            clr     a
009F C0E0       798            push    acc
00A1 C0E0       799            push    acc
00A3 C0E0       800            push    acc
00A5 C0E0       801            push    acc
00A7 8A82       802            mov     dpl,r2
00A9 8B83       803            mov     dph,r3
00AB 8CF0       804            mov     b,r4
00AD ED         805            mov     a,r5
00AE 120000     806            lcall   ___fslt
00B1 AE82       807            mov     r6,dpl
00B3 E581       808            mov     a,sp
00B5 24FC       809            add     a,#0xfc
00B7 F581       810            mov     sp,a
00B9 D005       811            pop     ar5
00BB D004       812            pop     ar4
00BD D003       813            pop     ar3
00BF D002       814            pop     ar2
00C1 EE         815            mov     a,r6
00C2 6000       816            jz      L007026?
00C4 020000     817            ljmp    L007004?
00C7            818   L007026?:
00C7            819   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:212: left_wheel = abs(y_value);
00C7 85E082     820            mov     dpl,_PWM_manager_PARM_2
00CA 85E183     821            mov     dph,(_PWM_manager_PARM_2 + 1)
00CD 85E2F0     822            mov     b,(_PWM_manager_PARM_2 + 2)
00D0 E5E3       823            mov     a,(_PWM_manager_PARM_2 + 3)
00D2 C002       824            push    ar2
00D4 C003       825            push    ar3
00D6 C004       826            push    ar4
00D8 C005       827            push    ar5
00DA 120000     828            lcall   ___fs2sint
00DD 8582A0     829            mov     _PWM_manager_sloc0_1_0,dpl
00E0 8583A1     830            mov  (_PWM_manager_sloc0_1_0 + 1),dph
00E3 120000     831            lcall   _abs
00E6 120000     832            lcall   ___sint2fs
00E9 858250     833            mov     _left_wheel,dpl
00EC 858351     834            mov     (_left_wheel + 1),dph
00EF 85F052     835            mov     (_left_wheel + 2),b
00F2 F553       836            mov     (_left_wheel + 3),a
00F4 D005       837            pop     ar5
00F6 D004       838            pop     ar4
00F8 D003       839            pop     ar3
00FA D002       840            pop     ar2
00FC            841   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:213: right_wheel = (100 - abs(x_value)) * abs(y_value) / 100;
00FC 8A82       842            mov     dpl,r2
00FE 8B83       843            mov     dph,r3
0100 8CF0       844            mov     b,r4
0102 ED         845            mov     a,r5
0103 120000     846            lcall   ___fs2sint
0106 120000     847            lcall   _abs
0109 A982       848            mov     r1,dpl
010B AF83       849            mov     r7,dph
010D 7464       850            mov     a,#0x64
010F C3         851            clr     c
0110 99         852            subb    a,r1
0111 F9         853            mov     r1,a
0112 E4         854            clr     a
0113 9F         855            subb    a,r7
0114 FF         856            mov     r7,a
0115 85A082     857            mov     dpl,_PWM_manager_sloc0_1_0
0118 85A183     858            mov     dph,(_PWM_manager_sloc0_1_0 + 1)
011B C007       859            push    ar7
011D C001       860            push    ar1
011F 120000     861            lcall   _abs
0122 858200     862            mov     __mulint_PARM_2,dpl
0125 858301     863            mov     (__mulint_PARM_2 + 1),dph
0128 D001       864            pop     ar1
012A D007       865            pop     ar7
012C 8982       866            mov     dpl,r1
012E 8F83       867            mov     dph,r7
0130 120000     868            lcall   __mulint
0133 AF82       869            mov     r7,dpl
0135 A883       870            mov     r0,dph
0137 750064     871            mov     __divsint_PARM_2,#0x64
013A E4         872            clr     a
013B F501       873            mov     (__divsint_PARM_2 + 1),a
013D 8F82       874            mov     dpl,r7
013F 8883       875            mov     dph,r0
0141 120000     876            lcall   __divsint
0144 120000     877            lcall   ___sint2fs
0147 858210     878            mov     _right_wheel,dpl
014A 858311     879            mov     (_right_wheel + 1),dph
014D 85F012     880            mov     (_right_wheel + 2),b
0150 F513       881            mov     (_right_wheel + 3),a
0152 020000     882            ljmp    L007005?
0155            883   L007004?:
0155            884   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:215: else if (x_value < 0) // LEFT TURN
0155 EE         885            mov     a,r6
0156 7000       886            jnz     L007027?
0158 020000     887            ljmp    L007005?
015B            888   L007027?:
015B            889   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:217: left_wheel = (100 - abs(x_value)) * abs(y_value) / 100;
015B 8A82       890            mov     dpl,r2
015D 8B83       891            mov     dph,r3
015F 8CF0       892            mov     b,r4
0161 ED         893            mov     a,r5
0162 120000     894            lcall   ___fs2sint
0165 120000     895            lcall   _abs
0168 AA82       896            mov     r2,dpl
016A AB83       897            mov     r3,dph
016C 7464       898            mov     a,#0x64
016E C3         899            clr     c
016F 9A         900            subb    a,r2
0170 FA         901            mov     r2,a
0171 E4         902            clr     a
0172 9B         903            subb    a,r3
0173 FB         904            mov     r3,a
0174 85E082     905            mov     dpl,_PWM_manager_PARM_2
0177 85E183     906            mov     dph,(_PWM_manager_PARM_2 + 1)
017A 85E2F0     907            mov     b,(_PWM_manager_PARM_2 + 2)
017D E5E3       908            mov     a,(_PWM_manager_PARM_2 + 3)
017F C002       909            push    ar2
0181 C003       910            push    ar3
0183 120000     911            lcall   ___fs2sint
0186 AC82       912            mov     r4,dpl
0188 AD83       913            mov  r5,dph
018A C004       914            push    ar4
018C C005       915            push    ar5
018E 120000     916            lcall   _abs
0191 858200     917            mov     __mulint_PARM_2,dpl
0194 858301     918            mov     (__mulint_PARM_2 + 1),dph
0197 D005       919            pop     ar5
0199 D004       920            pop     ar4
019B D003       921            pop     ar3
019D D002       922            pop     ar2
019F 8A82       923            mov     dpl,r2
01A1 8B83       924            mov     dph,r3
01A3 C004       925            push    ar4
01A5 C005       926            push    ar5
01A7 120000     927            lcall   __mulint
01AA AA82       928            mov     r2,dpl
01AC AB83       929            mov     r3,dph
01AE 750064     930            mov     __divsint_PARM_2,#0x64
01B1 E4         931            clr     a
01B2 F501       932            mov     (__divsint_PARM_2 + 1),a
01B4 8A82       933            mov     dpl,r2
01B6 8B83       934            mov     dph,r3
01B8 120000     935            lcall   __divsint
01BB 120000     936            lcall   ___sint2fs
01BE 858250     937            mov     _left_wheel,dpl
01C1 858351     938            mov     (_left_wheel + 1),dph
01C4 85F052     939            mov     (_left_wheel + 2),b
01C7 F553       940            mov     (_left_wheel + 3),a
01C9 D005       941            pop     ar5
01CB D004       942            pop     ar4
01CD            943   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:218: right_wheel = abs(y_value);
01CD 8C82       944            mov     dpl,r4
01CF 8D83       945            mov     dph,r5
01D1 120000     946            lcall   _abs
01D4 120000     947            lcall   ___sint2fs
01D7 858210     948            mov     _right_wheel,dpl
01DA 858311     949            mov     (_right_wheel + 1),dph
01DD 85F012     950            mov     (_right_wheel + 2),b
01E0 F513       951            mov     (_right_wheel + 3),a
01E2            952   L007005?:
01E2            953   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:223: if (abs(y_value) <= 25)
01E2 85E082     954            mov     dpl,_PWM_manager_PARM_2
01E5 85E183     955            mov     dph,(_PWM_manager_PARM_2 + 1)
01E8 85E2F0     956            mov     b,(_PWM_manager_PARM_2 + 2)
01EB E5E3       957            mov     a,(_PWM_manager_PARM_2 + 3)
01ED 120000     958            lcall   ___fs2sint
01F0 AA82       959            mov     r2,dpl
01F2 AB83       960            mov  r3,dph
01F4 C002       961            push    ar2
01F6 C003       962            push    ar3
01F8 120000     963            lcall   _abs
01FB AC82       964            mov     r4,dpl
01FD AD83       965            mov     r5,dph
01FF D003       966            pop     ar3
0201 D002       967            pop     ar2
0203 C3         968            clr     c
0204 7419       969            mov     a,#0x19
0206 9C         970            subb    a,r4
0207 E4         971            clr     a
0208 6480       972            xrl     a,#0x80
020A 8DF0       973            mov     b,r5
020C 63F080     974            xrl     b,#0x80
020F 95F0       975            subb    a,b
0211 4000       976            jc      L007016?
0213            977   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:224: new_right_wheel = 0.9*right_wheel;
0213 C010       978            push    _right_wheel
0215 C011       979            push    (_right_wheel + 1)
0217 C012       980            push    (_right_wheel + 2)
0219 C013       981            push    (_right_wheel + 3)
021B 906666     982            mov     dptr,#0x6666
021E 75F066     983            mov     b,#0x66
0221 743F       984            mov     a,#0x3F
0223 120000     985            lcall   ___fsmul
0226 8582D0     986            mov     _new_right_wheel,dpl
0229 8583D1     987            mov     (_new_right_wheel + 1),dph
022C 85F0D2     988            mov     (_new_right_wheel + 2),b
022F F5D3       989            mov     (_new_right_wheel + 3),a
0231 E581       990            mov     a,sp
0233 24FC       991            add     a,#0xfc
0235 F581       992            mov     sp,a
0237 22         993            ret
0238            994   L007016?:
0238            995   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:225: else if (abs(y_value) <= 50)
0238 8A82       996            mov     dpl,r2
023A 8B83       997            mov     dph,r3
023C C002       998            push    ar2
023E C003       999            push    ar3
0240 120000    1000            lcall   _abs
0243 AC82      1001            mov     r4,dpl
0245 AD83      1002            mov     r5,dph
0247 D003      1003            pop     ar3
0249 D002      1004            pop     ar2
024B C3        1005            clr     c
024C 7432      1006            mov     a,#0x32
024E 9C        1007            subb    a,r4
024F E4        1008            clr     a
0250 6480      1009            xrl     a,#0x80
0252 8DF0      1010            mov     b,r5
0254 63F080    1011            xrl     b,#0x80
0257 95F0      1012            subb    a,b
0259 4000      1013            jc      L007013?
025B           1014   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:226: new_right_wheel = 0.95*right_wheel;
025B C010      1015            push    _right_wheel
025D C011      1016            push    (_right_wheel + 1)
025F C012      1017            push    (_right_wheel + 2)
0261 C013      1018            push    (_right_wheel + 3)
0263 903333    1019            mov     dptr,#0x3333
0266 75F073    1020            mov     b,#0x73
0269 743F      1021            mov     a,#0x3F
026B 120000    1022            lcall   ___fsmul
026E 8582D0    1023            mov     _new_right_wheel,dpl
0271 8583D1    1024            mov     (_new_right_wheel + 1),dph
0274 85F0D2    1025            mov     (_new_right_wheel + 2),b
0277 F5D3      1026            mov     (_new_right_wheel + 3),a
0279 E581      1027            mov     a,sp
027B 24FC      1028            add     a,#0xfc
027D F581      1029            mov     sp,a
027F 22        1030            ret
0280           1031   L007013?:
0280           1032   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:227: else if (abs(y_value) <= 75)
0280 8A82      1033            mov     dpl,r2
0282 8B83      1034            mov     dph,r3
0284 C002      1035            push    ar2
0286 C003      1036            push    ar3
0288 120000    1037            lcall   _abs
028B AC82      1038            mov     r4,dpl
028D AD83      1039            mov     r5,dph
028F D003      1040            pop     ar3
0291 D002      1041            pop     ar2
0293 C3        1042            clr     c
0294 744B      1043            mov     a,#0x4B
0296 9C        1044            subb    a,r4
0297 E4        1045            clr     a
0298 6480      1046            xrl     a,#0x80
029A 8DF0      1047            mov     b,r5
029C 63F080    1048            xrl     b,#0x80
029F 95F0      1049            subb    a,b
02A1 4000      1050            jc      L007010?
02A3           1051   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:228: new_right_wheel = 0.95*right_wheel;
02A3 C010      1052            push    _right_wheel
02A5 C011      1053            push    (_right_wheel + 1)
02A7 C012      1054            push    (_right_wheel + 2)
02A9 C013      1055            push    (_right_wheel + 3)
02AB 903333    1056            mov     dptr,#0x3333
02AE 75F073    1057            mov     b,#0x73
02B1 743F      1058            mov     a,#0x3F
02B3 120000    1059            lcall   ___fsmul
02B6 8582D0    1060            mov     _new_right_wheel,dpl
02B9 8583D1    1061            mov     (_new_right_wheel + 1),dph
02BC 85F0D2    1062            mov     (_new_right_wheel + 2),b
02BF F5D3      1063            mov     (_new_right_wheel + 3),a
02C1 E581      1064            mov     a,sp
02C3 24FC      1065            add     a,#0xfc
02C5 F581      1066            mov     sp,a
02C7 22        1067            ret
02C8           1068   L007010?:
02C8           1069   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:229: else if (abs(y_value) <= 100)
02C8 8A82      1070            mov     dpl,r2
02CA 8B83      1071            mov     dph,r3
02CC 120000    1072            lcall   _abs
02CF AA82      1073            mov     r2,dpl
02D1 AB83      1074            mov     r3,dph
02D3 C3        1075            clr     c
02D4 7464      1076            mov     a,#0x64
02D6 9A        1077            subb    a,r2
02D7 E4        1078            clr     a
02D8 6480      1079            xrl     a,#0x80
02DA 8BF0      1080            mov     b,r3
02DC 63F080    1081            xrl     b,#0x80
02DF 95F0      1082            subb    a,b
02E1 4000      1083            jc      L007007?
02E3           1084   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:230: new_right_wheel = 0.95*right_wheel;
02E3 C010      1085            push    _right_wheel
02E5 C011      1086            push    (_right_wheel + 1)
02E7 C012      1087            push    (_right_wheel + 2)
02E9 C013      1088            push    (_right_wheel + 3)
02EB 903333    1089            mov     dptr,#0x3333
02EE 75F073    1090            mov     b,#0x73
02F1 743F      1091            mov     a,#0x3F
02F3 120000    1092            lcall   ___fsmul
02F6 8582D0    1093            mov     _new_right_wheel,dpl
02F9 8583D1    1094            mov     (_new_right_wheel + 1),dph
02FC 85F0D2    1095            mov     (_new_right_wheel + 2),b
02FF F5D3      1096            mov     (_new_right_wheel + 3),a
0301 E581      1097            mov     a,sp
0303 24FC      1098            add     a,#0xfc
0305 F581      1099            mov     sp,a
0307 22        1100            ret
0308           1101   L007007?:
0308           1102   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:232: new_right_wheel = 0.95*right_wheel;
0308 C010      1103            push    _right_wheel
030A C011      1104            push    (_right_wheel + 1)
030C C012      1105            push    (_right_wheel + 2)
030E C013      1106            push    (_right_wheel + 3)
0310 903333    1107            mov     dptr,#0x3333
0313 75F073    1108            mov     b,#0x73
0316 743F      1109            mov     a,#0x3F
0318 120000    1110            lcall   ___fsmul
031B 8582D0    1111            mov     _new_right_wheel,dpl
031E 8583D1    1112            mov     (_new_right_wheel + 1),dph
0321 85F0D2    1113            mov     (_new_right_wheel + 2),b
0324 F5D3      1114            mov     (_new_right_wheel + 3),a
0326 E581      1115            mov     a,sp
0328 24FC      1116            add     a,#0xfc
032A F581      1117            mov     sp,a
032C 22        1118            ret
032D           1119   ;------------------------------------------------------------
032D           1120   ;Allocation info for local variables in function 'movement_manager'
032D           1121   ;------------------------------------------------------------
032D           1122   ;prev_PWM_percent_y        Allocated with name '_movement_manager_PARM_2'
032D           1123   ;PWM_percent_y             Allocated to registers r2 r3 r4 r5 
032D           1124   ;------------------------------------------------------------
032D           1125   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:272: void movement_manager(float PWM_percent_y, float prev_PWM_percent_y)
032D           1126   ;        -----------------------------------------
032D           1127   ;         function movement_manager
032D           1128   ;        -----------------------------------------
032D           1129   _movement_manager:
032D AA82      1130            mov     r2,dpl
032F AB83      1131            mov     r3,dph
0331 ACF0      1132            mov     r4,b
0333 FD        1133            mov     r5,a
0334           1134   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:274: if (prev_PWM_percent_y != PWM_percent_y)
0334 C002      1135            push    ar2
0336 C003      1136            push    ar3
0338 C004      1137            push    ar4
033A C005      1138            push    ar5
033C C002      1139            push    ar2
033E C003      1140            push    ar3
0340 C004      1141            push    ar4
0342 C005      1142            push    ar5
0344 859082    1143            mov     dpl,_movement_manager_PARM_2
0347 859183    1144            mov     dph,(_movement_manager_PARM_2 + 1)
034A 8592F0    1145            mov     b,(_movement_manager_PARM_2 + 2)
034D E593      1146            mov     a,(_movement_manager_PARM_2 + 3)
034F 120000    1147            lcall   ___fseq
0352 AE82      1148            mov     r6,dpl
0354 E581      1149            mov     a,sp
0356 24FC      1150            add     a,#0xfc
0358 F581      1151            mov     sp,a
035A D005      1152            pop     ar5
035C D004      1153            pop     ar4
035E D003      1154            pop     ar3
0360 D002      1155            pop     ar2
0362 EE        1156            mov     a,r6
0363           1157   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:276: if (PWM_percent_y >= 0)
0363 7000      1158            jnz     L008006?
0365 C0E0      1159            push    acc
0367 C0E0      1160            push    acc
0369 C0E0      1161            push    acc
036B C0E0      1162            push    acc
036D 8A82      1163            mov     dpl,r2
036F 8B83      1164            mov     dph,r3
0371 8CF0      1165            mov     b,r4
0373 ED        1166            mov     a,r5
0374 120000    1167            lcall   ___fslt
0377 AA82      1168            mov     r2,dpl
0379 E581      1169            mov     a,sp
037B 24FC      1170            add     a,#0xfc
037D F581      1171            mov     sp,a
037F EA        1172            mov     a,r2
0380 7000      1173            jnz     L008002?
0382           1174   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:278: straight();
0382 020000    1175            ljmp    _straight
0385           1176   L008002?:
0385           1177   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:282: backward();
0385 020000    1178            ljmp    _backward
0388           1179   L008006?:
0388 22        1180            ret
0389           1181   ;------------------------------------------------------------
0389           1182   ;Allocation info for local variables in function 'Timer5_ISR'
0389           1183   ;------------------------------------------------------------
0389           1184   ;------------------------------------------------------------
0389           1185   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:288: void Timer5_ISR (void) interrupt INTERRUPT_TIMER5
0389           1186   ;        -----------------------------------------
0389           1187   ;         function Timer5_ISR
0389           1188   ;        -----------------------------------------
0389           1189   _Timer5_ISR:
0389 C090      1190            push    bits
038B C0E0      1191            push    acc
038D C0F0      1192            push    b
038F C082      1193            push    dpl
0391 C083      1194            push    dph
0393 C002      1195            push    (0+2)
0395 C003      1196            push    (0+3)
0397 C004      1197            push    (0+4)
0399 C005      1198            push    (0+5)
039B C006      1199            push    (0+6)
039D C007      1200            push    (0+7)
039F C000      1201            push    (0+0)
03A1 C001      1202            push    (0+1)
03A3 C0D0      1203            push    psw
03A5 75D000    1204            mov     psw,#0x00
03A8           1205   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:290: SFRPAGE=0x10;
03A8 75A710    1206            mov     _SFRPAGE,#0x10
03AB           1207   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:291: TF5H = 0; // Clear Timer5 interrupt flag
03AB C2C7      1208            clr     _TF5H
03AD           1209   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:293: P1_2 = !P1_2;
03AD B292      1210            cpl     _P1_2
03AF           1211   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:299: if (count > 100)
03AF C3        1212            clr     c
03B0 7464      1213            mov     a,#0x64
03B2 9550      1214            subb    a,_count
03B4 E4        1215            clr     a
03B5 6480      1216            xrl     a,#0x80
03B7 8551F0    1217            mov     b,(_count + 1)
03BA 63F080    1218            xrl     b,#0x80
03BD 95F0      1219            subb    a,b
03BF 5000      1220            jnc     L009002?
03C1           1221   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:301: count = 0;
03C1 E4        1222            clr     a
03C2 F550      1223            mov     _count,a
03C4 F551      1224            mov     (_count + 1),a
03C6           1225   L009002?:
03C6           1226   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:303: if (PWM_percent_y >= 0)
03C6 E5D1      1227            mov     a,(_PWM_percent_y + 1)
03C8 20E7C0    1228            jb      acc.7,L009004?
03CB           1229   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:305: LEFT_MOTOR_LHS = (count > left_wheel ) ? 0:1;
03CB 855082    1230            mov     dpl,_count
03CE 855183    1231            mov     dph,(_count + 1)
03D1 120000    1232            lcall   ___sint2fs
03D4 AA82      1233            mov     r2,dpl
03D6 AB83      1234            mov     r3,dph
03D8 ACF0      1235            mov     r4,b
03DA FD        1236            mov     r5,a
03DB C002      1237            push    ar2
03DD C003      1238            push    ar3
03DF C004      1239            push    ar4
03E1 C005      1240            push    ar5
03E3 C050      1241            push    _left_wheel
03E5 C051      1242            push    (_left_wheel + 1)
03E7 C052      1243            push    (_left_wheel + 2)
03E9 C053      1244            push    (_left_wheel + 3)
03EB 8A82      1245            mov     dpl,r2
03ED 8B83      1246            mov     dph,r3
03EF 8CF0      1247            mov     b,r4
03F1 ED        1248            mov     a,r5
03F2 120000    1249            lcall   ___fsgt
03F5 E581      1250            mov     a,sp
03F7 24FC      1251            add     a,#0xfc
03F9 F581      1252            mov     sp,a
03FB D005      1253            pop     ar5
03FD D004      1254            pop     ar4
03FF D003      1255            pop     ar3
0401 D002      1256            pop     ar2
0403 E582      1257            mov     a,dpl
0405 24FF      1258            add     a,#0xff
0407 92F0      1259            mov  _Timer5_ISR_sloc0_1_0,c
0409 B3        1260            cpl     c
040A 92A4      1261            mov     _P2_4,c
040C           1262   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:306: RIGHT_MOTOR_LHS = (count > new_right_wheel) ? 0:1;
040C C0D0      1263            push    _new_right_wheel
040E C0D1      1264            push    (_new_right_wheel + 1)
0410 C0D2      1265            push    (_new_right_wheel + 2)
0412 C0D3      1266            push    (_new_right_wheel + 3)
0414 8A82      1267            mov     dpl,r2
0416 8B83      1268            mov     dph,r3
0418 8CF0      1269            mov     b,r4
041A ED        1270            mov     a,r5
041B 120000    1271            lcall   ___fsgt
041E E581      1272            mov     a,sp
0420 24FC      1273            add     a,#0xfc
0422 F581      1274            mov     sp,a
0424 E582      1275            mov     a,dpl
0426 24FF      1276            add     a,#0xff
0428 92F0      1277            mov  _Timer5_ISR_sloc0_1_0,c
042A B3        1278            cpl     c
042B 92A2      1279            mov     _P2_2,c
042D 8000      1280            sjmp    L009005?
042F           1281   L009004?:
042F           1282   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:310: LEFT_MOTOR_LHS = (count > left_wheel) ? 1:0;
042F 855082    1283            mov     dpl,_count
0432 855183    1284            mov     dph,(_count + 1)
0435 120000    1285            lcall   ___sint2fs
0438 AA82      1286            mov     r2,dpl
043A AB83      1287            mov     r3,dph
043C ACF0      1288            mov     r4,b
043E FD        1289            mov     r5,a
043F C002      1290            push    ar2
0441 C003      1291            push    ar3
0443 C004      1292            push    ar4
0445 C005      1293            push    ar5
0447 C050      1294            push    _left_wheel
0449 C051      1295            push    (_left_wheel + 1)
044B C052      1296            push    (_left_wheel + 2)
044D C053      1297            push    (_left_wheel + 3)
044F 8A82      1298            mov     dpl,r2
0451 8B83      1299            mov     dph,r3
0453 8CF0      1300            mov     b,r4
0455 ED        1301            mov     a,r5
0456 120000    1302            lcall   ___fsgt
0459 E582      1303            mov     a,dpl
045B 24FF      1304            add     a,#0xff
045D 92A4      1305            mov     _P2_4,c
045F E581      1306            mov     a,sp
0461 24FC      1307            add     a,#0xfc
0463 F581      1308            mov     sp,a
0465 D005      1309            pop     ar5
0467 D004      1310            pop     ar4
0469 D003      1311            pop     ar3
046B D002      1312            pop     ar2
046D           1313   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:311: RIGHT_MOTOR_LHS = (count > new_right_wheel) ? 1:0;
046D C0D0      1314            push    _new_right_wheel
046F C0D1      1315            push    (_new_right_wheel + 1)
0471 C0D2      1316            push    (_new_right_wheel + 2)
0473 C0D3      1317            push    (_new_right_wheel + 3)
0475 8A82      1318            mov     dpl,r2
0477 8B83      1319            mov     dph,r3
0479 8CF0      1320            mov     b,r4
047B ED        1321            mov     a,r5
047C 120000    1322            lcall   ___fsgt
047F E582      1323            mov     a,dpl
0481 24FF      1324            add     a,#0xff
0483 92A2      1325            mov     _P2_2,c
0485 E581      1326            mov     a,sp
0487 24FC      1327            add     a,#0xfc
0489 F581      1328            mov     sp,a
048B           1329   L009005?:
048B           1330   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:315: count++;
048B 0550      1331            inc     _count
048D E4        1332            clr     a
048E B55080    1333            cjne    a,_count,L009012?
0491 0551      1334            inc     (_count + 1)
0493           1335   L009012?:
0493 D0D0      1336            pop     psw
0495 D001      1337            pop     (0+1)
0497 D000      1338            pop     (0+0)
0499 D007      1339            pop     (0+7)
049B D006      1340            pop     (0+6)
049D D005      1341            pop     (0+5)
049F D004      1342            pop     (0+4)
04A1 D003      1343            pop     (0+3)
04A3 D002      1344            pop     (0+2)
04A5 D083      1345            pop     dph
04A7 D082      1346            pop     dpl
04A9 D0F0      1347            pop     b
04AB D0E0      1348            pop     acc
04AD D090      1349            pop     bits
04AF 32        1350            reti
04B0           1351   ;------------------------------------------------------------
04B0           1352   ;Allocation info for local variables in function 'main'
04B0           1353   ;------------------------------------------------------------
04B0           1354   ;------------------------------------------------------------
04B0           1355   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:318: void main (void)
04B0           1356   ;        -----------------------------------------
04B0           1357   ;         function main
04B0           1358   ;        -----------------------------------------
04B0           1359   _main:
04B0           1360   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:325: TIMER5Init();
04B0 120000    1361            lcall   _TIMER5Init
04B3           1362   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:326: straight();
04B3 120000    1363            lcall   _straight
04B6           1364   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:327: while(1){
04B6           1365   L010022?:
04B6           1366   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:328: movement_manager(PWM_percent_y, prev_PWM_percent_y);
04B6 85D082    1367            mov     dpl,_PWM_percent_y
04B9 85D183    1368            mov     dph,(_PWM_percent_y + 1)
04BC 120000    1369            lcall   ___sint2fs
04BF AA82      1370            mov     r2,dpl
04C1 AB83      1371            mov     r3,dph
04C3 ACF0      1372            mov     r4,b
04C5 FD        1373            mov     r5,a
04C6 853082    1374            mov     dpl,_prev_PWM_percent_y
04C9 853183    1375            mov     dph,(_prev_PWM_percent_y + 1)
04CC C002      1376            push    ar2
04CE C003      1377            push    ar3
04D0 C004      1378            push    ar4
04D2 C005      1379            push    ar5
04D4 120000    1380            lcall   ___sint2fs
04D7 858290    1381            mov     _movement_manager_PARM_2,dpl
04DA 858391    1382            mov     (_movement_manager_PARM_2 + 1),dph
04DD 85F092    1383            mov     (_movement_manager_PARM_2 + 2),b
04E0 F593      1384            mov     (_movement_manager_PARM_2 + 3),a
04E2 D005      1385            pop     ar5
04E4 D004      1386            pop     ar4
04E6 D003      1387            pop     ar3
04E8 D002      1388            pop     ar2
04EA 8A82      1389            mov     dpl,r2
04EC 8B83      1390            mov     dph,r3
04EE 8CF0      1391            mov     b,r4
04F0 ED        1392            mov     a,r5
04F1 120000    1393            lcall   _movement_manager
04F4           1394   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:329: PWM_manager(PWM_percent_x, PWM_percent_y);
04F4 859082    1395            mov     dpl,_PWM_percent_x
04F7 859183    1396            mov     dph,(_PWM_percent_x + 1)
04FA 120000    1397            lcall   ___sint2fs
04FD AA82      1398            mov     r2,dpl
04FF AB83      1399            mov     r3,dph
0501 ACF0      1400            mov     r4,b
0503 FD        1401            mov     r5,a
0504 85D082    1402            mov     dpl,_PWM_percent_y
0507 85D183    1403            mov     dph,(_PWM_percent_y + 1)
050A C002      1404            push    ar2
050C C003      1405            push    ar3
050E C004      1406            push    ar4
0510 C005      1407            push    ar5
0512 120000    1408            lcall   ___sint2fs
0515 8582E0    1409            mov     _PWM_manager_PARM_2,dpl
0518 8583E1    1410            mov     (_PWM_manager_PARM_2 + 1),dph
051B 85F0E2    1411            mov     (_PWM_manager_PARM_2 + 2),b
051E F5E3      1412            mov     (_PWM_manager_PARM_2 + 3),a
0520 D005      1413            pop     ar5
0522 D004      1414            pop     ar4
0524 D003      1415            pop     ar3
0526 D002      1416            pop     ar2
0528 8A82      1417            mov     dpl,r2
052A 8B83      1418            mov     dph,r3
052C 8CF0      1419            mov     b,r4
052E ED        1420            mov     a,r5
052F 120000    1421            lcall   _PWM_manager
0532           1422   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:330: prev_PWM_percent_x = PWM_percent_x;
0532 859080    1423            mov     _prev_PWM_percent_x,_PWM_percent_x
0535 859181    1424            mov     (_prev_PWM_percent_x + 1),(_PWM_percent_x + 1)
0538           1425   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:331: prev_PWM_percent_y = PWM_percent_y;
0538 85D030    1426            mov     _prev_PWM_percent_y,_PWM_percent_y
053B 85D131    1427            mov     (_prev_PWM_percent_y + 1),(_PWM_percent_y + 1)
053E           1428   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:335: if (P2_6 == 0)
053E 20A600    1429            jb      _P2_6,L010005?
0541           1430   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:337: PWM_percent_x += 10;
0541 740A      1431            mov     a,#0x0A
0543 2590      1432            add     a,_PWM_percent_x
0545 F590      1433            mov     _PWM_percent_x,a
0547 E4        1434            clr     a
0548 3591      1435            addc    a,(_PWM_percent_x + 1)
054A F591      1436            mov     (_PWM_percent_x + 1),a
054C           1437   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:338: while(P2_6 == 0);
054C           1438   L010001?:
054C 30A640    1439            jnb     _P2_6,L010001?
054F           1440   L010005?:
054F           1441   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:340: if (P2_5 == 0)
054F 20A580    1442            jb      _P2_5,L010010?
0552           1443   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:342: PWM_percent_x -= 10;
0552 E590      1444            mov     a,_PWM_percent_x
0554 24F6      1445            add     a,#0xf6
0556 F590      1446            mov     _PWM_percent_x,a
0558 E591      1447            mov     a,(_PWM_percent_x + 1)
055A 34FF      1448            addc    a,#0xff
055C F591      1449            mov     (_PWM_percent_x + 1),a
055E           1450   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:343: while(P2_5 == 0);
055E           1451   L010006?:
055E 30A5C0    1452            jnb     _P2_5,L010006?
0561           1453   L010010?:
0561           1454   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:345: if (P3_2 == 0)
0561 20B200    1455            jb      _P3_2,L010015?
0564           1456   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:347: PWM_percent_y -= 10;
0564 E5D0      1457            mov     a,_PWM_percent_y
0566 24F6      1458            add     a,#0xf6
0568 F5D0      1459            mov     _PWM_percent_y,a
056A E5D1      1460            mov     a,(_PWM_percent_y + 1)
056C 34FF      1461            addc    a,#0xff
056E F5D1      1462            mov     (_PWM_percent_y + 1),a
0570           1463   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:348: while(P3_2 == 0);
0570           1464   L010011?:
0570 30B240    1465            jnb     _P3_2,L010011?
0573           1466   L010015?:
0573           1467   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:350: if (P3_7 == 0)
0573 20B780    1468            jb      _P3_7,L010020?
0576           1469   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:352: PWM_percent_y += 10;
0576 740A      1470            mov     a,#0x0A
0578 25D0      1471            add     a,_PWM_percent_y
057A F5D0      1472            mov     _PWM_percent_y,a
057C E4        1473            clr     a
057D 35D1      1474            addc    a,(_PWM_percent_y + 1)
057F F5D1      1475            mov     (_PWM_percent_y + 1),a
0581           1476   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:353: while(P3_7 == 0);
0581           1477   L010016?:
0581 30B7C0    1478            jnb     _P3_7,L010016?
0584           1479   L010020?:
0584           1480   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:359: printf("Left Wheel: %f\n", left_wheel);
0584 C050      1481            push    _left_wheel
0586 C051      1482            push    (_left_wheel + 1)
0588 C052      1483            push    (_left_wheel + 2)
058A C053      1484            push    (_left_wheel + 3)
058C 7400      1485            mov     a,#__str_0
058E C0E0      1486            push    acc
0590 74C0      1487            mov     a,#(__str_0 >> 8)
0592 C0E0      1488            push    acc
0594 7480      1489            mov     a,#0x80
0596 C0E0      1490            push    acc
0598 120000    1491            lcall   _printf
059B E581      1492            mov     a,sp
059D 24F9      1493            add     a,#0xf9
059F F581      1494            mov     sp,a
05A1           1495   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:360: printf("Right Wheel: %f\n", right_wheel);
05A1 C010      1496            push    _right_wheel
05A3 C011      1497            push    (_right_wheel + 1)
05A5 C012      1498            push    (_right_wheel + 2)
05A7 C013      1499            push    (_right_wheel + 3)
05A9 7480      1500            mov     a,#__str_1
05AB C0E0      1501            push    acc
05AD 74C0      1502            mov     a,#(__str_1 >> 8)
05AF C0E0      1503            push    acc
05B1 7480      1504            mov     a,#0x80
05B3 C0E0      1505            push    acc
05B5 120000    1506            lcall   _printf
05B8 E581      1507            mov     a,sp
05BA 24F9      1508            add     a,#0xf9
05BC F581      1509            mov     sp,a
05BE           1510   ;        C:\UBC\SECOND YEAR\ELEC 291\Project 2\ELEC291Project2\EFM8\Robot\movement_new_new.c:361: printf("NEW LEFT WHEEL: %f\n", new_right_wheel);
05BE C0D0      1511            push    _new_right_wheel
05C0 C0D1      1512            push    (_new_right_wheel + 1)
05C2 C0D2      1513            push    (_new_right_wheel + 2)
05C4 C0D3      1514            push    (_new_right_wheel + 3)
05C6 74C0      1515            mov     a,#__str_2
05C8 C0E0      1516            push    acc
05CA 74C0      1517            mov     a,#(__str_2 >> 8)
05CC C0E0      1518            push    acc
05CE 7480      1519            mov     a,#0x80
05D0 C0E0      1520            push    acc
05D2 120000    1521            lcall   _printf
05D5 E581      1522            mov     a,sp
05D7 24F9      1523            add     a,#0xf9
05D9 F581      1524            mov     sp,a
05DB 020000    1525            ljmp    L010022?
05DE           1526            rseg R_CSEG
05DE           1527   
0000           1528            rseg R_XINIT
0000           1529   
0000           1530            rseg R_CONST
0000           1531   __str_0:
0000 4C656674  1532            db 'Left Wheel: %f'
     20576865
     656C3A20
     2566
000E 0A        1533            db 0x0A
000F 00        1534            db 0x00
0010           1535   __str_1:
0010 52696768  1536            db 'Right Wheel: %f'
     74205768
     65656C3A
     202566
001F 0A        1537            db 0x0A
0020 00        1538            db 0x00
0021           1539   __str_2:
0021 4E455720  1540            db 'NEW LEFT WHEEL: %f'
     4C454654
     20574845
     454C3A20
     2566
0033 0A        1541            db 0x0A
0034 00        1542            db 0x00
0035           1543   
0096           1544            CSEG
0096           1545   
0096           1546   end
