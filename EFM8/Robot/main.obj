<MODULE>
main
</MODULE>

<OPTC51>
--model-small
</OPTC51>

<SEGMENTS>
R_GSINIT,code,0000,NO
R_BSEG,bit,0000,NO
R_XSEG,xdata,0000,NO
BIT_BANK,data,0000,OV
R_CONST,code,0010,NO
rbank0,data,0000,OV
R_PSEG,xdata,0000,NO
R_DINIT,code,0000,NO
R_DSEG,data,0008,NO
R_OSEG,data,0000,OV
R_IXSEG,xdata,0000,NO
R_ISEG,idata,0000,NO
R_HOME,code,0000,NO
R_XINIT,code,0000,NO
R_CSEG,code,0125,NO
</SEGMENTS>

<LOCALS>
L002004?,R_CSEG,0029,0000
L002001?,R_CSEG,001E,0000
L004002?,R_CSEG,00E7,0000
__str_0,R_CONST,0000,0000
</LOCALS>

<PUBLICS>
_main,R_CSEG,00BA,0000
__c51_external_startup,R_CSEG,0000,0000
_UART1_Init,R_CSEG,0059,0000
_x,R_DSEG,0000,0004
_y,R_DSEG,0004,0004
</PUBLICS>

<EXTERNALS>
__divulong,any,0000,0000
_TX_I,any,0000,0000
_TIMER4_Init,any,0000,0000
_JDY40Init,any,0000,0000
_movement_loop_PARM_2,any,0000,0000
_RX_XY,any,0000,0000
_printf,any,0000,0000
__divulong_PARM_2,any,0000,0000
_movement_init,any,0000,0000
_return_x,any,0000,0000
_return_y,any,0000,0000
_movement_loop,any,0000,0000
_crt0,any,0000,0000
_waitms,any,0000,0000
</EXTERNALS>

<CODE AT 0000>
</CODE>

<CODE R_HOME>
</CODE>

<CODE R_GSINIT>
</CODE>

<CODE R_CSEG>
</CODE>

<CODE AT 0000>
02 addr16(_crt0;)  
</CODE>

<CODE R_HOME>
</CODE>

<CODE R_GSINIT>
</CODE>

<CODE R_GSINIT>
</CODE>

<CODE R_DINIT>
</CODE>

<CODE R_CSEG>
75 A7 00
75 97 DE
75 97 AD
75 FF 80
75 EF 06
75 A7 10
75 C1 20
75 A7 00
75 A9 00
75 A9 00
E5 A9
30 E7 rel3(L002001?;)
75 A9 03
75 A9 03
E5 A9
30 E7 rel3(L002004?;)
43 A4 11
43 A6 01
75 E1 01
75 E2 00
75 E3 41
75 98 10
75 8D E6
85 8D 8B
53 89 0F
43 89 20
D2 8E
D2 99
43 A5 04
D2 AF
75 82 00
22
AA 82
AB 83
AC F0
FD
75 A7 20
75 93 0C
75 C8 10
75 94 00
8A data8(__divulong_PARM_2;)
8B data8(__divulong_PARM_2;0x0001;+;)
8C data8(__divulong_PARM_2;0x0002;+;)
8D data8(__divulong_PARM_2;0x0003;+;)
90 A2 00
75 F0 4A
74 04
12 addr16(__divulong;)  
AA 82
AB 83
AC F0
FD
75 data8(__divulong_PARM_2;) 18
E4
F5 data8(__divulong_PARM_2;0x0001;+;)
F5 data8(__divulong_PARM_2;0x0002;+;)
F5 data8(__divulong_PARM_2;0x0003;+;)
8A 82
8B 83
8C F0
ED
12 addr16(__divulong;)  
AA 82
AB 83
AC F0
FD
E4
C3
9A
FA
E4
9B
FB
74 01
9C
E4
9D
8A 95
8B 96
D2 C9
43 94 40
75 A7 00
22
90 01 F4
12 addr16(_waitms;)  
74 data8(__str_0;)
C0 E0
74 data8(__str_0;0x0008;>>;)
C0 E0
74 80
C0 E0
12 addr16(_printf;)  
15 81
15 81
15 81
90 25 80
E4
F5 F0
12 addr16(_UART1_Init;)  
12 addr16(_JDY40Init;)  
12 addr16(_TIMER4_Init;)  
12 addr16(_movement_init;)  
12 addr16(_TX_I;)  
12 addr16(_RX_XY;)  
12 addr16(_return_x;)  
85 82 data8(_x;)
85 83 data8(_x;0x0001;+;)
85 F0 data8(_x;0x0002;+;)
F5 data8(_x;0x0003;+;)
12 addr16(_return_y;)  
85 82 data8(_y;)
85 83 data8(_y;0x0001;+;)
85 F0 data8(_y;0x0002;+;)
F5 data8(_y;0x0003;+;)
85 data8(_y;) data8(_movement_loop_PARM_2;)
85 data8(_y;0x0001;+;) data8(_movement_loop_PARM_2;0x0001;+;)
85 data8(_y;0x0002;+;) data8(_movement_loop_PARM_2;0x0002;+;)
85 data8(_y;0x0003;+;) data8(_movement_loop_PARM_2;0x0003;+;)
85 data8(_x;) 82
85 data8(_x;0x0001;+;) 83
85 data8(_x;0x0002;+;) F0
E5 data8(_x;0x0003;+;)
12 addr16(_movement_loop;)  
80 rel2(L004002?;)
</CODE>

<CODE R_CSEG>
</CODE>

<CODE R_XINIT>
</CODE>

<CODE R_CONST>
0D
0A
4A 44 59 2D 34 30 20 74 65 73 74 
0D
0A
00
</CODE>

<CODE AT 0003>
</CODE>
