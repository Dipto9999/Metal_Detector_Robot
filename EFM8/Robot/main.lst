0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Mon Mar 18 17:07:02 2024
0000              5   ;--------------------------------------------------------
                  5   $name main
                  6   $optc51 --model-small
0000              8            R_DSEG    segment data
0000              9            R_CSEG    segment code
0000             10            R_BSEG    segment bit
0000             11            R_XSEG    segment xdata
0000             12            R_PSEG    segment xdata
0000             13            R_ISEG    segment idata
0000             14            R_OSEG    segment data overlay
0000             15            BIT_BANK  segment data overlay
0000             16            R_HOME    segment code
0000             17            R_GSINIT  segment code
0000             18            R_IXSEG   segment xdata
0000             19            R_CONST   segment code
0000             20            R_XINIT   segment code
0000             21            R_DINIT   segment code
0000             22   
0000             23   ;--------------------------------------------------------
0000             24   ; Public variables in this module
0000             25   ;--------------------------------------------------------
0000             26            public _main
0000             27            public _calculate_freq_Hz
0000             28            public _calculate_period_s
0000             29            public _TIMER0_Init
0000             30            public _Serial_Init
0000             31            public _waitms
0000             32            public _Timer3us
0000             33            public __c51_external_startup
0000             34            public _calculate_period_s_PARM_3
0000             35            public _calculate_period_s_PARM_2
0000             36            public _overflow_count
0000             37   ;--------------------------------------------------------
0000             38   ; Special Function Registers
0000             39   ;--------------------------------------------------------
0000             40   _ACC            DATA 0xe0
0000             41   _ADC0ASAH       DATA 0xb6
0000             42   _ADC0ASAL       DATA 0xb5
0000             43   _ADC0ASCF       DATA 0xa1
0000             44   _ADC0ASCT       DATA 0xc7
0000             45   _ADC0CF0        DATA 0xbc
0000             46   _ADC0CF1        DATA 0xb9
0000             47   _ADC0CF2        DATA 0xdf
0000             48   _ADC0CN0        DATA 0xe8
0000             49   _ADC0CN1        DATA 0xb2
0000             50   _ADC0CN2        DATA 0xb3
0000             51   _ADC0GTH        DATA 0xc4
0000             52   _ADC0GTL        DATA 0xc3
0000             53   _ADC0H          DATA 0xbe
0000             54   _ADC0L          DATA 0xbd
0000             55   _ADC0LTH        DATA 0xc6
0000             56   _ADC0LTL        DATA 0xc5
0000             57   _ADC0MX         DATA 0xbb
0000             58   _B              DATA 0xf0
0000             59   _CKCON0         DATA 0x8e
0000             60   _CKCON1         DATA 0xa6
0000             61   _CLEN0          DATA 0xc6
0000             62   _CLIE0          DATA 0xc7
0000             63   _CLIF0          DATA 0xe8
0000             64   _CLKSEL         DATA 0xa9
0000             65   _CLOUT0         DATA 0xd1
0000             66   _CLU0CF         DATA 0xb1
0000             67   _CLU0FN         DATA 0xaf
0000             68   _CLU0MX         DATA 0x84
0000             69   _CLU1CF         DATA 0xb3
0000             70   _CLU1FN         DATA 0xb2
0000             71   _CLU1MX         DATA 0x85
0000             72   _CLU2CF         DATA 0xb6
0000             73   _CLU2FN         DATA 0xb5
0000             74   _CLU2MX         DATA 0x91
0000             75   _CLU3CF         DATA 0xbf
0000             76   _CLU3FN         DATA 0xbe
0000             77   _CLU3MX         DATA 0xae
0000             78   _CMP0CN0        DATA 0x9b
0000             79   _CMP0CN1        DATA 0x99
0000             80   _CMP0MD         DATA 0x9d
0000             81   _CMP0MX         DATA 0x9f
0000             82   _CMP1CN0        DATA 0xbf
0000             83   _CMP1CN1        DATA 0xac
0000             84   _CMP1MD         DATA 0xab
0000             85   _CMP1MX         DATA 0xaa
0000             86   _CRC0CN0        DATA 0xce
0000             87   _CRC0CN1        DATA 0x86
0000             88   _CRC0CNT        DATA 0xd3
0000             89   _CRC0DAT        DATA 0xcb
0000             90   _CRC0FLIP       DATA 0xcf
0000             91   _CRC0IN         DATA 0xca
0000             92   _CRC0ST         DATA 0xd2
0000             93   _DAC0CF0        DATA 0x91
0000             94   _DAC0CF1        DATA 0x92
0000             95   _DAC0H          DATA 0x85
0000             96   _DAC0L          DATA 0x84
0000             97   _DAC1CF0        DATA 0x93
0000             98   _DAC1CF1        DATA 0x94
0000             99   _DAC1H          DATA 0x8a
0000            100   _DAC1L          DATA 0x89
0000            101   _DAC2CF0        DATA 0x95
0000            102   _DAC2CF1        DATA 0x96
0000            103   _DAC2H          DATA 0x8c
0000            104   _DAC2L          DATA 0x8b
0000            105   _DAC3CF0        DATA 0x9a
0000            106   _DAC3CF1        DATA 0x9c
0000            107   _DAC3H          DATA 0x8e
0000            108   _DAC3L          DATA 0x8d
0000            109   _DACGCF0        DATA 0x88
0000            110   _DACGCF1        DATA 0x98
0000            111   _DACGCF2        DATA 0xa2
0000            112   _DERIVID        DATA 0xad
0000            113   _DEVICEID       DATA 0xb5
0000            114   _DPH            DATA 0x83
0000            115   _DPL            DATA 0x82
0000            116   _EIE1           DATA 0xe6
0000            117   _EIE2           DATA 0xf3
0000            118   _EIP1           DATA 0xbb
0000            119   _EIP1H          DATA 0xee
0000            120   _EIP2           DATA 0xed
0000            121   _EIP2H          DATA 0xf6
0000            122   _EMI0CN         DATA 0xe7
0000            123   _FLKEY          DATA 0xb7
0000            124   _HFO0CAL        DATA 0xc7
0000            125   _HFO1CAL        DATA 0xd6
0000            126   _HFOCN          DATA 0xef
0000            127   _I2C0ADM        DATA 0xff
0000            128   _I2C0CN0        DATA 0xba
0000            129   _I2C0DIN        DATA 0xbc
0000            130   _I2C0DOUT       DATA 0xbb
0000            131   _I2C0FCN0       DATA 0xad
0000            132   _I2C0FCN1       DATA 0xab
0000            133   _I2C0FCT        DATA 0xf5
0000            134   _I2C0SLAD       DATA 0xbd
0000            135   _I2C0STAT       DATA 0xb9
0000            136   _IE             DATA 0xa8
0000            137   _IP             DATA 0xb8
0000            138   _IPH            DATA 0xf2
0000            139   _IT01CF         DATA 0xe4
0000            140   _LFO0CN         DATA 0xb1
0000            141   _P0             DATA 0x80
0000            142   _P0MASK         DATA 0xfe
0000            143   _P0MAT          DATA 0xfd
0000            144   _P0MDIN         DATA 0xf1
0000            145   _P0MDOUT        DATA 0xa4
0000            146   _P0SKIP         DATA 0xd4
0000            147   _P1             DATA 0x90
0000            148   _P1MASK         DATA 0xee
0000            149   _P1MAT          DATA 0xed
0000            150   _P1MDIN         DATA 0xf2
0000            151   _P1MDOUT        DATA 0xa5
0000            152   _P1SKIP         DATA 0xd5
0000            153   _P2             DATA 0xa0
0000            154   _P2MASK         DATA 0xfc
0000            155   _P2MAT          DATA 0xfb
0000            156   _P2MDIN         DATA 0xf3
0000            157   _P2MDOUT        DATA 0xa6
0000            158   _P2SKIP         DATA 0xcc
0000            159   _P3             DATA 0xb0
0000            160   _P3MDIN         DATA 0xf4
0000            161   _P3MDOUT        DATA 0x9c
0000            162   _PCA0CENT       DATA 0x9e
0000            163   _PCA0CLR        DATA 0x9c
0000            164   _PCA0CN0        DATA 0xd8
0000            165   _PCA0CPH0       DATA 0xfc
0000            166   _PCA0CPH1       DATA 0xea
0000            167   _PCA0CPH2       DATA 0xec
0000            168   _PCA0CPH3       DATA 0xf5
0000            169   _PCA0CPH4       DATA 0x85
0000            170   _PCA0CPH5       DATA 0xde
0000            171   _PCA0CPL0       DATA 0xfb
0000            172   _PCA0CPL1       DATA 0xe9
0000            173   _PCA0CPL2       DATA 0xeb
0000            174   _PCA0CPL3       DATA 0xf4
0000            175   _PCA0CPL4       DATA 0x84
0000            176   _PCA0CPL5       DATA 0xdd
0000            177   _PCA0CPM0       DATA 0xda
0000            178   _PCA0CPM1       DATA 0xdb
0000            179   _PCA0CPM2       DATA 0xdc
0000            180   _PCA0CPM3       DATA 0xae
0000            181   _PCA0CPM4       DATA 0xaf
0000            182   _PCA0CPM5       DATA 0xcc
0000            183   _PCA0H          DATA 0xfa
0000            184   _PCA0L          DATA 0xf9
0000            185   _PCA0MD         DATA 0xd9
0000            186   _PCA0POL        DATA 0x96
0000            187   _PCA0PWM        DATA 0xf7
0000            188   _PCON0          DATA 0x87
0000            189   _PCON1          DATA 0xcd
0000            190   _PFE0CN         DATA 0xc1
0000            191   _PRTDRV         DATA 0xf6
0000            192   _PSCTL          DATA 0x8f
0000            193   _PSTAT0         DATA 0xaa
0000            194   _PSW            DATA 0xd0
0000            195   _REF0CN         DATA 0xd1
0000            196   _REG0CN         DATA 0xc9
0000            197   _REVID          DATA 0xb6
0000            198   _RSTSRC         DATA 0xef
0000            199   _SBCON1         DATA 0x94
0000            200   _SBRLH1         DATA 0x96
0000            201   _SBRLL1         DATA 0x95
0000            202   _SBUF           DATA 0x99
0000            203   _SBUF0          DATA 0x99
0000            204   _SBUF1          DATA 0x92
0000            205   _SCON           DATA 0x98
0000            206   _SCON0          DATA 0x98
0000            207   _SCON1          DATA 0xc8
0000            208   _SFRPAGE        DATA 0xa7
0000            209   _SFRPGCN        DATA 0xbc
0000            210   _SFRSTACK       DATA 0xd7
0000            211   _SMB0ADM        DATA 0xd6
0000            212   _SMB0ADR        DATA 0xd7
0000            213   _SMB0CF         DATA 0xc1
0000            214   _SMB0CN0        DATA 0xc0
0000            215   _SMB0DAT        DATA 0xc2
0000            216   _SMB0FCN0       DATA 0xc3
0000            217   _SMB0FCN1       DATA 0xc4
0000            218   _SMB0FCT        DATA 0xef
0000            219   _SMB0RXLN       DATA 0xc5
0000            220   _SMB0TC         DATA 0xac
0000            221   _SMOD1          DATA 0x93
0000            222   _SP             DATA 0x81
0000            223   _SPI0CFG        DATA 0xa1
0000            224   _SPI0CKR        DATA 0xa2
0000            225   _SPI0CN0        DATA 0xf8
0000            226   _SPI0DAT        DATA 0xa3
0000            227   _SPI0FCN0       DATA 0x9a
0000            228   _SPI0FCN1       DATA 0x9b
0000            229   _SPI0FCT        DATA 0xf7
0000            230   _SPI0PCF        DATA 0xdf
0000            231   _TCON           DATA 0x88
0000            232   _TH0            DATA 0x8c
0000            233   _TH1            DATA 0x8d
0000            234   _TL0            DATA 0x8a
0000            235   _TL1            DATA 0x8b
0000            236   _TMOD           DATA 0x89
0000            237   _TMR2CN0        DATA 0xc8
0000            238   _TMR2CN1        DATA 0xfd
0000            239   _TMR2H          DATA 0xcf
0000            240   _TMR2L          DATA 0xce
0000            241   _TMR2RLH        DATA 0xcb
0000            242   _TMR2RLL        DATA 0xca
0000            243   _TMR3CN0        DATA 0x91
0000            244   _TMR3CN1        DATA 0xfe
0000            245   _TMR3H          DATA 0x95
0000            246   _TMR3L          DATA 0x94
0000            247   _TMR3RLH        DATA 0x93
0000            248   _TMR3RLL        DATA 0x92
0000            249   _TMR4CN0        DATA 0x98
0000            250   _TMR4CN1        DATA 0xff
0000            251   _TMR4H          DATA 0xa5
0000            252   _TMR4L          DATA 0xa4
0000            253   _TMR4RLH        DATA 0xa3
0000            254   _TMR4RLL        DATA 0xa2
0000            255   _TMR5CN0        DATA 0xc0
0000            256   _TMR5CN1        DATA 0xf1
0000            257   _TMR5H          DATA 0xd5
0000            258   _TMR5L          DATA 0xd4
0000            259   _TMR5RLH        DATA 0xd3
0000            260   _TMR5RLL        DATA 0xd2
0000            261   _UART0PCF       DATA 0xd9
0000            262   _UART1FCN0      DATA 0x9d
0000            263   _UART1FCN1      DATA 0xd8
0000            264   _UART1FCT       DATA 0xfa
0000            265   _UART1LIN       DATA 0x9e
0000            266   _UART1PCF       DATA 0xda
0000            267   _VDM0CN         DATA 0xff
0000            268   _WDTCN          DATA 0x97
0000            269   _XBR0           DATA 0xe1
0000            270   _XBR1           DATA 0xe2
0000            271   _XBR2           DATA 0xe3
0000            272   _XOSC0CN        DATA 0x86
0000            273   _DPTR           DATA 0x8382
0000            274   _TMR2RL         DATA 0xcbca
0000            275   _TMR3RL         DATA 0x9392
0000            276   _TMR4RL         DATA 0xa3a2
0000            277   _TMR5RL         DATA 0xd3d2
0000            278   _TMR0           DATA 0x8c8a
0000            279   _TMR1           DATA 0x8d8b
0000            280   _TMR2           DATA 0xcfce
0000            281   _TMR3           DATA 0x9594
0000            282   _TMR4           DATA 0xa5a4
0000            283   _TMR5           DATA 0xd5d4
0000            284   _SBRL1          DATA 0x9695
0000            285   _PCA0           DATA 0xfaf9
0000            286   _PCA0CP0        DATA 0xfcfb
0000            287   _PCA0CP1        DATA 0xeae9
0000            288   _PCA0CP2        DATA 0xeceb
0000            289   _PCA0CP3        DATA 0xf5f4
0000            290   _PCA0CP4        DATA 0x8584
0000            291   _PCA0CP5        DATA 0xdedd
0000            292   _ADC0ASA        DATA 0xb6b5
0000            293   _ADC0GT         DATA 0xc4c3
0000            294   _ADC0           DATA 0xbebd
0000            295   _ADC0LT         DATA 0xc6c5
0000            296   _DAC0           DATA 0x8584
0000            297   _DAC1           DATA 0x8a89
0000            298   _DAC2           DATA 0x8c8b
0000            299   _DAC3           DATA 0x8e8d
0000            300   ;--------------------------------------------------------
0000            301   ; special function bits
0000            302   ;--------------------------------------------------------
0000            303   _ACC_0          BIT 0xe0
0000            304   _ACC_1          BIT 0xe1
0000            305   _ACC_2          BIT 0xe2
0000            306   _ACC_3          BIT 0xe3
0000            307   _ACC_4          BIT 0xe4
0000            308   _ACC_5          BIT 0xe5
0000            309   _ACC_6          BIT 0xe6
0000            310   _ACC_7          BIT 0xe7
0000            311   _TEMPE          BIT 0xe8
0000            312   _ADGN0          BIT 0xe9
0000            313   _ADGN1          BIT 0xea
0000            314   _ADWINT         BIT 0xeb
0000            315   _ADBUSY         BIT 0xec
0000            316   _ADINT          BIT 0xed
0000            317   _IPOEN          BIT 0xee
0000            318   _ADEN           BIT 0xef
0000            319   _B_0            BIT 0xf0
0000            320   _B_1            BIT 0xf1
0000            321   _B_2            BIT 0xf2
0000            322   _B_3            BIT 0xf3
0000            323   _B_4            BIT 0xf4
0000            324   _B_5            BIT 0xf5
0000            325   _B_6            BIT 0xf6
0000            326   _B_7            BIT 0xf7
0000            327   _C0FIF          BIT 0xe8
0000            328   _C0RIF          BIT 0xe9
0000            329   _C1FIF          BIT 0xea
0000            330   _C1RIF          BIT 0xeb
0000            331   _C2FIF          BIT 0xec
0000            332   _C2RIF          BIT 0xed
0000            333   _C3FIF          BIT 0xee
0000            334   _C3RIF          BIT 0xef
0000            335   _D1SRC0         BIT 0x88
0000            336   _D1SRC1         BIT 0x89
0000            337   _D1AMEN         BIT 0x8a
0000            338   _D01REFSL       BIT 0x8b
0000            339   _D3SRC0         BIT 0x8c
0000            340   _D3SRC1         BIT 0x8d
0000            341   _D3AMEN         BIT 0x8e
0000            342   _D23REFSL       BIT 0x8f
0000            343   _D0UDIS         BIT 0x98
0000            344   _D1UDIS         BIT 0x99
0000            345   _D2UDIS         BIT 0x9a
0000            346   _D3UDIS         BIT 0x9b
0000            347   _EX0            BIT 0xa8
0000            348   _ET0            BIT 0xa9
0000            349   _EX1            BIT 0xaa
0000            350   _ET1            BIT 0xab
0000            351   _ES0            BIT 0xac
0000            352   _ET2            BIT 0xad
0000            353   _ESPI0          BIT 0xae
0000            354   _EA             BIT 0xaf
0000            355   _PX0            BIT 0xb8
0000            356   _PT0            BIT 0xb9
0000            357   _PX1            BIT 0xba
0000            358   _PT1            BIT 0xbb
0000            359   _PS0            BIT 0xbc
0000            360   _PT2            BIT 0xbd
0000            361   _PSPI0          BIT 0xbe
0000            362   _P0_0           BIT 0x80
0000            363   _P0_1           BIT 0x81
0000            364   _P0_2           BIT 0x82
0000            365   _P0_3           BIT 0x83
0000            366   _P0_4           BIT 0x84
0000            367   _P0_5           BIT 0x85
0000            368   _P0_6           BIT 0x86
0000            369   _P0_7           BIT 0x87
0000            370   _P1_0           BIT 0x90
0000            371   _P1_1           BIT 0x91
0000            372   _P1_2           BIT 0x92
0000            373   _P1_3           BIT 0x93
0000            374   _P1_4           BIT 0x94
0000            375   _P1_5           BIT 0x95
0000            376   _P1_6           BIT 0x96
0000            377   _P1_7           BIT 0x97
0000            378   _P2_0           BIT 0xa0
0000            379   _P2_1           BIT 0xa1
0000            380   _P2_2           BIT 0xa2
0000            381   _P2_3           BIT 0xa3
0000            382   _P2_4           BIT 0xa4
0000            383   _P2_5           BIT 0xa5
0000            384   _P2_6           BIT 0xa6
0000            385   _P3_0           BIT 0xb0
0000            386   _P3_1           BIT 0xb1
0000            387   _P3_2           BIT 0xb2
0000            388   _P3_3           BIT 0xb3
0000            389   _P3_4           BIT 0xb4
0000            390   _P3_7           BIT 0xb7
0000            391   _CCF0           BIT 0xd8
0000            392   _CCF1           BIT 0xd9
0000            393   _CCF2           BIT 0xda
0000            394   _CCF3           BIT 0xdb
0000            395   _CCF4           BIT 0xdc
0000            396   _CCF5           BIT 0xdd
0000            397   _CR             BIT 0xde
0000            398   _CF             BIT 0xdf
0000            399   _PARITY         BIT 0xd0
0000            400   _F1             BIT 0xd1
0000            401   _OV             BIT 0xd2
0000            402   _RS0            BIT 0xd3
0000            403   _RS1            BIT 0xd4
0000            404   _F0             BIT 0xd5
0000            405   _AC             BIT 0xd6
0000            406   _CY             BIT 0xd7
0000            407   _RI             BIT 0x98
0000            408   _TI             BIT 0x99
0000            409   _RB8            BIT 0x9a
0000            410   _TB8            BIT 0x9b
0000            411   _REN            BIT 0x9c
0000            412   _CE             BIT 0x9d
0000            413   _SMODE          BIT 0x9e
0000            414   _RI1            BIT 0xc8
0000            415   _TI1            BIT 0xc9
0000            416   _RBX1           BIT 0xca
0000            417   _TBX1           BIT 0xcb
0000            418   _REN1           BIT 0xcc
0000            419   _PERR1          BIT 0xcd
0000            420   _OVR1           BIT 0xce
0000            421   _SI             BIT 0xc0
0000            422   _ACK            BIT 0xc1
0000            423   _ARBLOST        BIT 0xc2
0000            424   _ACKRQ          BIT 0xc3
0000            425   _STO            BIT 0xc4
0000            426   _STA            BIT 0xc5
0000            427   _TXMODE         BIT 0xc6
0000            428   _MASTER         BIT 0xc7
0000            429   _SPIEN          BIT 0xf8
0000            430   _TXNF           BIT 0xf9
0000            431   _NSSMD0         BIT 0xfa
0000            432   _NSSMD1         BIT 0xfb
0000            433   _RXOVRN         BIT 0xfc
0000            434   _MODF           BIT 0xfd
0000            435   _WCOL           BIT 0xfe
0000            436   _SPIF           BIT 0xff
0000            437   _IT0            BIT 0x88
0000            438   _IE0            BIT 0x89
0000            439   _IT1            BIT 0x8a
0000            440   _IE1            BIT 0x8b
0000            441   _TR0            BIT 0x8c
0000            442   _TF0            BIT 0x8d
0000            443   _TR1            BIT 0x8e
0000            444   _TF1            BIT 0x8f
0000            445   _T2XCLK0        BIT 0xc8
0000            446   _T2XCLK1        BIT 0xc9
0000            447   _TR2            BIT 0xca
0000            448   _T2SPLIT        BIT 0xcb
0000            449   _TF2CEN         BIT 0xcc
0000            450   _TF2LEN         BIT 0xcd
0000            451   _TF2L           BIT 0xce
0000            452   _TF2H           BIT 0xcf
0000            453   _T4XCLK0        BIT 0x98
0000            454   _T4XCLK1        BIT 0x99
0000            455   _TR4            BIT 0x9a
0000            456   _T4SPLIT        BIT 0x9b
0000            457   _TF4CEN         BIT 0x9c
0000            458   _TF4LEN         BIT 0x9d
0000            459   _TF4L           BIT 0x9e
0000            460   _TF4H           BIT 0x9f
0000            461   _T5XCLK0        BIT 0xc0
0000            462   _T5XCLK1        BIT 0xc1
0000            463   _TR5            BIT 0xc2
0000            464   _T5SPLIT        BIT 0xc3
0000            465   _TF5CEN         BIT 0xc4
0000            466   _TF5LEN         BIT 0xc5
0000            467   _TF5L           BIT 0xc6
0000            468   _TF5H           BIT 0xc7
0000            469   _RIE            BIT 0xd8
0000            470   _RXTO0          BIT 0xd9
0000            471   _RXTO1          BIT 0xda
0000            472   _RFRQ           BIT 0xdb
0000            473   _TIE            BIT 0xdc
0000            474   _TXHOLD         BIT 0xdd
0000            475   _TXNF1          BIT 0xde
0000            476   _TFRQ           BIT 0xdf
0000            477   ;--------------------------------------------------------
0000            478   ; overlayable register banks
0000            479   ;--------------------------------------------------------
0000            480            rbank0 segment data overlay
0000            481   ;--------------------------------------------------------
0000            482   ; internal ram data
0000            483   ;--------------------------------------------------------
0000            484            rseg R_DSEG
0000            485   _overflow_count:
0000            486            ds 2
0002            487   _calculate_period_s_PARM_2:
0002            488            ds 2
0004            489   _calculate_period_s_PARM_3:
0004            490            ds 2
0006            491   ;--------------------------------------------------------
0006            492   ; overlayable items in internal ram 
0006            493   ;--------------------------------------------------------
0000            494            rseg    R_OSEG
0000            495   ;--------------------------------------------------------
0000            496   ; indirectly addressable internal ram data
0000            497   ;--------------------------------------------------------
0000            498            rseg R_ISEG
0000            499   ;--------------------------------------------------------
0000            500   ; absolute internal ram data
0000            501   ;--------------------------------------------------------
0000            502            DSEG
0000            503   ;--------------------------------------------------------
0000            504   ; bit data
0000            505   ;--------------------------------------------------------
0000            506            rseg R_BSEG
0000            507   ;--------------------------------------------------------
0000            508   ; paged external ram data
0000            509   ;--------------------------------------------------------
0000            510            rseg R_PSEG
0000            511   ;--------------------------------------------------------
0000            512   ; external ram data
0000            513   ;--------------------------------------------------------
0000            514            rseg R_XSEG
0000            515   ;--------------------------------------------------------
0000            516   ; absolute external ram data
0000            517   ;--------------------------------------------------------
0000            518            XSEG
0000            519   ;--------------------------------------------------------
0000            520   ; external initialized ram data
0000            521   ;--------------------------------------------------------
0000            522            rseg R_IXSEG
0000            523            rseg R_HOME
0000            524            rseg R_GSINIT
0000            525            rseg R_CSEG
0000            526   ;--------------------------------------------------------
0000            527   ; Reset entry point and interrupt vectors
0000            528   ;--------------------------------------------------------
0000            529            CSEG at 0x0000
0000 020000     530            ljmp    _crt0
0003            531   ;--------------------------------------------------------
0003            532   ; global & static initialisations
0003            533   ;--------------------------------------------------------
0000            534            rseg R_HOME
0000            535            rseg R_GSINIT
0000            536            rseg R_GSINIT
0000            537   ;--------------------------------------------------------
0000            538   ; data variables initialization
0000            539   ;--------------------------------------------------------
0000            540            rseg R_DINIT
0000            541   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:24: int overflow_count = 0; // Timer 0 Overflow Counter
0000 E4         542            clr     a
0001 F520       543            mov     _overflow_count,a
0003 F521       544            mov     (_overflow_count + 1),a
0005            545            ; The linker places a 'ret' at the end of segment R_DINIT.
0005            546   ;--------------------------------------------------------
0005            547   ; code
0005            548   ;--------------------------------------------------------
0000            549            rseg R_CSEG
0000            550   ;------------------------------------------------------------
0000            551   ;Allocation info for local variables in function '_c51_external_startup'
0000            552   ;------------------------------------------------------------
0000            553   ;------------------------------------------------------------
0000            554   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:29: char _c51_external_startup(void) {
0000            555   ;        -----------------------------------------
0000            556   ;         function _c51_external_startup
0000            557   ;        -----------------------------------------
0000            558   __c51_external_startup:
0000            559            using   0
0000            560   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:31: SFRPAGE = 0x00;
0000 75A700     561            mov     _SFRPAGE,#0x00
0003            562   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:32: WDTCN = 0xDE; // First Key
0003 7597DE     563            mov     _WDTCN,#0xDE
0006            564   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:33: WDTCN = 0xAD; // Second Key
0006 7597AD     565            mov     _WDTCN,#0xAD
0009            566   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:35: VDM0CN |= 0x80;
0009 43FF80     567            orl     _VDM0CN,#0x80
000C            568   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:36: RSTSRC=0x02|0x04;  // Enable Reset on Missing Clock Detector and VDD
000C 75EF06     569            mov     _RSTSRC,#0x06
000F            570   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:44: SFRPAGE = 0x10;
000F 75A710     571            mov     _SFRPAGE,#0x10
0012            572   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:45: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     573            mov     _PFE0CN,#0x20
0015            574   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:46: SFRPAGE = 0x00;
0015 75A700     575            mov     _SFRPAGE,#0x00
0018            576   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:68: CLKSEL = 0x00;
0018 75A900     577            mov     _CLKSEL,#0x00
001B            578   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:69: CLKSEL = 0x00;
001B 75A900     579            mov     _CLKSEL,#0x00
001E            580   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:70: while ((CLKSEL & 0x80) == 0);
001E            581   L002001?:
001E E5A9       582            mov     a,_CLKSEL
0020 30E728     583            jnb     acc.7,L002001?
0023            584   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:71: CLKSEL = 0x03;
0023 75A903     585            mov     _CLKSEL,#0x03
0026            586   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:72: CLKSEL = 0x03;
0026 75A903     587            mov     _CLKSEL,#0x03
0029            588   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:73: while ((CLKSEL & 0x80) == 0);
0029            589   L002004?:
0029 E5A9       590            mov     a,_CLKSEL
002B 30E7A8     591            jnb     acc.7,L002004?
002E            592   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:78: P0MDOUT |= 0x10; // Enable UART0 TX As Push-Pull Output
002E 43A410     593            orl     _P0MDOUT,#0x10
0031            594   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:79: XBR0     = 0x01; // Enable UART0 on P0.4 (TX) and P0.5 (RX)
0031 75E101     595            mov     _XBR0,#0x01
0034            596   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:80: XBR1     = 0X00; // Enable T0 on P0.0
0034 75E200     597            mov     _XBR1,#0x00
0037            598   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:81: XBR2     = 0x40; // Enable Crossbar and Weak Pull-Ups
0037 75E340     599            mov     _XBR2,#0x40
003A            600   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:88: SCON0 = 0x10;
003A 759810     601            mov     _SCON0,#0x10
003D            602   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:89: CKCON0 |= 0b_0000_0000 ; // Timer 1 Uses SYSCLK / 12
003D 858E8E     603            mov     _CKCON0,_CKCON0
0040            604   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:90: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L)); // Set Timer1 Reload Value, Initial Value
0040 758DE6     605            mov     _TH1,#0xE6
0043            606   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:91: TL1 = TH1;    // Init Timer1
0043 858D8B     607            mov     _TL1,_TH1
0046            608   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:92: TMOD &= ~0xf0;  // TMOD: Timer 1 in 8-bit auto-reload
0046 53890F     609            anl     _TMOD,#0x0F
0049            610   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:93: TMOD |=  0x20;
0049 438920     611            orl     _TMOD,#0x20
004C            612   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:94: TR1 = 1; // Start Timer1
004C D28E       613            setb    _TR1
004E            614   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:95: TI = 1;  // Indicate TX0 Ready
004E D299       615            setb    _TI
0050            616   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:97: return 0;
0050 758200     617            mov     dpl,#0x00
0053 22         618            ret
0054            619   ;------------------------------------------------------------
0054            620   ;Allocation info for local variables in function 'Timer3us'
0054            621   ;------------------------------------------------------------
0054            622   ;us                        Allocated to registers r2 
0054            623   ;i                         Allocated to registers r3 
0054            624   ;------------------------------------------------------------
0054            625   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:103: void Timer3us(unsigned char us) {
0054            626   ;        -----------------------------------------
0054            627   ;         function Timer3us
0054            628   ;        -----------------------------------------
0054            629   _Timer3us:
0054 AA82       630            mov     r2,dpl
0056            631   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:107: CKCON0 |= 0b_0100_0000;
0056 438E40     632            orl     _CKCON0,#0x40
0059            633   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:109: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to Overflow in 1us
0059 7592B8     634            mov     _TMR3RL,#0xB8
005C 7593FF     635            mov     (_TMR3RL >> 8),#0xFF
005F            636   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:110: TMR3 = TMR3RL;                 // Initialize Timer3 for First Overflow
005F 859294     637            mov     _TMR3,_TMR3RL
0062 859395     638            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
0065            639   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:112: TMR3CN0 = 0x04;                 // Start Timer3 and Clear Overflow Flag
0065 759104     640            mov     _TMR3CN0,#0x04
0068            641   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:113: for (i = 0; i < us; i++) {      // Count Overflows (#Microseconds)
0068 7B00       642            mov     r3,#0x00
006A            643   L003004?:
006A C3         644            clr     c
006B EB         645            mov     a,r3
006C 9A         646            subb    a,r2
006D 5000       647            jnc     L003007?
006F            648   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:114: while (!(TMR3CN0 & 0x80));  // Wait for Overflow
006F            649   L003001?:
006F E591       650            mov     a,_TMR3CN0
0071 30E7A8     651            jnb     acc.7,L003001?
0074            652   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:115: TMR3CN0 &= ~(0x80);         // Clear Overflow Indicator
0074 53917F     653            anl     _TMR3CN0,#0x7F
0077            654   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:113: for (i = 0; i < us; i++) {      // Count Overflows (#Microseconds)
0077 0B         655            inc     r3
0078 8000       656            sjmp    L003004?
007A            657   L003007?:
007A            658   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:117: TMR3CN0 = 0 ;                   // Stop Timer3 and Clear Overflow Flag
007A 759100     659            mov     _TMR3CN0,#0x00
007D 22         660            ret
007E            661   ;------------------------------------------------------------
007E            662   ;Allocation info for local variables in function 'waitms'
007E            663   ;------------------------------------------------------------
007E            664   ;ms                        Allocated to registers r2 r3 
007E            665   ;j                         Allocated to registers r4 r5 
007E            666   ;k                         Allocated to registers r6 
007E            667   ;------------------------------------------------------------
007E            668   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:120: void waitms(unsigned int ms) {
007E            669   ;        -----------------------------------------
007E            670   ;         function waitms
007E            671   ;        -----------------------------------------
007E            672   _waitms:
007E AA82       673            mov     r2,dpl
0080 AB83       674            mov     r3,dph
0082            675   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:123: for (j=0; j<ms; j++)
0082 7C00       676            mov     r4,#0x00
0084 7D00       677            mov     r5,#0x00
0086            678   L004005?:
0086 C3         679            clr     c
0087 EC         680            mov     a,r4
0088 9A         681            subb    a,r2
0089 ED         682            mov     a,r5
008A 9B         683            subb    a,r3
008B 5000       684            jnc     L004009?
008D            685   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:124: for (k=0; k<4; k++) Timer3us(250);
008D 7E00       686            mov     r6,#0x00
008F            687   L004001?:
008F BE04E8     688            cjne    r6,#0x04,L004018?
0092            689   L004018?:
0092 5000       690            jnc     L004007?
0094 7582FA     691            mov     dpl,#0xFA
0097 C002       692            push    ar2
0099 C003       693            push    ar3
009B C004       694            push    ar4
009D C005       695            push    ar5
009F C006       696            push    ar6
00A1 120000     697            lcall   _Timer3us
00A4 D006       698            pop     ar6
00A6 D005       699            pop     ar5
00A8 D004       700            pop     ar4
00AA D003       701            pop     ar3
00AC D002       702            pop     ar2
00AE 0E         703            inc     r6
00AF 8000       704            sjmp    L004001?
00B1            705   L004007?:
00B1            706   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:123: for (j=0; j<ms; j++)
00B1 0C         707            inc     r4
00B2 BC0028     708            cjne    r4,#0x00,L004005?
00B5 0D         709            inc     r5
00B6 8000       710            sjmp    L004005?
00B8            711   L004009?:
00B8 22         712            ret
00B9            713   ;------------------------------------------------------------
00B9            714   ;Allocation info for local variables in function 'Serial_Init'
00B9            715   ;------------------------------------------------------------
00B9            716   ;------------------------------------------------------------
00B9            717   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:127: void Serial_Init(void) {
00B9            718   ;        -----------------------------------------
00B9            719   ;         function Serial_Init
00B9            720   ;        -----------------------------------------
00B9            721   _Serial_Init:
00B9            722   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:128: waitms(500); // Give Putty a chance to start.
00B9 9001F4     723            mov     dptr,#0x01F4
00BC 120000     724            lcall   _waitms
00BF            725   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:129: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
00BF 7468       726            mov     a,#__str_0
00C1 C0E0       727            push    acc
00C3 74B6       728            mov     a,#(__str_0 >> 8)
00C5 C0E0       729            push    acc
00C7 7480       730            mov     a,#0x80
00C9 C0E0       731            push    acc
00CB 120000     732            lcall   _printf
00CE 1581       733            dec     sp
00D0 1581       734            dec     sp
00D2 1581       735            dec     sp
00D4 22         736            ret
00D5            737   ;------------------------------------------------------------
00D5            738   ;Allocation info for local variables in function 'TIMER0_Init'
00D5            739   ;------------------------------------------------------------
00D5            740   ;------------------------------------------------------------
00D5            741   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:132: void TIMER0_Init(void) {
00D5            742   ;        -----------------------------------------
00D5            743   ;         function TIMER0_Init
00D5            744   ;        -----------------------------------------
00D5            745   _TIMER0_Init:
00D5            746   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:133: TMOD &= 0b_1111_0000; // Set the Bits of Timer/Counter 0 to 0
00D5 5389F0     747            anl     _TMOD,#0xF0
00D8            748   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:134: TMOD |= 0b_0000_0001; // Timer/Counter 0 Used As 16-Bit Timer
00D8 438901     749            orl     _TMOD,#0x01
00DB            750   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:135: TR0 = 0; // Stop Timer/Counter 0
00DB C28C       751            clr     _TR0
00DD 22         752            ret
00DE            753   ;------------------------------------------------------------
00DE            754   ;Allocation info for local variables in function 'calculate_period_s'
00DE            755   ;------------------------------------------------------------
00DE            756   ;TH0                       Allocated with name '_calculate_period_s_PARM_2'
00DE            757   ;TL0                       Allocated with name '_calculate_period_s_PARM_3'
00DE            758   ;overflow_count            Allocated to registers r2 r3 
00DE            759   ;------------------------------------------------------------
00DE            760   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:138: float calculate_period_s(int overflow_count, int TH0, int TL0) {
00DE            761   ;        -----------------------------------------
00DE            762   ;         function calculate_period_s
00DE            763   ;        -----------------------------------------
00DE            764   _calculate_period_s:
00DE            765   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:139: return ((overflow_count * MAX_16_BIT)  + (TH0 * MAX_8_BIT) + TL0) * (12.0 / SYSCLK);
00DE 120000     766            lcall   ___sint2fs
00E1 AA82       767            mov     r2,dpl
00E3 AB83       768            mov     r3,dph
00E5 ACF0       769            mov     r4,b
00E7 FD         770            mov     r5,a
00E8 C002       771            push    ar2
00EA C003       772            push    ar3
00EC C004       773            push    ar4
00EE C005       774            push    ar5
00F0 900000     775            mov     dptr,#0x0000
00F3 75F080     776            mov     b,#0x80
00F6 7447       777            mov     a,#0x47
00F8 120000     778            lcall   ___fsmul
00FB AA82       779            mov     r2,dpl
00FD AB83       780            mov     r3,dph
00FF ACF0       781            mov     r4,b
0101 FD         782            mov     r5,a
0102 E581       783            mov     a,sp
0104 24FC       784            add     a,#0xfc
0106 F581       785            mov     sp,a
0108 85E082     786            mov     dpl,_calculate_period_s_PARM_2
010B 85E183     787            mov     dph,(_calculate_period_s_PARM_2 + 1)
010E C002       788            push    ar2
0110 C003       789            push    ar3
0112 C004       790            push    ar4
0114 C005       791            push    ar5
0116 120000     792            lcall   ___sint2fs
0119 AE82       793            mov     r6,dpl
011B AF83       794            mov     r7,dph
011D A8F0       795            mov     r0,b
011F F9         796            mov     r1,a
0120 C006       797            push    ar6
0122 C007       798            push    ar7
0124 C000       799            push    ar0
0126 C001       800            push    ar1
0128 900000     801            mov     dptr,#0x0000
012B 75F080     802            mov     b,#0x80
012E 7443       803            mov     a,#0x43
0130 120000     804            lcall   ___fsmul
0133 AE82       805            mov     r6,dpl
0135 AF83       806            mov     r7,dph
0137 A8F0       807            mov     r0,b
0139 F9         808            mov     r1,a
013A E581       809            mov     a,sp
013C 24FC       810            add     a,#0xfc
013E F581       811            mov     sp,a
0140 D005       812            pop     ar5
0142 D004       813            pop     ar4
0144 D003       814            pop     ar3
0146 D002       815            pop     ar2
0148 C006       816            push    ar6
014A C007       817            push    ar7
014C C000       818            push    ar0
014E C001       819            push    ar1
0150 8A82       820            mov     dpl,r2
0152 8B83       821            mov     dph,r3
0154 8CF0       822            mov     b,r4
0156 ED         823            mov     a,r5
0157 120000     824            lcall   ___fsadd
015A AA82       825            mov     r2,dpl
015C AB83       826            mov     r3,dph
015E ACF0       827            mov     r4,b
0160 FD         828            mov     r5,a
0161 E581       829            mov     a,sp
0163 24FC       830            add     a,#0xfc
0165 F581       831            mov     sp,a
0167 859082     832            mov     dpl,_calculate_period_s_PARM_3
016A 859183     833            mov     dph,(_calculate_period_s_PARM_3 + 1)
016D C002       834            push    ar2
016F C003       835            push    ar3
0171 C004       836            push    ar4
0173 C005       837            push    ar5
0175 120000     838            lcall   ___sint2fs
0178 AE82       839            mov     r6,dpl
017A AF83       840            mov     r7,dph
017C A8F0       841            mov     r0,b
017E F9         842            mov     r1,a
017F D005       843            pop     ar5
0181 D004       844            pop     ar4
0183 D003       845            pop     ar3
0185 D002       846            pop     ar2
0187 C006       847            push    ar6
0189 C007       848            push    ar7
018B C000       849            push    ar0
018D C001       850            push    ar1
018F 8A82       851            mov     dpl,r2
0191 8B83       852            mov     dph,r3
0193 8CF0       853            mov     b,r4
0195 ED         854            mov     a,r5
0196 120000     855            lcall   ___fsadd
0199 AA82       856            mov     r2,dpl
019B AB83       857            mov     r3,dph
019D ACF0       858            mov     r4,b
019F FD         859            mov     r5,a
01A0 E581       860            mov     a,sp
01A2 24FC       861            add     a,#0xfc
01A4 F581       862            mov     sp,a
01A6 C002       863            push    ar2
01A8 C003       864            push    ar3
01AA C004       865            push    ar4
01AC C005       866            push    ar5
01AE 90F4FC     867            mov     dptr,#0xF4FC
01B1 75F032     868            mov     b,#0x32
01B4 7434       869            mov     a,#0x34
01B6 120000     870            lcall   ___fsmul
01B9 AA82       871            mov     r2,dpl
01BB AB83       872            mov     r3,dph
01BD ACF0       873            mov     r4,b
01BF FD         874            mov     r5,a
01C0 E581       875            mov     a,sp
01C2 24FC       876            add     a,#0xfc
01C4 F581       877            mov     sp,a
01C6 8A82       878            mov     dpl,r2
01C8 8B83       879            mov     dph,r3
01CA 8CF0       880            mov     b,r4
01CC ED         881            mov     a,r5
01CD 22         882            ret
01CE            883   ;------------------------------------------------------------
01CE            884   ;Allocation info for local variables in function 'calculate_freq_Hz'
01CE            885   ;------------------------------------------------------------
01CE            886   ;period_s                  Allocated to registers r2 r3 r4 r5 
01CE            887   ;------------------------------------------------------------
01CE            888   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:142: float calculate_freq_Hz(float period_s) {
01CE            889   ;        -----------------------------------------
01CE            890   ;         function calculate_freq_Hz
01CE            891   ;        -----------------------------------------
01CE            892   _calculate_freq_Hz:
01CE AA82       893            mov     r2,dpl
01D0 AB83       894            mov     r3,dph
01D2 ACF0       895            mov     r4,b
01D4 FD         896            mov     r5,a
01D5            897   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:143: return (1.0 / period_s);
01D5 C002       898            push    ar2
01D7 C003       899            push    ar3
01D9 C004       900            push    ar4
01DB C005       901            push    ar5
01DD 900000     902            mov     dptr,#0x0000
01E0 75F080     903            mov     b,#0x80
01E3 743F       904            mov     a,#0x3F
01E5 120000     905            lcall   ___fsdiv
01E8 AA82       906            mov     r2,dpl
01EA AB83       907            mov     r3,dph
01EC ACF0       908            mov     r4,b
01EE FD         909            mov     r5,a
01EF E581       910            mov     a,sp
01F1 24FC       911            add     a,#0xfc
01F3 F581       912            mov     sp,a
01F5 8A82       913            mov     dpl,r2
01F7 8B83       914            mov     dph,r3
01F9 8CF0       915            mov     b,r4
01FB ED         916            mov     a,r5
01FC 22         917            ret
01FD            918   ;------------------------------------------------------------
01FD            919   ;Allocation info for local variables in function 'main'
01FD            920   ;------------------------------------------------------------
01FD            921   ;period_s                  Allocated to registers r2 r3 r4 r5 
01FD            922   ;freq_Hz                   Allocated to registers 
01FD            923   ;capacitance_nF            Allocated with name '_main_capacitance_nF_1_39'
01FD            924   ;------------------------------------------------------------
01FD            925   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:146: void main(void) {
01FD            926   ;        -----------------------------------------
01FD            927   ;         function main
01FD            928   ;        -----------------------------------------
01FD            929   _main:
01FD            930   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:149: TIMER0_Init(); // Initialize Timer 0
01FD 120000     931            lcall   _TIMER0_Init
0200            932   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:150: Serial_Init(); // Initialize Serial Port
0200 120000     933            lcall   _Serial_Init
0203            934   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:152: while(1) {
0203            935   L009018?:
0203            936   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:154: TL0 = 0;
0203 758A00     937            mov     _TL0,#0x00
0206            938   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:155: TH0 = 0;
0206 758C00     939            mov     _TH0,#0x00
0209            940   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:156: TF0 = 0;
0209 C28D       941            clr     _TF0
020B            942   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:157: overflow_count = 0;
020B E4         943            clr     a
020C F520       944            mov     _overflow_count,a
020E F521       945            mov     (_overflow_count + 1),a
0210            946   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:159: while (EFM8_SIGNAL != 0); // Wait for Signal == 0
0210            947   L009001?:
0210 2081A8     948            jb      _P0_1,L009001?
0213            949   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:160: while (EFM8_SIGNAL != 1); // Wait for Signal == 1
0213            950   L009004?:
0213 3081E8     951            jnb     _P0_1,L009004?
0216            952   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:162: TR0 = 1; // Start Timer
0216 D28C       953            setb    _TR0
0218            954   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:164: while (EFM8_SIGNAL != 0) { // Wait for Signal == 0
0218            955   L009009?:
0218 308168     956            jnb     _P0_1,L009014?
021B            957   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:165: if (TF0 == 1) { // Did 16-Bit Timer Overflow?
021B            958   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:166: TF0 = 0;
021B 108DA8     959            jbc     _TF0,L009035?
021E 8000       960            sjmp    L009009?
0220            961   L009035?:
0220            962   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:167: overflow_count++;
0220 0520       963            inc     _overflow_count
0222 E4         964            clr     a
0223 B52028     965            cjne    a,_overflow_count,L009009?
0226 0521       966            inc     (_overflow_count + 1)
0228            967   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:170: while (EFM8_SIGNAL != 1) { // Wait for Signal == 1
0228 8000       968            sjmp    L009009?
022A            969   L009014?:
022A 2081E8     970            jb      _P0_1,L009016?
022D            971   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:171: if (TF0 == 1) { // Did 16-Bit Timer Overflow?
022D            972   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:172: TF0 = 0;
022D 108D28     973            jbc     _TF0,L009037?
0230 8000       974            sjmp    L009014?
0232            975   L009037?:
0232            976   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:173: overflow_count++;
0232 0520       977            inc     _overflow_count
0234 E4         978            clr     a
0235 B52068     979            cjne    a,_overflow_count,L009014?
0238 0521       980            inc     (_overflow_count + 1)
023A 8000       981            sjmp    L009014?
023C            982   L009016?:
023C            983   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:177: TR0 = 0; // Stop Timer 0. The 24-bit number [overflow_count-TH0-TL0] has the period!
023C C28C       984            clr     _TR0
023E            985   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:178: period_s = calculate_period_s(overflow_count, TH0, TL0);
023E 858CE0     986            mov     _calculate_period_s_PARM_2,_TH0
0241 75E100     987            mov     (_calculate_period_s_PARM_2 + 1),#0x00
0244 858A90     988            mov     _calculate_period_s_PARM_3,_TL0
0247 759100     989            mov     (_calculate_period_s_PARM_3 + 1),#0x00
024A 852082     990            mov     dpl,_overflow_count
024D 852183     991            mov     dph,(_overflow_count + 1)
0250 120000     992            lcall   _calculate_period_s
0253            993   ;        C:\Muntakim_Files\School\School_Work\Engineering_Bachelors\2023\ELEC_291\Projects\Project_2\ELEC291Project2\EFM8\Robot\main.c:179: freq_Hz = calculate_freq_Hz(period_s);
0253 120000     994            lcall   _calculate_freq_Hz
0256 8000       995            sjmp    L009018?
0258            996            rseg R_CSEG
0258            997   
0000            998            rseg R_XINIT
0000            999   
0000           1000            rseg R_CONST
0000           1001   __str_0:
0000 1B        1002            db 0x1B
0001 5B324A    1003            db '[2J'
0004 00        1004            db 0x00
0005           1005   
0003           1006            CSEG
0003           1007   
0003           1008   end
